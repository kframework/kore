Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "IMP"
            , moduleSentences =
                [ ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Bool" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "true" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "false" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "and" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "not" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Int" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "zero" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "succ" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "plus" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "one" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "two" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "three" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "div" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "leq" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "neq" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Id" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "id" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Id" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "List" :: Id Object
                    , sentenceSortParameters =
                        [ SortVariable (Id "S" :: Id Object)
                        ]
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "nil" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "cons" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                        , SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "append" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "listItem" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Set" :: Id Object
                    , sentenceSortParameters =
                        [ SortVariable (Id "S" :: Id Object)
                        ]
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "emptySet" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Set" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "union" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Set" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Set" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Set" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "inSet" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                        , SortActualSort SortActual
                            { sortActualName = Id "Set" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Bool" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        , UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = Id "Set" :: Id Object
                                    , sortActualSorts =
                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                        ]
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "union" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "S" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "Set" :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                        ]
                                                    }
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "emptySet" :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren = []
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                    { variableName = Id "S" :: Id Object
                                    , variableSort =
                                        SortActualSort SortActual
                                            { sortActualName = Id "Set" :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                ]
                                            }
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Map" :: Id Object
                    , sentenceSortParameters =
                        [ SortVariable (Id "S1" :: Id Object)
                        , SortVariable (Id "S2" :: Id Object)
                        ]
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "bind" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                        , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "emp" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "merge" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "keys" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Set" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Ctxt" :: Id Object
                    , sentenceSortParameters =
                        [ SortVariable (Id "S1" :: Id Object)
                        , SortVariable (Id "S2" :: Id Object)
                        ]
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "gamma0" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                        , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Ctxt" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "app" :: Id Object
                            , symbolParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Ctxt" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                        , SortVariableSort (SortVariable (Id "S1" :: Id Object))
                        ]
                    , sentenceSymbolReturnSort =
                        SortVariableSort (SortVariable (Id "S2" :: Id Object))
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceAliasSentence SentenceAlias
                    { sentenceAliasAlias =
                        Alias
                            { aliasConstructor = Id "gamma" :: Id Object
                            , aliasParams =
                                [ SortVariable (Id "S1" :: Id Object)
                                , SortVariable (Id "S2" :: Id Object)
                                ]
                            }
                    , sentenceAliasSorts =
                        [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                        , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                        ]
                    , sentenceAliasReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Ctxt" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S1" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S2" :: Id Object))
                                ]
                            }
                    , sentenceAliasAttributes = Attributes []
                    })
                , ObjectSentence (SentenceAliasSentence SentenceAlias
                    { sentenceAliasAlias =
                        Alias
                            { aliasConstructor = Id "idctxt" :: Id Object
                            , aliasParams =
                                [ SortVariable (Id "S" :: Id Object)
                                ]
                            }
                    , sentenceAliasSorts = []
                    , sentenceAliasReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Ctxt" :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                , SortVariableSort (SortVariable (Id "S" :: Id Object))
                                ]
                            }
                    , sentenceAliasAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        , UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = Id "Ctxt" :: Id Object
                                    , sortActualSorts =
                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                        , SortVariableSort (SortVariable (Id "S" :: Id Object))
                                        ]
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "idctxt" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                ]
                                            }
                                    , applicationChildren = []
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "gamma" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                , SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "X" :: Id Object
                                            , variableSort =
                                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "X" :: Id Object
                                            , variableSort =
                                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        , UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                    { variableName = Id "T" :: Id Object
                                    , variableSort =
                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "app" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                , SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "idctxt" :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren = []
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "T" :: Id Object
                                            , variableSort =
                                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "AExp" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "intAsAExp" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Int" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "idAsAExp" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Id" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "plusAExp" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "plusAExp")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "plusAExp")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "divAExp" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "divAExp")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "divAExp")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = Id "AExp" :: Id Object
                                    , sortActualSorts = []
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "divAExp" :: Id Object
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "X" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "Y" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "app" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                , SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "gamma" :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                        , SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = Id "HOLE" :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "divAExp" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "HOLE" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "AExp" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "Y" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "AExp" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "X" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "divAExp")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = Id "AExp" :: Id Object
                                    , sortActualSorts = []
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "divAExp" :: Id Object
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "X" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "Y" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "app" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                , SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "gamma" :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                        , SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = Id "HOLE" :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "divAExp" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "X" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "AExp" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "HOLE" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "AExp" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "Y" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "divAExp")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "BExp" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Block" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "emptyBlock" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Block" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "block" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Block" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Stmt" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "blockAsStmt" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Block" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "asgn" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Id" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "AExp" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "asgn")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = Id "Stmt" :: Id Object
                                    , sortActualSorts = []
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "asgn" :: Id Object
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "X" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "Id" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "E" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "app" :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                , SortActualSort SortActual
                                                    { sortActualName = Id "Stmt" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "gamma" :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                        , SortActualSort SortActual
                                                            { sortActualName = Id "Stmt" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = Id "HOLE" :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = Id "AExp" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "asgn" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "X" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Id" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "HOLE" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "AExp" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "E" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "asgn")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "if" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "BExp" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Block" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Block" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "if")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        , UnifiedObject (SortVariable (Id "R" :: Id Object))
                        , UnifiedMeta (SortVariable (Id "#R" :: Id Meta))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ImpliesPattern Implies
                            { impliesSort =
                                SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                            , impliesFirst =
                                Fix (UnifiedPattern (UnifiedMeta (Rotate31 (NotPattern Not
                                    { notSort =
                                        SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                                    , notChild =
                                        Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "#occursFree" :: Id Meta
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "#variable" :: Id Meta
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "HOLE")))))
                                                        , Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "#S" :: Id Meta
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "#Sort" :: Id Meta
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "if" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                        , SortActualSort SortActual
                                                                            { sortActualName = Id "BExp" :: Id Object
                                                                            , sortActualSorts = []
                                                                            }
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "#C" :: Id Meta
                                                                    , variableSort =
                                                                        SortActualSort SortActual
                                                                            { sortActualName = Id "#Pattern" :: Id Meta
                                                                            , sortActualSorts = []
                                                                            }
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "T" :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                    }))))
                                                                ]
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "B1" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Block" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "B2" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Block" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                    }))))
                            , impliesSecond =
                                Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "#provable" :: Id Meta
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                                            { equalsOperandSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "Stmt" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            , equalsResultSort =
                                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                                            , equalsFirst =
                                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "if" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                        , SortActualSort SortActual
                                                                            { sortActualName = Id "BExp" :: Id Object
                                                                            , sortActualSorts = []
                                                                            }
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "#C" :: Id Meta
                                                                    , variableSort =
                                                                        SortActualSort SortActual
                                                                            { sortActualName = Id "#Pattern" :: Id Meta
                                                                            , sortActualSorts = []
                                                                            }
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "T" :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                    }))))
                                                                ]
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "B1" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Block" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "B2" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Block" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                            , equalsSecond =
                                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "app" :: Id Object
                                                            , symbolOrAliasParams =
                                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                , SortActualSort SortActual
                                                                    { sortActualName = Id "Stmt" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                                ]
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = Id "gamma" :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                        , SortActualSort SortActual
                                                                            { sortActualName = Id "Stmt" :: Id Object
                                                                            , sortActualSorts = []
                                                                            }
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "HOLE" :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                                    { applicationSymbolOrAlias =
                                                                        SymbolOrAlias
                                                                            { symbolOrAliasConstructor = Id "if" :: Id Object
                                                                            , symbolOrAliasParams = []
                                                                            }
                                                                    , applicationChildren =
                                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                                            { applicationSymbolOrAlias =
                                                                                SymbolOrAlias
                                                                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                                                                    , symbolOrAliasParams =
                                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                                        , SortActualSort SortActual
                                                                                            { sortActualName = Id "BExp" :: Id Object
                                                                                            , sortActualSorts = []
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                            , applicationChildren =
                                                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                                                    { variableName = Id "#C" :: Id Meta
                                                                                    , variableSort =
                                                                                        SortActualSort SortActual
                                                                                            { sortActualName = Id "#Pattern" :: Id Meta
                                                                                            , sortActualSorts = []
                                                                                            }
                                                                                    }))))
                                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                                    { variableName = Id "HOLE" :: Id Object
                                                                                    , variableSort =
                                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                                    }))))
                                                                                ]
                                                                            }))))
                                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                            { variableName = Id "B1" :: Id Object
                                                                            , variableSort =
                                                                                SortActualSort SortActual
                                                                                    { sortActualName = Id "Block" :: Id Object
                                                                                    , sortActualSorts = []
                                                                                    }
                                                                            }))))
                                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                            { variableName = Id "B2" :: Id Object
                                                                            , variableSort =
                                                                                SortActualSort SortActual
                                                                                    { sortActualName = Id "Block" :: Id Object
                                                                                    , sortActualSorts = []
                                                                                    }
                                                                            }))))
                                                                        ]
                                                                    }))))
                                                                ]
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "T" :: Id Object
                                                            , variableSort =
                                                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                            }))))
                                                        ]
                                                    }))))
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "if")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "while" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "BExp" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Block" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "seq" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "seq")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        , UnifiedObject (SortVariable (Id "R" :: Id Object))
                        , UnifiedMeta (SortVariable (Id "#R" :: Id Meta))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ImpliesPattern Implies
                            { impliesSort =
                                SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                            , impliesFirst =
                                Fix (UnifiedPattern (UnifiedMeta (Rotate31 (NotPattern Not
                                    { notSort =
                                        SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                                    , notChild =
                                        Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "#occursFree" :: Id Meta
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "#variable" :: Id Meta
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "HOLE")))))
                                                        , Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "#S" :: Id Meta
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "#Sort" :: Id Meta
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "seq" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                        , SortActualSort SortActual
                                                                            { sortActualName = Id "Stmt" :: Id Object
                                                                            , sortActualSorts = []
                                                                            }
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "#C" :: Id Meta
                                                                    , variableSort =
                                                                        SortActualSort SortActual
                                                                            { sortActualName = Id "#Pattern" :: Id Meta
                                                                            , sortActualSorts = []
                                                                            }
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "T" :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                    }))))
                                                                ]
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "P" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Stmt" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                    }))))
                            , impliesSecond =
                                Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "#provable" :: Id Meta
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable (Id "#R" :: Id Meta))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                                            { equalsOperandSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "Stmt" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            , equalsResultSort =
                                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                                            , equalsFirst =
                                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "seq" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                        , SortActualSort SortActual
                                                                            { sortActualName = Id "Stmt" :: Id Object
                                                                            , sortActualSorts = []
                                                                            }
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "#C" :: Id Meta
                                                                    , variableSort =
                                                                        SortActualSort SortActual
                                                                            { sortActualName = Id "#Pattern" :: Id Meta
                                                                            , sortActualSorts = []
                                                                            }
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "T" :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                    }))))
                                                                ]
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "P" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Stmt" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                            , equalsSecond =
                                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "app" :: Id Object
                                                            , symbolOrAliasParams =
                                                                [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                , SortActualSort SortActual
                                                                    { sortActualName = Id "Stmt" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                                ]
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = Id "gamma" :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                        , SortActualSort SortActual
                                                                            { sortActualName = Id "Stmt" :: Id Object
                                                                            , sortActualSorts = []
                                                                            }
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = Id "HOLE" :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                                    { applicationSymbolOrAlias =
                                                                        SymbolOrAlias
                                                                            { symbolOrAliasConstructor = Id "seq" :: Id Object
                                                                            , symbolOrAliasParams = []
                                                                            }
                                                                    , applicationChildren =
                                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                                            { applicationSymbolOrAlias =
                                                                                SymbolOrAlias
                                                                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                                                                    , symbolOrAliasParams =
                                                                                        [ SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                                        , SortActualSort SortActual
                                                                                            { sortActualName = Id "Stmt" :: Id Object
                                                                                            , sortActualSorts = []
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                            , applicationChildren =
                                                                                [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (VariablePattern Variable
                                                                                    { variableName = Id "#C" :: Id Meta
                                                                                    , variableSort =
                                                                                        SortActualSort SortActual
                                                                                            { sortActualName = Id "#Pattern" :: Id Meta
                                                                                            , sortActualSorts = []
                                                                                            }
                                                                                    }))))
                                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                                    { variableName = Id "HOLE" :: Id Object
                                                                                    , variableSort =
                                                                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                                                    }))))
                                                                                ]
                                                                            }))))
                                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                            { variableName = Id "P" :: Id Object
                                                                            , variableSort =
                                                                                SortActualSort SortActual
                                                                                    { sortActualName = Id "Stmt" :: Id Object
                                                                                    , sortActualSorts = []
                                                                                    }
                                                                            }))))
                                                                        ]
                                                                    }))))
                                                                ]
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "T" :: Id Object
                                                            , variableSort =
                                                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                            }))))
                                                        ]
                                                    }))))
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "seq")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "Pgm" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "pgm" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "List" :: Id Object
                            , sortActualSorts =
                                [ SortActualSort SortActual
                                    { sortActualName = Id "Id" :: Id Object
                                    , sortActualSorts = []
                                    }
                                ]
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "Stmt" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "Pgm" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "pgm")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "pgm")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "KCell" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "kcell" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Pgm" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "KCell" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "kcell")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "StateCell" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "statecell" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Map" :: Id Object
                            , sortActualSorts =
                                [ SortActualSort SortActual
                                    { sortActualName = Id "Id" :: Id Object
                                    , sortActualSorts = []
                                    }
                                , SortActualSort SortActual
                                    { sortActualName = Id "Int" :: Id Object
                                    , sortActualSorts = []
                                    }
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "StateCell" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "statecell")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = Id "TopCell" :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "top" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "KCell" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "StateCell" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "TopCell" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "topcell" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "KCell" :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = Id "StateCell" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "TopCell" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "topcell")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "firstArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = Id "strict" :: Id Object
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (DomainValuePattern DomainValue
                                        { domainValueSort =
                                            SortActualSort SortActual
                                                { sortActualName = Id "Strict" :: Id Object
                                                , sortActualSorts = []
                                                }
                                        , domainValueChild =
                                            Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "topcell")))))
                                        }))))
                                    , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                        { applicationSymbolOrAlias =
                                            SymbolOrAlias
                                                { symbolOrAliasConstructor = Id "secondArgument" :: Id Object
                                                , symbolOrAliasParams = []
                                                }
                                        , applicationChildren = []
                                        }))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = Id "krun" :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = Id "Pgm" :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = Id "TopCell" :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "R" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = Id "TopCell" :: Id Object
                                    , sortActualSorts = []
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable (Id "R" :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "krun" :: Id Object
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = Id "P" :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = Id "Pgm" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = Id "top" :: Id Object
                                            , symbolOrAliasParams = []
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "kcell" :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = Id "P" :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = Id "Pgm" :: Id Object
                                                            , sortActualSorts = []
                                                            }
                                                    }))))
                                                ]
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "statecell" :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "emp" :: Id Object
                                                            , symbolOrAliasParams =
                                                                [ SortActualSort SortActual
                                                                    { sortActualName = Id "Id" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                                , SortActualSort SortActual
                                                                    { sortActualName = Id "Int" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                                ]
                                                            }
                                                    , applicationChildren = []
                                                    }))))
                                                ]
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                            { applicationSymbolOrAlias =
                                SymbolOrAlias
                                    { symbolOrAliasConstructor = Id "app" :: Id Object
                                    , symbolOrAliasParams =
                                        [ SortActualSort SortActual
                                            { sortActualName = Id "AExp" :: Id Object
                                            , sortActualSorts = []
                                            }
                                        , SortVariableSort (SortVariable (Id "S" :: Id Object))
                                        ]
                                    }
                            , applicationChildren =
                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                    { variableName = Id "C" :: Id Object
                                    , variableSort =
                                        SortActualSort SortActual
                                            { sortActualName = Id "Ctxt" :: Id Object
                                            , sortActualSorts =
                                                [ SortActualSort SortActual
                                                    { sortActualName = Id "AExp" :: Id Object
                                                    , sortActualSorts = []
                                                    }
                                                , SortVariableSort (SortVariable (Id "S" :: Id Object))
                                                ]
                                            }
                                    }))))
                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (RewritesPattern Rewrites
                                    { rewritesSort =
                                        SortActualSort SortActual
                                            { sortActualName = Id "AExp" :: Id Object
                                            , sortActualSorts = []
                                            }
                                    , rewritesFirst =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "plusAExp" :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "intAsAExp" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "X" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Int" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "intAsAExp" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "Y" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Int" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                    , rewritesSecond =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = Id "intAsAExp" :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = Id "plus" :: Id Object
                                                            , symbolOrAliasParams = []
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "X" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Int" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = Id "Y" :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = Id "Int" :: Id Object
                                                                    , sortActualSorts = []
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                                ]
                                            }))))
                                    }))))
                                ]
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }