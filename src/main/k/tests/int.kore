module INT

  import BOOL []

  sort Int{} []

  symbol zero{}() : Int{} []

  symbol succ{}(Int{}) : Int{} []

  symbol one{}() : Int{} []

  symbol two{}() : Int{} []

  symbol three{}() : Int{} []

  symbol plusInt{}(Int{}, Int{}) : Int{} []

  symbol minusInt{}(Int{}, Int{}) : Int{} []

  symbol divInt{}(Int{}, Int{}) : Int{} []

  symbol leqInt{}(Int{}, Int{}) : Bool{} []

  symbol neqInt{}(Int{}, Int{}) : Bool{} []

  /* TODO:: Functional axioms for all symbols */

  /* exists t . zero = t
     exists t . one = t
     exists t . two = t
     exists t . three = t
  */
  
  axiom{R}
    \exists{R}(
      T:Int{},
      \equals{Int{},R}(
        zero{}(),
        T:Int{}))
  []

  axiom{R}
    \exists{R}(
      T:Int{},
      \equals{Int{},R}(
        one{}(),
        T:Int{}))
  []

  axiom{R}
    \exists{R}(
      T:Int{},
      \equals{Int{},R}(
        two{}(),
        T:Int{}))
  []

  axiom{R}
    \exists{R}(
      T:Int{},
      \equals{Int{},R}(
        three{}(),
        T:Int{}))
  []

  /*
     forall x y . exists t . plusInt(x,y) = t
     forall x y . exists t . minusInt(x,y) = t
     forall x y . exists t . divInt(x,y) = t
     forall x y . exists t . leqInt(x,y) = t  (t is Bool)
     forall x y . exists t . neqInt(x,y) = t  (t is Bool)
  */

  axiom{R}
    \forall{R}(
      X:Int{},
      \forall{R}(
        Y:Int{},
        \exists{R}(
          T:Int{},
          \equals{Int{},R}(
            plusInt{}(X:Int{},Y:Int{}),
            T:Int{}))))
  []

  axiom{R}
    \forall{R}(
      X:Int{},
      \forall{R}(
        Y:Int{},
        \exists{R}(
          T:Int{},
          \equals{Int{},R}(
            minusInt{}(X:Int{},Y:Int{}),
            T:Int{}))))
  []

  axiom{R}
    \forall{R}(
      X:Int{},
      \forall{R}(
        Y:Int{},
        \and{Int{}}(
          \not{Int{},R}(
            \equals{Int{},R}(Y:Int{},zero{}()),
            \exists{R}(
              T:Int{},
              \equals{Int{},R}(
                divInt{}(X:Int{},Y:Int{}),
                T:Int{}),
              \not))))
  []

  axiom{R}
    \forall{R}(
      X:Int{},
      \forall{R}(
        Y:Int{},
        \exists{R}(
          T:Bool{},
          \equals{Bool{},R}(
            leqInt{}(X:Int{},Y:Int{}),
            T:Bool{}))))
  []

  axiom{R}
    \forall{R}(
      X:Int{},
      \forall{R}(
        Y:Int{},
        \exists{R}(
          T:Bool{},
          \equals{Bool{},R}(
            neqInt{}(X:Int{},Y:Int{}),
            T:Bool{}))))
  []

  /* Constructor axioms. Int has zero and succ as constructors:
   * (No Junk) zero \/ exists x . succ(x)
   * (No Confusion Diff Constructor)
   *    forall x . not(zero /\ succ(x))
   * (No Confusion Same Constructor)
   *    forall x y . succ(x) /\ succ(y) -> succ(x /\ y)
   */

  axiom{}
    \or{Int{}}(zero{}(),\exists{}(X:Int(),succ{}(X:Int{})))
  []

  axiom{}
    \not{Int{}}(\and{Int{}}(zero{}(),\exists{}(X:Int(),succ{}(X:Int{}):Int()) ))
  []

  axiom{}
    \forall{}(
      X:Int{},
      \forall{}(
        Y:Int{},
        \implies{}(
          \and{Int{}}(succ{}(X:Int{}),succ{}(Y:Int{})),
          succ{}(\and{Int{}}(succ{}(X:Int{}),succ{}(Y:Int{}))))))

  /* Usual axioms about integers.

     0 + n = n
     S(x) + y = S(x + y)

     x - 0 = x
     S(x) - S(y) = x - y

     x / 1 = x
     x / y = 1 + (x-y) / y
*/

  axiom{R}
    \forall{R}(
       X:Int{},
       \equals{Int{},R}(
          plusInt{}(zero{}(),X:Int{}),
          X:Int{}))
  []
  
  axiom{R}
    \forall{R}(
       X:Int{},
       \forall{R}(
         Y:Int{},
         \equals{Int{},R}(
            plusInt{}(succ{}(X:Int),Y:Int),
            succ{}(plusInt{}(X:Int,Y:Int)))))
  []

  axiom{R}
    \forall{R}(
       X:Int{},
       \equals{Int{},R}(
          minusInt{}(X:Int,zero{}()),
          X:Int{}))
  []

  axiom{R}
    \forall{R}(
       X:Int{},
       \forall{R}(
         Y:Int{},
         \equals{Int{},R}(
            minusInt{}(succ{}(X:Int{}),succ{}(Y:Int{})),
            minusInt{}(X:Int{},Y:Int{}))))
  []

  axiom{R}
    \forall{R}(
       X:Int{},
       \equals{Int{},R}(
          divInt{}(X:Int{},one{}()),
          X:Int{}))
  []

  /* Do I need to say Y != 0 here? */
  axiom{R}
    \forall{R}(
       X:Int{},
       \forall{R}(
          Y:Int{},
          \equals{Int{},R}(
             divInt{}(X:Int{},Y:Int{}),
             succ{}(divInt{}(minusInt{}(X:Int{},Y:Int{}),
                             Y:Int{})))))
  []


endmodule []
