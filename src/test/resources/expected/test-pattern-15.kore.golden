Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-PATTERN-15"
            , moduleSentences =
                [ MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable (Id "S" :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (RewritesPattern Rewrites
                            { rewritesSort =
                                SortVariableSort (SortVariable (Id "S" :: Id Object))
                            , rewritesFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                    { variableName = Id "X" :: Id Object
                                    , variableSort =
                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                    }))))
                            , rewritesSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                    { variableName = Id "X" :: Id Object
                                    , variableSort =
                                        SortVariableSort (SortVariable (Id "S" :: Id Object))
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }