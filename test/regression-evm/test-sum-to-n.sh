#!/bin/sh
kevm prove tests/specs/examples/sum-to-n-spec.k VERIFICATION --dry-run --save-temps --backend haskell --format-failures 
 --concrete-rules EVM-ABI.#ceil32,EVM.allBut64th.pos,EVM.Cextra,EVM.Cgascap,EVM.Cmem,EVM.Csstore.new,EVM.Csstore.old,EVM.#memoryUsageUpdate.some,EVM.Rsstore.new,EVM.Rsstore.old,EVM-TYPES.#asByteStack,EVM-TYPES.#asByteStackAux.recursive,EVM-TYPES.#asWord.recursive,EVM-TYPES.bytesRange,EVM-TYPES.mapWriteBytes.recursive,EVM-TYPES.#padRightToWidth,EVM-TYPES.#padToWidth,EVM-TYPES.padToWidthNonEmpty,EVM-TYPES.powmod.nonzero,EVM-TYPES.powmod.zero,EVM-TYPES.#range,EVM-TYPES.signextend.invalid,EVM-TYPES.signextend.negative,EVM-TYPES.signextend.positive,HASHED-LOCATIONS.keccakIntList,SERIALIZATION.keccak,SERIALIZATION.#newAddr,SERIALIZATION.#newAddrCreate2, ${KORE_EXEC:?} test-sum-to-n-vdefinition.kore --module VERIFICATION --prove test-sum-to-n-spec.kore --spec-module SUM-TO-N-SPEC "$@"
