[topCellInitializer{}(LblinitGeneratedTopCell{}())]

module BASIC-K
  sort SortK{} []
  sort SortKItem{} []
endmodule []

module KSEQ
  import BASIC-K []

  // TODO: Provide constructor and functional axioms for `kseq` and `dotk`.
  symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(),functional{}()]
  symbol dotk{}() : SortK{} [constructor{}(),functional{}()]

  symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]

  axiom{R}
    \equals{SortK{},R}(
      append{}(dotk{}(),K2:SortK{}),
      K2:SortK{})
  []

  axiom{R}
    \equals{SortK{},R}(
      append{}(kseq{}(K1:SortKItem{},K2:SortK{}),K3:SortK{}),
      kseq{}(K1:SortKItem{},append{}(K2:SortK{},K3:SortK{})))
  []

endmodule []

module INJ
  symbol inj{From,To}(From) : To [sortInjection{}()]

  axiom{S1,S2,S3,R}
    \equals{S3,R}(
      inj{S2,S3}(inj{S1,S2}(T:S1)),
      inj{S1,S3}(T:S1))
  []

endmodule []

module K
  import KSEQ []
  import INJ []

  // Defnitions for reachability aliases
  // Until we will have `mu` we resort to dummy definitions
  alias weakExistsFinally{A}(A) : A
  where weakExistsFinally{A}(@X:A) := @X:A []

  alias weakAlwaysFinally{A}(A) : A
  where weakAlwaysFinally{A}(@X:A) := @X:A []

  // Definitions for CTL aliases
  // Until we will have `mu` we resort to dummy definitions
  alias allPathGlobally{A}(A) : A
  where allPathGlobally{A}(@X:A) := @X:A []

endmodule []

module KWASM-LEMMAS

// imports
  import K []

// sorts
  sort SortFModInstCell{} []
  sort SortCurModIdxCellOpt{} []
  sort SortEmptyStmt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,5,141,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)")]
  sort SortFLocalCell{} []
  sort SortModIdxCell{} []
  sort SortLocalDecls{} []
  sort SortNextGlobAddrCell{} []
  sort SortTdataCellOpt{} []
  sort SortDataString{} []
  sort SortExportDefn{} []
  sort SortCvtf64Op{} []
  sort SortPlainInstr{} []
  sort SortIRelOp{} []
  sort SortEmptyStmts{} []
  sort SortOffsetArg{} []
  sort SortNextGlobIdxCellOpt{} []
  sort SortGlobalsCellOpt{} []
  sort SortTestOp{} []
  sort SortNextTabAddrCell{} []
  sort SortGlobIdsCell{} []
  sort SortNextMemAddrCell{} []
  sort SortWasmCell{} []
  sort SortTAddrCell{} []
  sort SortModuleInstancesCellFragment{} []
  sort SortTabsCell{} []
  sort SortOptionalInt{} []
  sort SortFCodeCell{} []
  sort SortTmaxCellOpt{} []
  sort SortTypeKeyWord{} []
  sort SortFTypeCellOpt{} []
  sort SortStoreOpM{} []
  sort SortStartDefn{} []
  sort SortNextGlobAddrCellOpt{} []
  sort SortKCellOpt{} []
  sort SortModIdxCellOpt{} []
  sort SortIdentifierToken{} [token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,5,24,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), hasDomainValues{}()]
  sort SortNextFreshIdCell{} []
  sort SortMInt{} []
  sort SortNextModuleIdxCellOpt{} []
  sort SortTabIdsCell{} []
  sort SortFuncIdsCell{} []
  sort SortTypeDecl{} []
  sort SortInlineExport{} []
  sort SortFBinOp{} []
  sort SortImportDefn{} []
  sort SortVal{} []
  sort SortFuncDefCell{} []
  sort SortAlignArg{} []
  sort SortFuncAddrsCell{} []
  sort SortMemType{} []
  sort Sort'Hash'Layout{} [token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,5,26,34)"), hasDomainValues{}()]
  sort SortMemsCell{} []
  sort SortCurFrameCellOpt{} []
  sort SortFuncIdsCellOpt{} []
  sort SortStoreOp{} []
  sort SortTypeDecls{} []
  sort SortLocalsCellOpt{} []
  sort SortValStack{} []
  sort SortLoadOp{} []
  sort SortNumber{} []
  sort SortNextTabAddrCellOpt{} []
  sort SortMemorySpec{} []
  sort SortGlobalSpec{} []
  hooked-sort SortTabInstCellMap{} [hook{}("MAP.Map"), element{}(LblTabInstCellMapItem{}()), concat{}(Lbl'Unds'TabInstCellMap'Unds'{}()), unit{}(Lbl'Stop'TabInstCellMap{}())]
  sort SortFoldedInstr{} []
  sort SortIUnOp{} []
  sort SortGlobalInstCell{} []
  sort SortGlobalsCellFragment{} []
  sort SortMemsCellOpt{} []
  sort SortGValueCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(258,3,258,31)")]
  sort SortTdataCell{} []
  sort SortFuncsCell{} []
  sort SortIdentifier{} []
  sort SortValstackCell{} []
  sort SortNextFreshIdCellOpt{} []
  sort SortTabsCellOpt{} []
  sort SortKCell{} []
  sort SortFuncsCellFragment{} []
  sort SortLimits{} []
  sort SortFValType{} []
  sort SortNextModuleIdxCell{} []
  sort SortWasmIntToken{} [token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,5,25,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), hasDomainValues{}()]
  sort SortFModInstCellOpt{} []
  sort SortBlockInstr{} []
  sort SortIBinOp{} []
  sort SortFuncDefn{} []
  sort SortGAddrCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGlobalAddrsCell{} []
  sort SortTypeDefn{} []
  sort SortModuleInstancesCellOpt{} []
  sort SortGeneratedCounterCell{} []
  sort SortExternval{} []
  sort SortMemAddrsCell{} []
  sort SortTypesCellOpt{} []
  sort SortValstackCellOpt{} []
  sort SortWasmCellFragment{} []
  sort SortAllocatedKind{} []
  sort SortCvtf32Op{} []
  sort SortMainStoreCell{} []
  sort SortAValType{} []
  hooked-sort SortFuncDefCellMap{} [hook{}("MAP.Map"), element{}(LblFuncDefCellMapItem{}()), concat{}(Lbl'Unds'FuncDefCellMap'Unds'{}()), unit{}(Lbl'Stop'FuncDefCellMap{}())]
  sort SortElemDefn{} []
  sort SortLabel{} []
  sort SortCurFrameCell{} []
  sort SortLabelIdsCellOpt{} []
  sort SortGlobIdsCellOpt{} []
  sort SortMemArg{} []
  sort SortSignedness{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,3,531,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("FLOAT.Float"), hasDomainValues{}()]
  sort SortTmaxCell{} []
  sort SortLoadOpM{} []
  sort SortModuleIdsCellOpt{} []
  sort SortWasmCellOpt{} []
  sort SortStmts{} []
  sort SortInlineImport{} []
  sort SortFTypeCell{} []
  sort SortContext{} []
  sort SortLocalsCell{} []
  sort SortVecType{} []
  sort SortTabAddrsCell{} []
  sort SortExportsCell{} []
  sort SortGMutCell{} []
  hooked-sort SortGlobalInstCellMap{} [hook{}("MAP.Map"), element{}(LblGlobalInstCellMapItem{}()), concat{}(Lbl'Unds'GlobalInstCellMap'Unds'{}()), unit{}(Lbl'Stop'GlobalInstCellMap{}())]
  sort SortTypeIdsCellOpt{} []
  sort SortLabelIdsCell{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,3,99,28)")]
  sort SortGlobalAddrsCellOpt{} []
  sort SortModuleInstCellFragment{} []
  sort SortTableElemType{} []
  sort SortMut{} []
  hooked-sort SortString{} [hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(612,3,612,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hasDomainValues{}()]
  sort SortFuncType{} []
  sort SortMsizeCellOpt{} []
  sort SortMemAddrsCellOpt{} []
  sort SortFRelOp{} []
  sort SortElemSegment{} []
  sort SortTsizeCellOpt{} []
  sort SortTableSpec{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortNextMemAddrCellOpt{} []
  sort SortFuncDefCellFragment{} []
  sort SortMemInstCellFragment{} []
  sort SortTabAddrsCellOpt{} []
  sort SortMemoryDefn{} []
  sort SortLabelDepthCellOpt{} []
  sort SortMsizeCell{} []
  sort SortGValueCell{} []
  sort SortMmaxCellOpt{} []
  sort SortMemIdsCell{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,3,12,27)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/kast.k)"), hasDomainValues{}()]
  sort SortLocalDecl{} []
  sort SortNValType{} []
  sort SortNextTypeIdxCellOpt{} []
  sort SortTypesCell{} []
  sort SortMainStoreCellFragment{} []
  sort SortCvtOp{} []
  sort SortCvti32Op{} []
  sort SortMemsCellFragment{} []
  sort SortTabIdsCellOpt{} []
  sort SortNextFuncAddrCellOpt{} []
  sort SortDefn{} []
  sort SortByteMap{} []
  sort SortFAddrCell{} []
  sort SortOptionalId{} []
  sort SortFVal{} []
  sort SortFLocalCellOpt{} []
  sort SortDeterministicMemoryGrowthCellOpt{} []
  sort SortTabInstCellFragment{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,3,388,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hasDomainValues{}()]
  sort SortTypeUse{} []
  sort SortModuleInstCell{} []
  sort SortGMutCellOpt{} []
  sort SortValTypes{} []
  sort SortFrame{} []
  sort SortModuleRegistryCellOpt{} []
  sort SortOffset{} []
  sort SortModuleRegistryCell{} []
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,3,220,28)")]
  sort SortNextFuncAddrCell{} []
  sort SortGlobalDefn{} []
  sort SortCvti64Op{} []
  sort SortNextFuncIdxCellOpt{} []
  sort SortModuleIdsCell{} []
  sort SortFAddrCellOpt{} []
  sort SortWasmString{} []
  sort SortMemIdsCellOpt{} []
  sort SortImportDesc{} []
  sort SortTableType{} []
  sort SortDefns{} []
  sort SortFCodeCellOpt{} []
  sort SortNextTypeIdxCell{} []
  sort SortFuncSpec{} []
  sort SortModuleInstancesCell{} []
  sort SortIValType{} []
  sort SortFuncsCellOpt{} []
  sort SortLabelDepthCell{} []
  hooked-sort SortBytes{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), token{}(), hook{}("BYTES.Bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(747,3,747,41)")]
  sort SortMAddrCellOpt{} []
  sort SortTAddrCellOpt{} []
  sort SortValType{} []
  sort SortInstr{} []
  sort SortMemInstCell{} []
  sort SortModuleDecl{} []
  sort SortEndianness{} []
  sort SortIVal{} []
  sort SortInstrs{} []
  sort SortDeterministicMemoryGrowthCell{} []
  sort SortGlobalInstCellFragment{} []
  sort SortMAddrCell{} []
  sort SortTableDefn{} []
  sort SortType{} []
  sort SortNextFuncIdxCell{} []
  sort SortGlobalType{} []
  sort SortTextFormatGlobalType{} []
  sort SortDataDefn{} []
  sort SortIndex{} []
  sort SortTabsCellFragment{} []
  hooked-sort SortModuleInstCellMap{} [hook{}("MAP.Map"), element{}(LblModuleInstCellMapItem{}()), concat{}(Lbl'Unds'ModuleInstCellMap'Unds'{}()), unit{}(Lbl'Stop'ModuleInstCellMap{}())]
  sort SortFUnOp{} []
  sort SortWasmInt{} []
  sort SortAlloc{} []
  sort SortMainStoreCellOpt{} []
  sort SortMmaxCell{} []
  sort SortFuncAddrsCellOpt{} []
  hooked-sort SortMemInstCellMap{} [hook{}("MAP.Map"), element{}(LblMemInstCellMapItem{}()), concat{}(Lbl'Unds'MemInstCellMap'Unds'{}()), unit{}(Lbl'Stop'MemInstCellMap{}())]
  sort SortCurModIdxCell{} []
  sort SortMdataCell{} []
  sort SortCell{} []
  sort SortStmt{} []
  sort SortTsizeCell{} []
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,3,332,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hasDomainValues{}()]
  sort SortWasmStringToken{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,5,27,34)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), hasDomainValues{}()]
  sort SortExportsCellOpt{} []
  sort SortGlobalsCell{} []
  sort SortTabInstCell{} []
  sort SortCurFrameCellFragment{} []
  sort SortTypeIdsCell{} []
  sort SortNextGlobIdxCell{} []
  sort SortMdataCellOpt{} []
  sort SortGAddrCell{} []

// symbols
  symbol Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(SortMap{}, SortIndex{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#ContextLookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,20,73,60)"), format{}("%c#ContextLookup%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(SortDataString{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#DS2Bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(491,22,491,54)"), format{}("%c#DS2Bytes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(SortLocalDecls{}, SortValTypes{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#asLocalType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,24,628,72)"), format{}("%c#asLocalType%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(SortBool{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,20,326,56)"), format{}("%c#bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(SortTypeUse{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#checkTypeUse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(642,22,642,46)"), format{}("%c#checkTypeUse%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(SortIVal{}) : SortIVal{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#chop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(273,21,273,57)"), format{}("%c#chop%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(SortDataString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#concatDS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,23,480,65)"), format{}("%c#concatDS%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(SortDataString{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#concatDSAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(481,23,481,87)"), format{}("%c#concatDS%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("#ctz"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,20,44,47)"), format{}("%c#ctz%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'distinctBits'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), klabel{}("#distinctBits"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,21,324,58)"), format{}("%c#distinctBits%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#drop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,25,358,76)"), format{}("%c#drop%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(SortInt{}, SortEndianness{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#encodeUTF8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(445,22,445,63)"), format{}("%c#encodeUTF8%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(SortInt{}) : SortIdentifier{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,27,38,42)"), format{}("%c#freshId%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(SortTypeKeyWord{}, SortTypeDecls{}, SortValTypes{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#gatherTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(557,24,557,85)"), format{}("%c#gatherTypes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(SortByteMap{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("mapGet"), klabel{}("#get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,24,535,87)"), format{}("%c#get%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(SortElemSegment{}, SortInt{}) : SortIndex{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#getElemSegment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,22,88,66)"), format{}("%c#getElemSegment%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(SortMemArg{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#getOffset"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1081,20,1081,63)"), format{}("%c#getOffset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(SortByteMap{}, SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("getRange"), klabel{}("#getRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,20,524,90)"), format{}("%c#getRange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(SortInt{}, SortOptionalInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#growthAllowed"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1154,21,1154,63)"), format{}("%c#growthAllowed%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(SortTypeUse{}, SortLocalDecls{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("#ids2Idxs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(578,20,578,77)"), format{}("%c#ids2Idxs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(SortInt{}, SortTypeUse{}, SortLocalDecls{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("#ids2Idxs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,20,579,77)"), format{}("%c#ids2Idxs%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#idxCloseBracket"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,20,440,62)"), format{}("%c#idxCloseBracket%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("ite"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,26,929,125)"), format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}()]
  symbol Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), klabel{}("#inSignedRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,21,271,63)"), format{}("%c#inSignedRange%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), klabel{}("#inUnsignedRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,21,270,63)"), format{}("%c#inUnsignedRange%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(SortInt{}, SortInt{}, SortMap{}, SortMap{}, SortElemSegment{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#initElements"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1200,25,1200,73)"), format{}("%c#initElements%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c)%r"), injective{}()]
  symbol Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,22,418,48)"), format{}("%c#init_locals%r %1 %2"), injective{}()]
  symbol Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(SortKItem{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), smtlib{}("isByte"), klabel{}("#isByte"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,21,297,81)"), format{}("%c#isByte%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(SortByteMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), smtlib{}("isByteMap"), klabel{}("#isByteMap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(296,21,296,84)"), format{}("%c#isByteMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("#isInfinityOrNaN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,21,63,57)"), format{}("%c#isInfinityOrNaN%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(SortElemSegment{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#lenElemSegment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,22,87,66)"), format{}("%c#lenElemSegment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(SortDataString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#lengthDataPages"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1260,20,1260,61)"), format{}("%c#lengthDataPages%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(SortInt{}, SortOptionalInt{}, SortLimits{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#limitsMatchImport"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1427,21,1427,75)"), format{}("%c#limitsMatchImport%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#maxMemorySize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1166,20,1166,46)"), format{}("%c#maxMemorySize%r %c(%r %c)%r"), function{}()]
  symbol Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#maxTableSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1167,20,1167,46)"), format{}("%c#maxTableSize%r %c(%r %c)%r"), function{}()]
  symbol Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), klabel{}("#minSigned"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,20,276,54)"), format{}("%c#minSigned%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("#minWidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,20,43,47)"), format{}("%c#minWidth%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("numBytes"), klabel{}("#numBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,20,194,82)"), format{}("%c#numBytes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#pageSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1165,20,1165,46)"), format{}("%c#pageSize%r %c(%r %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmStringToken{}(SortWasmStringToken{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#parseWasmString"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(469,32,469,119)"), format{}("%c#parseWasmString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("#popcnt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,20,45,47)"), format{}("%c#popcnt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("pow "), klabel{}("#pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,20,205,74)"), format{}("%c#pow%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("pow1"), klabel{}("#pow1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,20,206,74)"), format{}("%c#pow1%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(SortDefns{}, SortDefns{}) : SortDefns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#reverse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1479,22,1479,54)"), format{}("%c#reverse%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#revs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,25,359,76)"), format{}("%c#revs%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(SortValStack{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#revsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,25,360,94)"), format{}("%c#revs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#revt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,25,179,76)"), format{}("%c#revt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}, SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#revtAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,25,180,94)"), format{}("%c#revt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(SortFValType{}, SortNumber{}) : SortFVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,21,289,59)"), format{}("%c#round%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(SortMap{}, SortOptionalId{}, SortInt{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#saveId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,20,48,60)"), format{}("%c#saveId%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(SortByteMap{}, SortInt{}, SortInt{}) : SortByteMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("mapSet"), klabel{}("#set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(536,24,536,87)"), format{}("%c#set%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(SortByteMap{}, SortInt{}, SortInt{}, SortInt{}) : SortByteMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("setRange"), klabel{}("#setRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(513,24,513,97)"), format{}("%c#setRange%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  symbol Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#signed"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,20,304,61)"), format{}("%c#signed%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#signedWidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(306,20,306,61)"), format{}("%c#signedWidth%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(SortDefns{}, SortModuleDecl{}) : SortModuleDecl{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#sortModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1456,27,1456,71)"), format{}("%c#sortModule%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(SortContext{}, SortDefn{}) : SortDefn{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,26,409,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aDefn%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(SortContext{}, SortDefns{}) : SortDefns{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(556,27,556,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aDefns%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aFuncSpec'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'FuncSpec'Unds'Context'Unds'FuncSpec{}(SortContext{}, SortFuncSpec{}) : SortFuncSpec{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,26,410,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aFuncSpec%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(SortContext{}, SortInstr{}) : SortInstr{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(444,22,444,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aInstr%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(SortContext{}, SortInstrs{}) : SortInstrs{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(557,27,557,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aInstrs%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aLocalDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecl'Unds'Context'Unds'LocalDecl{}(SortContext{}, SortLocalDecl{}) : SortLocalDecl{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(412,26,412,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aLocalDecl%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aLocalDecls'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecls'Unds'Context'Unds'LocalDecls{}(SortContext{}, SortLocalDecls{}) : SortLocalDecls{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,27,558,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aLocalDecls%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(SortContext{}, SortStmt{}) : SortStmt{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,26,408,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aStmt%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(SortContext{}, SortStmts{}) : SortStmts{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(555,27,555,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aStmts%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash't2aTypeUse'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'TypeUse'Unds'Context'Unds'TypeUse{}(SortContext{}, SortTypeUse{}) : SortTypeUse{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,26,411,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), format{}("%c#t2aTypeUse%r %c<%r %1 %c>%r %c(%r %2 %c)%r")]
  symbol Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#take"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,25,357,76)"), format{}("%c#take%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'unparseWasmString'LParUndsRParUnds'WASM-DATA'Unds'WasmStringToken'Unds'String{}(SortString{}) : SortWasmStringToken{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#unparseWasmString"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(470,32,470,119)"), format{}("%c#unparseWasmString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#unsigned"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,20,305,61)"), format{}("%c#unsigned%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(SortContext{}, SortMap{}) : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("#updateLocalIds"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(394,24,394,89)"), format{}("%c#updateLocalIds%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(SortContext{}, SortMap{}, SortBool{}) : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("#updateLocalIdsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(395,24,395,89)"), format{}("%c#updateLocalIdsAux%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#width"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,20,193,64)"), format{}("%c#width%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#wrap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,20,277,61)"), format{}("%c#wrap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(SortValTypes{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#zero"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,25,356,76)"), format{}("%c#zero%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(SortPlainInstr{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), prefer{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,28,125,61)"), format{}("%c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(SortPlainInstr{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,28,124,52)"), format{}("%c(%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,28,134,70)"), format{}("%c(%r %cblock%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(SortDataString{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(245,27,245,51)"), format{}("%c(%r %cdata%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(SortOffset{}, SortDataString{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1236,25,1236,66)"), format{}("%c(%r %cdata%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(SortIndex{}, SortOffset{}, SortDataString{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1235,25,1235,66)"), format{}("%c(%r %cdata%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1198,25,1198,67)"), format{}("%c(%r %celem%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(SortIndex{}, SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1197,25,1197,67)"), format{}("%c(%r %celem%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(SortWasmString{}, SortExternval{}) : SortExportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1295,27,1295,71)"), format{}("%c(%r %cexport%r %1 %c(%r %2 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(SortWasmString{}) : SortInlineExport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,30,286,56)"), format{}("%c(%r %cexport%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(SortOptionalId{}, SortFuncSpec{}) : SortFuncDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(678,25,678,59)"), format{}("%c(%r %cfunc%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(SortOptionalId{}, SortTypeUse{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("funcImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1317,27,1317,99)"), format{}("%c(%r %cfunc%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(SortOptionalId{}, SortGlobalSpec{}) : SortGlobalDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(473,27,473,65)"), format{}("%c(%r %cglobal%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(SortOptionalId{}, SortTextFormatGlobalType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("globImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1320,27,1320,99)"), format{}("%c(%r %cglobal%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortInstrs{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,28,140,111)"), format{}("%c(%r %cif%r %1 %2 %3 %c(%r %cthen%r %4 %c)%r %c(%r %celse%r %5 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,28,139,89)"), format{}("%c(%r %cif%r %1 %2 %3 %c(%r %cthen%r %4 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(SortWasmString{}, SortWasmString{}) : SortInlineImport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,29,351,66)"), format{}("%c(%r %cimport%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(SortWasmString{}, SortWasmString{}, SortImportDesc{}) : SortImportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1316,27,1316,75)"), format{}("%c(%r %cimport%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(732,22,732,41)"), format{}("%c(%r %cinvoke%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(146,28,146,69)"), format{}("%c(%r %cloop%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(SortOptionalId{}, SortMemType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(" memImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1319,27,1319,99)"), format{}("%c(%r %cmemory%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(SortOptionalId{}, SortMemorySpec{}) : SortMemoryDefn{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(911,27,911,64)"), format{}("%c(%r %cmemory%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(SortOptionalId{}, SortDefns{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1490,27,1490,59)"), format{}("%c(%r %cmodule%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(SortAValType{}) : SortTextFormatGlobalType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(462,48,462,69)"), format{}("%c(%r %cmut%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(SortInstrs{}) : SortOffset{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1184,23,1184,45)"), format{}("%c(%r %coffset%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(SortIndex{}) : SortStartDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1276,26,1276,46)"), format{}("%c(%r %cstart%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(SortOptionalId{}, SortTableType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(" tabImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,27,1318,99)"), format{}("%c(%r %ctable%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(SortOptionalId{}, SortTableSpec{}) : SortTableDefn{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(865,26,865,61)"), format{}("%c(%r %ctable%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(SortOptionalId{}, SortTypeDecls{}) : SortTypeDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,28,599,74)"), format{}("%c(type%r %1 %c(%r %cfunc%r %2 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(SortIndex{}) : SortTypeUse{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), prefer{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(577,24,577,59)"), format{}("%c(type%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(SortIndex{}, SortTypeDecls{}) : SortTypeUse{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(578,24,578,50)"), format{}("%c(type%r %1 %c)%r %2"), injective{}()]
  hooked-symbol Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("fp.neg"), hook{}("FLOAT.neg"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,20,554,104)"), format{}("%c--Float%r %1"), function{}()]
  hooked-symbol Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}() : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("BYTES.empty"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,20,749,69)"), format{}("%c.Bytes%r"), function{}()]
  hooked-symbol Lbl'Stop'FuncDefCellMap{}() : SortFuncDefCellMap{} [hook{}("MAP.unit"), function{}(), format{}("%c.FuncDefCellMap%r")]
  hooked-symbol Lbl'Stop'GlobalInstCellMap{}() : SortGlobalInstCellMap{} [hook{}("MAP.unit"), function{}(), format{}("%c.GlobalInstCellMap%r")]
  symbol Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}() : SortOptionalInt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,34,101,39)"), format{}("%c.Int%r"), injective{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_nil"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,19,293,146)"), format{}("%c.List%r"), function{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}() : SortDataString{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".List{\"listWasmString\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(471,32,471,94)"), format{}("%c.DataString%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}() : SortElemSegment{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".List{\"listIndex\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,28,84,62)"), format{}("%c.ElemSegment%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}() : SortValTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".List{\"listValTypes\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,25,129,64)"), format{}("%c.ValTypes%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}() : SortDefns{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,27,151,65)"), format{}("%c.Defns%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}() : SortEmptyStmts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,27,149,65)"), format{}("%c.EmptyStmts%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}() : SortInstrs{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,27,150,65)"), format{}("%c.Instrs%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}() : SortLocalDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(".List{\"listLocalDecl\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(624,27,624,77)"), format{}("%c.LocalDecls%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}() : SortStmts{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,27,152,65)"), format{}("%c.Stmts%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}() : SortTypeDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(".List{\"listTypeDecl\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(553,26,553,67)"), format{}("%c.TypeDecls%r"), injective{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,18,109,128)"), format{}("%c.Map%r"), function{}()]
  hooked-symbol Lbl'Stop'MemInstCellMap{}() : SortMemInstCellMap{} [hook{}("MAP.unit"), function{}(), format{}("%c.MemInstCellMap%r")]
  symbol Lbl'Stop'MemoryIdentifier'Unds'WASM-TEXT'Unds'Identifier{}() : SortIdentifier{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(243,27,243,45)"), format{}("%c.MemoryIdentifier%r"), injective{}()]
  hooked-symbol Lbl'Stop'ModuleInstCellMap{}() : SortModuleInstCellMap{} [hook{}("MAP.unit"), function{}(), format{}("%c.ModuleInstCellMap%r")]
  symbol Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,20,225,25)"), format{}("%c.Mut%r"), injective{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,18,228,122)"), format{}("%c.Set%r"), function{}()]
  hooked-symbol Lbl'Stop'TabInstCellMap{}() : SortTabInstCellMap{} [hook{}("MAP.unit"), function{}(), format{}("%c.TabInstCellMap%r")]
  symbol Lbl'Stop'TableIdentifier'Unds'WASM-TEXT'Unds'Identifier{}() : SortIdentifier{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(243,49,243,66)"), format{}("%c.TableIdentifier%r"), injective{}()]
  symbol Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,21,163,27)"), format{}("%c.Type%r"), injective{}()]
  symbol Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}() : SortValStack{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,25,339,35)"), format{}("%c.ValStack%r"), injective{}()]
  symbol Lbl'Stop'WasmString'Unds'WASM-DATA'Unds'WasmString{}() : SortWasmString{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(465,27,465,39)"), format{}("%c.WasmString%r"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(SortFValType{}, SortFloat{}) : SortFVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,21,254,58)"), format{}("%c<%r %1 %c>%r %2"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortIVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,21,253,58)"), format{}("%c<%r %1 %c>%r %2"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(SortAValType{}, SortNumber{}) : SortVal{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), anywhere{}(), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,21,255,58)"), format{}("%c<%r %1 %c>%r %2"), injective{}()]
  symbol Lbl'-LT-'curFrame'-GT-'{}(SortLocalsCell{}, SortCurModIdxCell{}, SortLabelDepthCell{}, SortLabelIdsCell{}) : SortCurFrameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("curFrame"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<curFrame>%r%i%n%1%n%2%n%3%n%4%d%n%c</curFrame>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'curFrame'-GT-'-fragment{}(SortLocalsCellOpt{}, SortCurModIdxCellOpt{}, SortLabelDepthCellOpt{}, SortLabelIdsCellOpt{}) : SortCurFrameCellFragment{} [functional{}(), constructor{}(), cellFragment{}("CurFrameCell"), format{}("%c<curFrame>-fragment%r %1 %2 %3 %4 %c</curFrame>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'curModIdx'-GT-'{}(SortOptionalInt{}) : SortCurModIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("curModIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<curModIdx>%r%i%n%1%d%n%c</curModIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(SortBool{}) : SortDeterministicMemoryGrowthCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("deterministicMemoryGrowth"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<deterministicMemoryGrowth>%r%i%n%1%d%n%c</deterministicMemoryGrowth>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'exports'-GT-'{}(SortMap{}) : SortExportsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("exports"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<exports>%r%i%n%1%d%n%c</exports>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fAddr'-GT-'{}(SortInt{}) : SortFAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<fAddr>%r%i%n%1%d%n%c</fAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fCode'-GT-'{}(SortInstrs{}) : SortFCodeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fCode"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<fCode>%r%i%n%1%d%n%c</fCode>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fLocal'-GT-'{}(SortType{}) : SortFLocalCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fLocal"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<fLocal>%r%i%n%1%d%n%c</fLocal>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fModInst'-GT-'{}(SortInt{}) : SortFModInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fModInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<fModInst>%r%i%n%1%d%n%c</fModInst>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fType'-GT-'{}(SortType{}) : SortFTypeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fType"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<fType>%r%i%n%1%d%n%c</fType>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcAddrs'-GT-'{}(SortMap{}) : SortFuncAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<funcAddrs>%r%i%n%1%d%n%c</funcAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcDef'-GT-'{}(SortFAddrCell{}, SortFCodeCell{}, SortFTypeCell{}, SortFLocalCell{}, SortFModInstCell{}) : SortFuncDefCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcDef"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<funcDef>%r%i%n%1%n%2%n%3%n%4%n%5%d%n%c</funcDef>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcDef'-GT-'-fragment{}(SortFAddrCellOpt{}, SortFCodeCellOpt{}, SortFTypeCellOpt{}, SortFLocalCellOpt{}, SortFModInstCellOpt{}) : SortFuncDefCellFragment{} [functional{}(), constructor{}(), cellFragment{}("FuncDefCell"), format{}("%c<funcDef>-fragment%r %1 %2 %3 %4 %5 %c</funcDef>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'funcIds'-GT-'{}(SortMap{}) : SortFuncIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<funcIds>%r%i%n%1%d%n%c</funcIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcs'-GT-'{}(SortFuncDefCellMap{}) : SortFuncsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<funcs>%r%i%n%1%d%n%c</funcs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcs'-GT-'-fragment{}(SortFuncDefCellMap{}) : SortFuncsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("FuncsCell"), format{}("%c<funcs>-fragment%r %1 %c</funcs>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'gAddr'-GT-'{}(SortInt{}) : SortGAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("gAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<gAddr>%r%i%n%1%d%n%c</gAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'gMut'-GT-'{}(SortMut{}) : SortGMutCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("gMut"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<gMut>%r%i%n%1%d%n%c</gMut>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'gValue'-GT-'{}(SortVal{}) : SortGValueCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("gValue"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<gValue>%r%i%n%1%d%n%c</gValue>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortWasmCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), cellName{}("generatedTop"), format{}("%1"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortWasmCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GeneratedTopCell"), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'globIds'-GT-'{}(SortMap{}) : SortGlobIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<globIds>%r%i%n%1%d%n%c</globIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalAddrs'-GT-'{}(SortMap{}) : SortGlobalAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globalAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<globalAddrs>%r%i%n%1%d%n%c</globalAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalInst'-GT-'{}(SortGAddrCell{}, SortGValueCell{}, SortGMutCell{}) : SortGlobalInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globalInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<globalInst>%r%i%n%1%n%2%n%3%d%n%c</globalInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalInst'-GT-'-fragment{}(SortGAddrCellOpt{}, SortGValueCellOpt{}, SortGMutCellOpt{}) : SortGlobalInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GlobalInstCell"), format{}("%c<globalInst>-fragment%r %1 %2 %3 %c</globalInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'globals'-GT-'{}(SortGlobalInstCellMap{}) : SortGlobalsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globals"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<globals>%r%i%n%1%d%n%c</globals>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globals'-GT-'-fragment{}(SortGlobalInstCellMap{}) : SortGlobalsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GlobalsCell"), format{}("%c<globals>-fragment%r %1 %c</globals>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("k"), maincell{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'labelDepth'-GT-'{}(SortInt{}) : SortLabelDepthCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("labelDepth"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<labelDepth>%r%i%n%1%d%n%c</labelDepth>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'labelIds'-GT-'{}(SortMap{}) : SortLabelIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("labelIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<labelIds>%r%i%n%1%d%n%c</labelIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'locals'-GT-'{}(SortMap{}) : SortLocalsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("locals"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<locals>%r%i%n%1%d%n%c</locals>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mAddr'-GT-'{}(SortInt{}) : SortMAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<mAddr>%r%i%n%1%d%n%c</mAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mainStore'-GT-'{}(SortFuncsCell{}, SortNextFuncAddrCell{}, SortTabsCell{}, SortNextTabAddrCell{}, SortMemsCell{}, SortNextMemAddrCell{}, SortGlobalsCell{}, SortNextGlobAddrCell{}) : SortMainStoreCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mainStore"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<mainStore>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%d%n%c</mainStore>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mainStore'-GT-'-fragment{}(SortFuncsCellOpt{}, SortNextFuncAddrCellOpt{}, SortTabsCellOpt{}, SortNextTabAddrCellOpt{}, SortMemsCellOpt{}, SortNextMemAddrCellOpt{}, SortGlobalsCellOpt{}, SortNextGlobAddrCellOpt{}) : SortMainStoreCellFragment{} [functional{}(), constructor{}(), cellFragment{}("MainStoreCell"), format{}("%c<mainStore>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %c</mainStore>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'mdata'-GT-'{}(SortByteMap{}) : SortMdataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mdata"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<mdata>%r%i%n%1%d%n%c</mdata>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memAddrs'-GT-'{}(SortMap{}) : SortMemAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("memAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<memAddrs>%r%i%n%1%d%n%c</memAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memIds'-GT-'{}(SortMap{}) : SortMemIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("memIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<memIds>%r%i%n%1%d%n%c</memIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memInst'-GT-'{}(SortMAddrCell{}, SortMmaxCell{}, SortMsizeCell{}, SortMdataCell{}) : SortMemInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("memInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<memInst>%r%i%n%1%n%2%n%3%n%4%d%n%c</memInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memInst'-GT-'-fragment{}(SortMAddrCellOpt{}, SortMmaxCellOpt{}, SortMsizeCellOpt{}, SortMdataCellOpt{}) : SortMemInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("MemInstCell"), format{}("%c<memInst>-fragment%r %1 %2 %3 %4 %c</memInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'mems'-GT-'{}(SortMemInstCellMap{}) : SortMemsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mems"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<mems>%r%i%n%1%d%n%c</mems>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mems'-GT-'-fragment{}(SortMemInstCellMap{}) : SortMemsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("MemsCell"), format{}("%c<mems>-fragment%r %1 %c</mems>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'mmax'-GT-'{}(SortOptionalInt{}) : SortMmaxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mmax"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<mmax>%r%i%n%1%d%n%c</mmax>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'modIdx'-GT-'{}(SortInt{}) : SortModIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("modIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<modIdx>%r%i%n%1%d%n%c</modIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleIds'-GT-'{}(SortMap{}) : SortModuleIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<moduleIds>%r%i%n%1%d%n%c</moduleIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInst'-GT-'{}(SortModIdxCell{}, SortExportsCell{}, SortTypeIdsCell{}, SortTypesCell{}, SortNextTypeIdxCell{}, SortFuncIdsCell{}, SortFuncAddrsCell{}, SortNextFuncIdxCell{}, SortTabIdsCell{}, SortTabAddrsCell{}, SortMemIdsCell{}, SortMemAddrsCell{}, SortGlobIdsCell{}, SortGlobalAddrsCell{}, SortNextGlobIdxCell{}) : SortModuleInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<moduleInst>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%d%n%c</moduleInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInst'-GT-'-fragment{}(SortModIdxCellOpt{}, SortExportsCellOpt{}, SortTypeIdsCellOpt{}, SortTypesCellOpt{}, SortNextTypeIdxCellOpt{}, SortFuncIdsCellOpt{}, SortFuncAddrsCellOpt{}, SortNextFuncIdxCellOpt{}, SortTabIdsCellOpt{}, SortTabAddrsCellOpt{}, SortMemIdsCellOpt{}, SortMemAddrsCellOpt{}, SortGlobIdsCellOpt{}, SortGlobalAddrsCellOpt{}, SortNextGlobIdxCellOpt{}) : SortModuleInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ModuleInstCell"), format{}("%c<moduleInst>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %c</moduleInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'moduleInstances'-GT-'{}(SortModuleInstCellMap{}) : SortModuleInstancesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleInstances"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<moduleInstances>%r%i%n%1%d%n%c</moduleInstances>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInstances'-GT-'-fragment{}(SortModuleInstCellMap{}) : SortModuleInstancesCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ModuleInstancesCell"), format{}("%c<moduleInstances>-fragment%r %1 %c</moduleInstances>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'moduleRegistry'-GT-'{}(SortMap{}) : SortModuleRegistryCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleRegistry"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<moduleRegistry>%r%i%n%1%d%n%c</moduleRegistry>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'msize'-GT-'{}(SortInt{}) : SortMsizeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("msize"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<msize>%r%i%n%1%d%n%c</msize>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFreshId'-GT-'{}(SortInt{}) : SortNextFreshIdCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextFreshId"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextFreshId>%r%i%n%1%d%n%c</nextFreshId>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFuncAddr'-GT-'{}(SortInt{}) : SortNextFuncAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextFuncAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextFuncAddr>%r%i%n%1%d%n%c</nextFuncAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFuncIdx'-GT-'{}(SortInt{}) : SortNextFuncIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextFuncIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextFuncIdx>%r%i%n%1%d%n%c</nextFuncIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextGlobAddr'-GT-'{}(SortInt{}) : SortNextGlobAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextGlobAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextGlobAddr>%r%i%n%1%d%n%c</nextGlobAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextGlobIdx'-GT-'{}(SortInt{}) : SortNextGlobIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextGlobIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextGlobIdx>%r%i%n%1%d%n%c</nextGlobIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextMemAddr'-GT-'{}(SortInt{}) : SortNextMemAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextMemAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextMemAddr>%r%i%n%1%d%n%c</nextMemAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextModuleIdx'-GT-'{}(SortInt{}) : SortNextModuleIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextModuleIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextModuleIdx>%r%i%n%1%d%n%c</nextModuleIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextTabAddr'-GT-'{}(SortInt{}) : SortNextTabAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextTabAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextTabAddr>%r%i%n%1%d%n%c</nextTabAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextTypeIdx'-GT-'{}(SortInt{}) : SortNextTypeIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextTypeIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<nextTypeIdx>%r%i%n%1%d%n%c</nextTypeIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tAddr'-GT-'{}(SortInt{}) : SortTAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tAddr>%r%i%n%1%d%n%c</tAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabAddrs'-GT-'{}(SortMap{}) : SortTabAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tabAddrs>%r%i%n%1%d%n%c</tabAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabIds'-GT-'{}(SortMap{}) : SortTabIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tabIds>%r%i%n%1%d%n%c</tabIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabInst'-GT-'{}(SortTAddrCell{}, SortTmaxCell{}, SortTsizeCell{}, SortTdataCell{}) : SortTabInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tabInst>%r%i%n%1%n%2%n%3%n%4%d%n%c</tabInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabInst'-GT-'-fragment{}(SortTAddrCellOpt{}, SortTmaxCellOpt{}, SortTsizeCellOpt{}, SortTdataCellOpt{}) : SortTabInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TabInstCell"), format{}("%c<tabInst>-fragment%r %1 %2 %3 %4 %c</tabInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'tabs'-GT-'{}(SortTabInstCellMap{}) : SortTabsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tabs>%r%i%n%1%d%n%c</tabs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabs'-GT-'-fragment{}(SortTabInstCellMap{}) : SortTabsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TabsCell"), format{}("%c<tabs>-fragment%r %1 %c</tabs>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'tdata'-GT-'{}(SortMap{}) : SortTdataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tdata"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tdata>%r%i%n%1%d%n%c</tdata>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tmax'-GT-'{}(SortOptionalInt{}) : SortTmaxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tmax"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tmax>%r%i%n%1%d%n%c</tmax>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tsize'-GT-'{}(SortInt{}) : SortTsizeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tsize"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<tsize>%r%i%n%1%d%n%c</tsize>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'typeIds'-GT-'{}(SortMap{}) : SortTypeIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("typeIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<typeIds>%r%i%n%1%d%n%c</typeIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'types'-GT-'{}(SortMap{}) : SortTypesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("types"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<types>%r%i%n%1%d%n%c</types>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'valstack'-GT-'{}(SortValStack{}) : SortValstackCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("valstack"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<valstack>%r%i%n%1%d%n%c</valstack>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'wasm'-GT-'{}(SortKCell{}, SortValstackCell{}, SortCurFrameCell{}, SortModuleRegistryCell{}, SortModuleIdsCell{}, SortModuleInstancesCell{}, SortNextModuleIdxCell{}, SortMainStoreCell{}, SortDeterministicMemoryGrowthCell{}, SortNextFreshIdCell{}) : SortWasmCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("wasm"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,89,14)"), format{}("%c<wasm>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%d%n%c</wasm>%r"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'wasm'-GT-'-fragment{}(SortKCellOpt{}, SortValstackCellOpt{}, SortCurFrameCellOpt{}, SortModuleRegistryCellOpt{}, SortModuleIdsCellOpt{}, SortModuleInstancesCellOpt{}, SortNextModuleIdxCellOpt{}, SortMainStoreCellOpt{}, SortDeterministicMemoryGrowthCellOpt{}, SortNextFreshIdCellOpt{}) : SortWasmCellFragment{} [functional{}(), constructor{}(), cellFragment{}("WasmCell"), format{}("%c<wasm>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %c</wasm>-fragment%r"), injective{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(641,21,641,98)"), format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(SortMap{}) : SortByteMap{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,24,506,46)"), format{}("%cByteMap%r %c<|%r %1 %c|>%r"), injective{}()]
  hooked-symbol LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(SortBytes{}, SortEndianness{}, SortSignedness{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Bytes2Int"), hook{}("BYTES.bytes2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(754,18,754,103)"), format{}("%cBytes2Int%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(SortBytes{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Bytes2String"), hook{}("BYTES.bytes2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(757,21,757,88)"), format{}("%cBytes2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [latex{}("{\\\\it{}Float2Int}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Float2Int"), hook{}("FLOAT.float2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(595,18,595,108)"), format{}("%cFloat2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(636,21,636,105)"), format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,21,637,121)"), format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblFuncDefCellMap'Coln'in'Unds'keys{}(SortFAddrCell{}, SortFuncDefCellMap{}) : SortBool{} [hook{}("MAP.in_keys"), function{}(), functional{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r")]
  hooked-symbol LblFuncDefCellMapItem{}(SortFAddrCell{}, SortFuncDefCell{}) : SortFuncDefCellMap{} [hook{}("MAP.element"), function{}(), format{}("%2")]
  hooked-symbol LblGlobalInstCellMap'Coln'in'Unds'keys{}(SortGAddrCell{}, SortGlobalInstCellMap{}) : SortBool{} [hook{}("MAP.in_keys"), function{}(), functional{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r")]
  hooked-symbol LblGlobalInstCellMapItem{}(SortGAddrCell{}, SortGlobalInstCell{}) : SortGlobalInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%2")]
  symbol LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(SortInt{}, SortEndianness{}, SortSignedness{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Int2BytesNoLen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(756,20,756,104)"), format{}("%cInt2Bytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(SortInt{}, SortInt{}, SortEndianness{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Int2Bytes"), hook{}("BYTES.int2bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(755,20,755,104)"), format{}("%cInt2Bytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortFloat{} [latex{}("{\\\\it{}Int2Float}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Int2Float"), hook{}("FLOAT.int2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(594,20,594,131)"), format{}("%cInt2Float%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(640,21,640,103)"), format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,20,301,98)"), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(312,19,312,119)"), format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_elem"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(296,19,296,136)"), format{}("%cListItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,20,120,112)"), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), prefer{}(), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,18,125,144)"), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol LblMemInstCellMap'Coln'in'Unds'keys{}(SortMAddrCell{}, SortMemInstCellMap{}) : SortBool{} [hook{}("MAP.in_keys"), function{}(), functional{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r")]
  hooked-symbol LblMemInstCellMapItem{}(SortMAddrCell{}, SortMemInstCell{}) : SortMemInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%2")]
  hooked-symbol LblModuleInstCellMap'Coln'in'Unds'keys{}(SortModIdxCell{}, SortModuleInstCellMap{}) : SortBool{} [hook{}("MAP.in_keys"), function{}(), functional{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r")]
  hooked-symbol LblModuleInstCellMapItem{}(SortModIdxCell{}, SortModuleInstCell{}) : SortModuleInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%2")]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,18,239,146)"), format{}("%1 %c-Set%r %2"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(242,19,242,106)"), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,18,233,112)"), format{}("%cSetItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(642,21,642,98)"), format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(SortString{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("String2Bytes"), hook{}("BYTES.string2bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(758,20,758,88)"), format{}("%cString2Bytes%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(638,21,638,93)"), format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(SortString{}) : SortIdentifierToken{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("String2Identifier"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,32,157,106)"), format{}("%cString2Identifier%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(639,21,639,91)"), format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblTabInstCellMap'Coln'in'Unds'keys{}(SortTAddrCell{}, SortTabInstCellMap{}) : SortBool{} [hook{}("MAP.in_keys"), function{}(), functional{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r")]
  hooked-symbol LblTabInstCellMapItem{}(SortTAddrCell{}, SortTabInstCell{}) : SortTabInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%2")]
  symbol LblWasmInt{}(SortWasmIntToken{}) : SortWasmInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), symbol'Kywd'{}(), klabel{}("WasmInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,24,98,78)"), format{}("%1"), avoid{}(), function{}()]
  symbol LblWasmIntToken2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'WasmIntToken{}(SortWasmIntToken{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("WasmIntToken2Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,23,104,72)"), format{}("%cWasmIntToken2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblWasmIntToken2String'LParUndsRParUnds'WASM-TEXT'Unds'String'Unds'WasmIntToken{}(SortWasmIntToken{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("WasmIntToken2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,23,102,111)"), format{}("%cWasmIntToken2String%r %c(%r %1 %c)%r"), function{}()]
  symbol LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("WasmIntTokenString2Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,23,103,72)"), format{}("%cWasmIntTokenString2Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(SortValTypes{}) : SortVecType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,25,130,40)"), format{}("%c[%r %1 %c]%r"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("(fp.rem roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.rem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,20,559,182)"), format{}("%1 %c%Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,18,409,170)"), format{}("%1 %c%Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("andInt"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(420,18,420,182)"), format{}("%1 %c&Int%r %2"), function{}()]
  symbol Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(SortTableElemType{}, SortElemSegment{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,26,261,65)"), format{}("%1 %c(%r %celem%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("(fp.mul roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(557,20,557,184)"), format{}("%1 %c*Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("*"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(405,18,405,181)"), format{}("%1 %c*Int%r %2"), function{}()]
  symbol Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(SortValStack{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,25,341,69)"), format{}("%1 %c++%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}(SortBytes{}, SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), right{}(), hook{}("BYTES.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(770,20,770,89)"), format{}("%1 %c+Bytes%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("(fp.add roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,20,561,181)"), format{}("%1 %c+Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("+"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,18,414,178)"), format{}("%1 %c+Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(622,21,622,139)"), format{}("%1 %c+String%r %2"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}, SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,25,170,68)"), format{}("%1 %c+%r %2"), function{}()]
  symbol Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(SortVecType{}, SortVecType{}) : SortFuncType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,25,133,44)"), format{}("%1 %c->%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("(fp.sub roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(562,20,562,181)"), format{}("%1 %c-Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("-"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(415,18,415,178)"), format{}("%1 %c-Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,18,132,120)"), format{}("%1 %c-Map%r %2"), function{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(SortAValType{}, SortCvtOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,27,274,44)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(SortFValType{}, SortFBinOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(236,27,236,45)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(SortFValType{}, SortFRelOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,27,261,45)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(SortFValType{}, SortFUnOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,27,222,44)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(SortFValType{}, SortLoadOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1011,27,1011,46)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(SortFValType{}, SortStoreOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,27,953,48)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(SortIValType{}, SortIBinOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,27,235,45)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(SortIValType{}, SortIRelOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,27,260,45)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(SortIValType{}, SortIUnOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,27,221,44)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(SortIValType{}, SortLoadOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1010,27,1010,46)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(SortIValType{}, SortStoreOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,27,952,48)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(SortIValType{}, SortTestOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,27,249,45)"), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(SortAValType{}, SortCvtOp{}, SortNumber{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("numberCvtOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,20,341,76)"), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(SortFValType{}, SortFUnOp{}, SortFloat{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("floatUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,20,22,73)"), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(SortIValType{}, SortIUnOp{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("intUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,20,21,73)"), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(SortIValType{}, SortTestOp{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("intTestOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(244,20,244,72)"), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(SortIValType{}, SortLoadOp{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1007,22,1007,44)"), format{}("%1 %c.%r %2 %3"), injective{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(SortFValType{}, SortFBinOp{}, SortFloat{}, SortFloat{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("floatBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,20,106,81)"), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(SortFValType{}, SortFRelOp{}, SortFloat{}, SortFloat{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("floatRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(264,20,264,81)"), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(SortIValType{}, SortIBinOp{}, SortInt{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("intBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,20,105,81)"), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(SortIValType{}, SortIRelOp{}, SortInt{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("intRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,20,263,81)"), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(SortIValType{}, SortStoreOp{}, SortInt{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,22,947,49)"), format{}("%1 %c.%r %2 %3 %4"), injective{}()]
  symbol Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(SortFValType{}, SortNumber{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,27,209,53)"), format{}("%1 %c.%r %cconst%r %2"), injective{}()]
  symbol Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(SortIValType{}, SortWasmInt{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,27,208,54)"), format{}("%1 %c.%r %cconst%r %2"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("(fp.div roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.div"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,20,558,184)"), format{}("%1 %c/Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,18,408,172)"), format{}("%1 %c/Int%r %2"), function{}()]
  symbol Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(SortVal{}, SortValStack{}) : SortValStack{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,25,340,46)"), format{}("%1 %c:%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shlInt"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,18,418,172)"), format{}("%1 %c<<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("fp.leq"), hook{}("FLOAT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(584,19,584,151)"), format{}("%1 %c<=Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<="), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(434,19,434,176)"), format{}("%1 %c<=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,19,155,91)"), format{}("%1 %c<=Map%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(245,19,245,85)"), format{}("%1 %c<=Set%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(654,19,654,82)"), format{}("%1 %c<=String%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("fp.lt"), hook{}("FLOAT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,19,585,147)"), format{}("%1 %c<Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(435,19,435,171)"), format{}("%1 %c<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(653,19,653,82)"), format{}("%1 %c<String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,132)"), format{}("%1 %c=/=Bool%r %2"), function{}()]
  symbol Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("(not (fp.eq #1 #2))"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,19,589,148)"), format{}("%1 %c=/=Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(439,19,439,188)"), format{}("%1 %c=/=Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), notEqualEqualK{}(), smt-hook{}("distinct"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,19,925,170)"), format{}("%1 %c=/=K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(650,19,650,94)"), format{}("%1 %c=/=String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,19,348,124)"), format{}("%1 %c==Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{==_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("fp.eq"), klabel{}("_==Float_"), hook{}("FLOAT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(588,19,588,167)"), format{}("%1 %c==Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(438,19,438,177)"), format{}("%1 %c==Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("="), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(924,19,924,156)"), format{}("%1 %c==K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(624,19,624,88)"), format{}("%1 %c==String%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("fp.geq"), hook{}("FLOAT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,19,586,151)"), format{}("%1 %c>=Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">="), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(436,19,436,176)"), format{}("%1 %c>=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(656,19,656,82)"), format{}("%1 %c>=String%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shrInt"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(417,18,417,172)"), format{}("%1 %c>>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("fg.gt"), hook{}("FLOAT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,19,587,147)"), format{}("%1 %c>Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(437,19,437,171)"), format{}("%1 %c>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(655,19,655,82)"), format{}("%1 %c>String%r %2"), function{}()]
  hooked-symbol Lbl'Unds'FuncDefCellMap'Unds'{}(SortFuncDefCellMap{}, SortFuncDefCellMap{}) : SortFuncDefCellMap{} [unit{}(".FuncDefCellMap"), element{}("FuncDefCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<funcDef>")]
  hooked-symbol Lbl'Unds'GlobalInstCellMap'Unds'{}(SortGlobalInstCellMap{}, SortGlobalInstCellMap{}) : SortGlobalInstCellMap{} [unit{}(".GlobalInstCellMap"), element{}("GlobalInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<globalInst>")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(".List"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), element{}("ListItem"), symbol'Kywd'{}(), assoc{}(), smtlib{}("smt_seq_concat"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,19,291,192)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(".Map"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), element{}("_|->_"), symbol'Kywd'{}(), comm{}(), assoc{}(), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,18,107,172)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'MemInstCellMap'Unds'{}(SortMemInstCellMap{}, SortMemInstCellMap{}) : SortMemInstCellMap{} [unit{}(".MemInstCellMap"), element{}("MemInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<memInst>")]
  hooked-symbol Lbl'Unds'ModuleInstCellMap'Unds'{}(SortModuleInstCellMap{}, SortModuleInstCellMap{}) : SortModuleInstCellMap{} [unit{}(".ModuleInstCellMap"), element{}("ModuleInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<moduleInst>")]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(".Set"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), element{}("SetItem"), symbol'Kywd'{}(), idem{}(), comm{}(), assoc{}(), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,18,226,176)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'TabInstCellMap'Unds'{}(SortTabInstCellMap{}, SortTabInstCellMap{}) : SortTabInstCellMap{} [unit{}(".TabInstCellMap"), element{}("TabInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<tabInst>")]
  symbol Lbl'Unds'WASM-DATA'Unds'OptionalId{}() : SortOptionalId{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".Identifier"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,27,39,50)"), format{}("%c%r"), injective{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("BYTES.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(760,20,760,90)"), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,19,303,107)"), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,18,128,121)"), format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqBUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Int{}(SortBytes{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("BYTES.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(761,18,761,62)"), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,20,122,138)"), format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("(mod (^ #1 #2) #3)"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,18,403,138)"), format{}("%1 %c^%Int%r %2 %3"), function{}()]
  hooked-symbol Lbl'UndsXor-'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}^{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), hook{}("FLOAT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(555,20,555,98)"), format{}("%1 %c^Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("^"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,18,402,177)"), format{}("%1 %c^Int%r %2"), function{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(SortWasmString{}, SortDataString{}) : SortDataString{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), right{}(), klabel{}("listWasmString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(471,32,471,94)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(SortIndex{}, SortElemSegment{}) : SortElemSegment{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), right{}(), klabel{}("listIndex"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,28,84,62)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(SortAllocatedKind{}, SortIndex{}) : SortExternval{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(562,30,562,48)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortLimits{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,29,234,35)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(SortValType{}, SortValTypes{}) : SortValTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), right{}(), klabel{}("listValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,25,129,64)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(SortInlineExport{}, SortFuncSpec{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,27,303,47)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(SortInlineImport{}, SortTypeUse{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,27,355,46)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(SortInlineExport{}, SortGlobalSpec{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,27,289,49)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(SortInlineImport{}, SortTextFormatGlobalType{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,27,354,59)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(SortInlineExport{}, SortMemorySpec{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,27,331,49)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(SortInlineImport{}, SortMemType{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,27,357,46)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(SortInlineExport{}, SortTableSpec{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,27,317,48)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(SortInlineImport{}, SortTableType{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,27,356,48)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(SortDefn{}, SortDefns{}) : SortDefns{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), macro{}(), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,27,151,65)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(SortEmptyStmt{}, SortEmptyStmts{}) : SortEmptyStmts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,27,149,65)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(SortTextFormatGlobalType{}, SortInstr{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(472,27,472,52)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(SortMut{}, SortAValType{}) : SortGlobalType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(465,27,465,38)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(SortInstr{}, SortInstrs{}) : SortInstrs{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,27,150,65)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(SortLoadOp{}, SortMemArg{}) : SortLoadOpM{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1014,33,1014,45)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(SortLocalDecl{}, SortLocalDecls{}) : SortLocalDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), right{}(), klabel{}("listLocalDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(624,27,624,77)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(SortOffsetArg{}, SortAlignArg{}) : SortMemArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1074,46,1074,63)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(SortStmt{}, SortStmts{}) : SortStmts{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,27,152,65)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(SortStoreOp{}, SortMemArg{}) : SortStoreOpM{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,35,956,48)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(SortLimits{}, SortTableElemType{}) : SortTableType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(863,26,863,45)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(SortTypeKeyWord{}, SortValTypes{}) : SortTypeDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,26,551,45)"), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(SortTypeDecl{}, SortTypeDecls{}) : SortTypeDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), right{}(), klabel{}("listTypeDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(553,26,553,67)"), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(SortTypeUse{}, SortLocalDecls{}, SortInstrs{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(677,25,677,49)"), format{}("%1 %2 %3"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,19,341,189)"), format{}("%1 %candBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,19,342,151)"), format{}("%1 %candThenBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,18,411,121)"), format{}("%1 %cdivInt%r %2"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,19,440,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), format{}("%1 %cdividesInt%r %2")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("=>"), boolOperation{}(), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,19,346,150)"), format{}("%1 %cimpliesBool%r %2"), function{}()]
  symbol Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(SortInt{}, SortByteMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("inBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(545,21,545,81)"), format{}("%1 %cinBytes%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,19,315,101)"), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(146,19,146,93)"), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(412,18,412,121)"), format{}("%1 %cmodInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,19,344,176)"), format{}("%1 %corBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,19,345,148)"), format{}("%1 %corElseBool%r %2"), function{}()]
  symbol Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1264,20,1264,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), format{}("%1 %cup/Int%r %2")]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("xor"), boolOperation{}(), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(343,19,343,143)"), format{}("%1 %cxorBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("xorInt"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(422,18,422,188)"), format{}("%1 %cxorInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,18,114,144)"), format{}("%1 %c|->%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("orInt"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(424,18,424,179)"), format{}("%1 %c|Int%r %2"), function{}()]
  hooked-symbol LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("fp.abs"), klabel{}("absFloat"), hook{}("FLOAT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(565,20,565,105)"), format{}("%cabsFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,18,428,123)"), format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,22,86,26)"), format{}("%cabs%r"), injective{}()]
  hooked-symbol LblacosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("acosFloat"), hook{}("FLOAT.acos"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(575,20,575,76)"), format{}("%cacosFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,23,121,27)"), format{}("%cadd%r"), injective{}()]
  symbol Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'WasmInt{}(SortWasmInt{}) : SortAlignArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1078,26,1078,42)"), format{}("%calign=%r %1"), injective{}()]
  symbol Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeUse{}, SortLocalDecls{}, SortInstrs{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("allocfunc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(679,25,679,75)"), format{}("%callocfunc%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(SortOptionalId{}, SortGlobalType{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("allocglobal"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(474,27,474,62)"), format{}("%callocglobal%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(SortOptionalId{}, SortInt{}, SortOptionalInt{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("allocmemory"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(912,27,912,68)"), format{}("%callocmemory%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(SortOptionalId{}, SortInt{}, SortOptionalInt{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("alloctable"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(866,26,866,66)"), format{}("%calloctable%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(SortOptionalId{}, SortTypeDecls{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("alloctype"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(600,25,600,67)"), format{}("%calloctype%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,23,170,27)"), format{}("%cand%r"), injective{}()]
  symbol LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(SortTypeDecls{}) : SortFuncType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("TypeDeclsAsFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,25,581,96)"), format{}("%casFuncType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(SortMap{}, SortMap{}, SortTypeUse{}) : SortFuncType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("TypeUseAsFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(582,25,582,96)"), format{}("%casFuncType%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(SortTextFormatGlobalType{}) : SortGlobalType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("asGMut"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(466,27,466,66)"), format{}("%casGMut%r %c(%r %1 %c)%r"), function{}()]
  symbol LblasLocalType'LParUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls{}(SortLocalDecls{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("asLocalType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(627,25,627,72)"), format{}("%casLocalType%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblasinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("asinFloat"), hook{}("FLOAT.asin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(574,20,574,76)"), format{}("%casinFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblatan2Float'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("atan2Float"), hook{}("FLOAT.atan2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(577,20,577,77)"), format{}("%catan2Float%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblatanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("atanFloat"), hook{}("FLOAT.atan"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(576,20,576,88)"), format{}("%catanFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblbigEndianBytes{}() : SortEndianness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("bigEndianBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(751,25,751,61)"), format{}("%cBE%r"), injective{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(431,18,431,102)"), format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortIdentifier{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,27,196,78)"), format{}("%cblock%r %1 %2 %3 %cend%r %4"), injective{}()]
  symbol Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(SortTypeDecls{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,22,345,51)"), format{}("%cblock%r %1 %2 %cend%r"), injective{}()]
  symbol Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(SortVecType{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,22,346,51)"), format{}("%cblock%r %1 %2 %cend%r"), injective{}()]
  symbol Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,27,360,36)"), format{}("%cbr%r %1"), injective{}()]
  symbol Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,27,371,39)"), format{}("%cbr_if%r %1"), injective{}()]
  symbol Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(SortElemSegment{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(380,27,380,48)"), format{}("%cbr_table%r %1"), injective{}()]
  symbol Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(766,27,766,38)"), format{}("%ccall%r %1"), injective{}()]
  symbol Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(SortTypeUse{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(779,27,779,49)"), format{}("%ccall_indirect%r %1"), injective{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(658,21,658,80)"), format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("ceilFloat"), hook{}("FLOAT.ceil"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(568,20,568,88)"), format{}("%cceilFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,57,86,62)"), format{}("%cceil%r"), injective{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,20,158,100)"), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,20,251,94)"), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(627,21,627,69)"), format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,22,37,26)"), format{}("%cclz%r"), injective{}()]
  symbol Lblconst'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,29,225,35)"), format{}("%cconst%r"), injective{}()]
  symbol Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,25,370,39)"), format{}("%cconvert_i32_s%r"), injective{}()]
  symbol Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,43,370,57)"), format{}("%cconvert_i32_u%r"), injective{}()]
  symbol Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,25,375,39)"), format{}("%cconvert_i64_s%r"), injective{}()]
  symbol Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,43,375,57)"), format{}("%cconvert_i64_u%r"), injective{}()]
  symbol Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,23,226,32)"), format{}("%ccopysign%r"), injective{}()]
  hooked-symbol LblcosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("cosFloat"), hook{}("FLOAT.cos"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(572,20,572,87)"), format{}("%ccosFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(648,18,648,150)"), format{}("%ccountAllOccurrences%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(SortMap{}) : SortContext{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("ctx"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,24,393,41)"), format{}("%cctx%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,30,37,34)"), format{}("%cctz%r"), injective{}()]
  symbol Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(SortIndex{}, SortBytes{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,29,1237,66)"), format{}("%cdata%r %c{%r %1 %2 %c}%r"), injective{}()]
  symbol Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(389,25,389,36)"), format{}("%cdemote_f64%r"), injective{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(659,21,659,86)"), format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(223,23,223,27)"), format{}("%cdiv%r"), injective{}()]
  symbol Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,23,142,29)"), format{}("%cdiv_s%r"), injective{}()]
  symbol Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,23,134,29)"), format{}("%cdiv_u%r"), injective{}()]
  symbol Lbldrop'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(296,27,296,32)"), format{}("%cdrop%r"), injective{}()]
  symbol Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(SortIndex{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1199,29,1199,67)"), format{}("%celem%r %c{%r %1 %2 %c}%r"), injective{}()]
  symbol Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,23,276,26)"), format{}("%ceq%r"), injective{}()]
  symbol Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}() : SortTestOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,23,253,27)"), format{}("%ceqz%r"), injective{}()]
  hooked-symbol LblexpFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("expFloat"), hook{}("FLOAT.exp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,20,569,87)"), format{}("%cexpFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("exponentBitsFloat"), hook{}("FLOAT.exponentBits"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,18,547,90)"), format{}("%cexponentBitsFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblexponentFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("exponentFloat"), hook{}("FLOAT.exponent"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,18,546,82)"), format{}("%cexponentFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,42,361,55)"), format{}("%cextend_i32_s%r"), injective{}()]
  symbol Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,25,361,38)"), format{}("%cextend_i32_u%r"), injective{}()]
  symbol Lblf32'Unds'WASM-DATA'Unds'FValType{}() : SortFValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,25,117,29)"), format{}("%cf32%r"), injective{}()]
  symbol Lblf64'Unds'WASM-DATA'Unds'FValType{}() : SortFValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,33,117,37)"), format{}("%cf64%r"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,19,309,99)"), format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(633,18,633,115)"), format{}("%cfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(631,18,631,110)"), format{}("%cfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblfloatAdd{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatAdd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,23,220,54)"), format{}("%cadd%r"), injective{}()]
  symbol LblfloatEq{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatEq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,23,324,52)"), format{}("%ceq%r"), injective{}()]
  symbol LblfloatMul{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatMul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,23,222,54)"), format{}("%cmul%r"), injective{}()]
  symbol LblfloatNe{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatNe"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,23,325,52)"), format{}("%cne%r"), injective{}()]
  symbol LblfloatSub{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatSub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,23,221,54)"), format{}("%csub%r"), injective{}()]
  hooked-symbol LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("floorFloat"), hook{}("FLOAT.floor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(567,20,567,89)"), format{}("%cfloorFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,47,86,53)"), format{}("%cfloor%r"), injective{}()]
  symbol Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(SortInt{}, SortValTypes{}, SortValStack{}, SortMap{}, SortInt{}, SortMap{}) : SortFrame{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(716,22,716,62)"), format{}("%cframe%r %1 %2 %3 %4 %5 %6"), injective{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(523,18,523,72)"), format{}("%cfreshInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,30,561,35)"), format{}("%cfunc%r"), injective{}()]
  symbol Lblfuncref'Unds'WASM'Unds'TableElemType{}() : SortTableElemType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(848,30,848,38)"), format{}("%cfuncref%r"), injective{}()]
  symbol LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(SortTypeKeyWord{}, SortTypeDecls{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("gatherTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(556,25,556,85)"), format{}("%cgatherTypes%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,23,323,26)"), format{}("%cge%r"), injective{}()]
  symbol Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,50,299,55)"), format{}("%cge_s%r"), injective{}()]
  symbol Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,32,299,37)"), format{}("%cge_u%r"), injective{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [function{}(), format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r")]
  symbol Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(504,27,504,44)"), format{}("%cglobal.get%r %1"), injective{}()]
  symbol Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,27,505,44)"), format{}("%cglobal.set%r %1"), injective{}()]
  symbol Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,60,561,67)"), format{}("%cglobal%r"), injective{}()]
  symbol Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,22,1114,31)"), format{}("%cgrow%r %1"), injective{}()]
  symbol Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,23,321,26)"), format{}("%cgt%r"), injective{}()]
  symbol Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,50,286,55)"), format{}("%cgt_s%r"), injective{}()]
  symbol Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,32,286,37)"), format{}("%cgt_u%r"), injective{}()]
  symbol Lbli32'Unds'WASM-DATA'Unds'IValType{}() : SortIValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,25,116,29)"), format{}("%ci32%r"), injective{}()]
  symbol Lbli64'Unds'WASM-DATA'Unds'IValType{}() : SortIValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,33,116,37)"), format{}("%ci64%r"), injective{}()]
  symbol Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(SortIdentifier{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,27,216,100)"), format{}("%cif%r %1 %2 %3 %celse%r %4 %5 %cend%r %6"), injective{}()]
  symbol Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,27,217,100)"), format{}("%cif%r %1 %2 %3 %cend%r %4"), injective{}()]
  symbol Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(SortTypeDecls{}, SortInstrs{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(389,22,389,62)"), format{}("%cif%r %1 %2 %celse%r %3 %cend%r"), injective{}()]
  symbol LblinitCurFrameCell{}() : SortCurFrameCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitCurFrameCell%r")]
  symbol LblinitCurModIdxCell{}() : SortCurModIdxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitCurModIdxCell%r")]
  symbol LblinitDeterministicMemoryGrowthCell{}() : SortDeterministicMemoryGrowthCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitDeterministicMemoryGrowthCell%r")]
  symbol LblinitExportsCell{}() : SortExportsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitExportsCell%r")]
  symbol LblinitFAddrCell{}() : SortFAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFAddrCell%r")]
  symbol LblinitFCodeCell{}() : SortFCodeCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFCodeCell%r")]
  symbol LblinitFLocalCell{}() : SortFLocalCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFLocalCell%r")]
  symbol LblinitFModInstCell{}() : SortFModInstCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFModInstCell%r")]
  symbol LblinitFTypeCell{}() : SortFTypeCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFTypeCell%r")]
  symbol LblinitFuncAddrsCell{}() : SortFuncAddrsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFuncAddrsCell%r")]
  symbol LblinitFuncDefCell{}() : SortFuncDefCellMap{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFuncDefCell%r")]
  symbol LblinitFuncIdsCell{}() : SortFuncIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFuncIdsCell%r")]
  symbol LblinitFuncsCell{}() : SortFuncsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitFuncsCell%r")]
  symbol LblinitGAddrCell{}() : SortGAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGAddrCell%r")]
  symbol LblinitGMutCell{}() : SortGMutCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGMutCell%r")]
  symbol LblinitGValueCell{}() : SortGValueCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGValueCell%r")]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGeneratedCounterCell%r")]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r")]
  symbol LblinitGlobIdsCell{}() : SortGlobIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGlobIdsCell%r")]
  symbol LblinitGlobalAddrsCell{}() : SortGlobalAddrsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGlobalAddrsCell%r")]
  symbol LblinitGlobalInstCell{}() : SortGlobalInstCellMap{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGlobalInstCell%r")]
  symbol LblinitGlobalsCell{}() : SortGlobalsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitGlobalsCell%r")]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitKCell%r %c(%r %1 %c)%r")]
  symbol LblinitLabelDepthCell{}() : SortLabelDepthCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitLabelDepthCell%r")]
  symbol LblinitLabelIdsCell{}() : SortLabelIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitLabelIdsCell%r")]
  symbol LblinitLocalsCell{}() : SortLocalsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitLocalsCell%r")]
  symbol LblinitMAddrCell{}() : SortMAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMAddrCell%r")]
  symbol LblinitMainStoreCell{}() : SortMainStoreCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMainStoreCell%r")]
  symbol LblinitMdataCell{}() : SortMdataCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMdataCell%r")]
  symbol LblinitMemAddrsCell{}() : SortMemAddrsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMemAddrsCell%r")]
  symbol LblinitMemIdsCell{}() : SortMemIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMemIdsCell%r")]
  symbol LblinitMemInstCell{}() : SortMemInstCellMap{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMemInstCell%r")]
  symbol LblinitMemsCell{}() : SortMemsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMemsCell%r")]
  symbol LblinitMmaxCell{}() : SortMmaxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMmaxCell%r")]
  symbol LblinitModIdxCell{}() : SortModIdxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitModIdxCell%r")]
  symbol LblinitModuleIdsCell{}() : SortModuleIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitModuleIdsCell%r")]
  symbol LblinitModuleInstCell{}() : SortModuleInstCellMap{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitModuleInstCell%r")]
  symbol LblinitModuleInstancesCell{}() : SortModuleInstancesCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitModuleInstancesCell%r")]
  symbol LblinitModuleRegistryCell{}() : SortModuleRegistryCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitModuleRegistryCell%r")]
  symbol LblinitMsizeCell{}() : SortMsizeCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitMsizeCell%r")]
  symbol LblinitNextFreshIdCell{}() : SortNextFreshIdCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextFreshIdCell%r")]
  symbol LblinitNextFuncAddrCell{}() : SortNextFuncAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextFuncAddrCell%r")]
  symbol LblinitNextFuncIdxCell{}() : SortNextFuncIdxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextFuncIdxCell%r")]
  symbol LblinitNextGlobAddrCell{}() : SortNextGlobAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextGlobAddrCell%r")]
  symbol LblinitNextGlobIdxCell{}() : SortNextGlobIdxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextGlobIdxCell%r")]
  symbol LblinitNextMemAddrCell{}() : SortNextMemAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextMemAddrCell%r")]
  symbol LblinitNextModuleIdxCell{}() : SortNextModuleIdxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextModuleIdxCell%r")]
  symbol LblinitNextTabAddrCell{}() : SortNextTabAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextTabAddrCell%r")]
  symbol LblinitNextTypeIdxCell{}() : SortNextTypeIdxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitNextTypeIdxCell%r")]
  symbol LblinitTAddrCell{}() : SortTAddrCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTAddrCell%r")]
  symbol LblinitTabAddrsCell{}() : SortTabAddrsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTabAddrsCell%r")]
  symbol LblinitTabIdsCell{}() : SortTabIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTabIdsCell%r")]
  symbol LblinitTabInstCell{}() : SortTabInstCellMap{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTabInstCell%r")]
  symbol LblinitTabsCell{}() : SortTabsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTabsCell%r")]
  symbol LblinitTdataCell{}() : SortTdataCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTdataCell%r")]
  symbol LblinitTmaxCell{}() : SortTmaxCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTmaxCell%r")]
  symbol LblinitTsizeCell{}() : SortTsizeCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTsizeCell%r")]
  symbol LblinitTypeIdsCell{}() : SortTypeIdsCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTypeIdsCell%r")]
  symbol LblinitTypesCell{}() : SortTypesCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitTypesCell%r")]
  symbol LblinitValstackCell{}() : SortValstackCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitValstackCell%r")]
  symbol LblinitWasmCell{}(SortMap{}) : SortWasmCell{} [initializer{}(), function{}(), noThread{}(), format{}("%cinitWasmCell%r %c(%r %1 %c)%r")]
  symbol Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(SortInt{}, SortVal{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,23,416,43)"), format{}("%cinit_local%r %1 %2"), injective{}()]
  symbol Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(SortValStack{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(417,23,417,48)"), format{}("%cinit_locals%r %1"), injective{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(236,18,236,88)"), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblis'Hash'Layout{}(SortK{}) : SortBool{} [function{}(), predicate{}("#Layout"), format{}("%cis#Layout%r %c(%r %1 %c)%r")]
  symbol LblisAValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("AValType"), format{}("%cisAValType%r %c(%r %1 %c)%r")]
  symbol LblisAlignArg{}(SortK{}) : SortBool{} [function{}(), predicate{}("AlignArg"), format{}("%cisAlignArg%r %c(%r %1 %c)%r")]
  symbol LblisAlloc{}(SortK{}) : SortBool{} [function{}(), predicate{}("Alloc"), format{}("%cisAlloc%r %c(%r %1 %c)%r")]
  symbol LblisAllocatedKind{}(SortK{}) : SortBool{} [function{}(), predicate{}("AllocatedKind"), format{}("%cisAllocatedKind%r %c(%r %1 %c)%r")]
  symbol LblisBlockInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("BlockInstr"), format{}("%cisBlockInstr%r %c(%r %1 %c)%r")]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bool"), format{}("%cisBool%r %c(%r %1 %c)%r")]
  symbol LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(SortInt{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("isByte"), klabel{}("isByte"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(544,21,544,80)"), format{}("%cisByte%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisByteMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("ByteMap"), format{}("%cisByteMap%r %c(%r %1 %c)%r")]
  symbol LblisBytes{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bytes"), format{}("%cisBytes%r %c(%r %1 %c)%r")]
  symbol LblisCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cell"), format{}("%cisCell%r %c(%r %1 %c)%r")]
  symbol LblisContext{}(SortK{}) : SortBool{} [function{}(), predicate{}("Context"), format{}("%cisContext%r %c(%r %1 %c)%r")]
  symbol LblisCurFrameCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurFrameCell"), format{}("%cisCurFrameCell%r %c(%r %1 %c)%r")]
  symbol LblisCurFrameCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurFrameCellFragment"), format{}("%cisCurFrameCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisCurFrameCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurFrameCellOpt"), format{}("%cisCurFrameCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisCurModIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurModIdxCell"), format{}("%cisCurModIdxCell%r %c(%r %1 %c)%r")]
  symbol LblisCurModIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurModIdxCellOpt"), format{}("%cisCurModIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisCvtOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("CvtOp"), format{}("%cisCvtOp%r %c(%r %1 %c)%r")]
  symbol LblisCvtf32Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvtf32Op"), format{}("%cisCvtf32Op%r %c(%r %1 %c)%r")]
  symbol LblisCvtf64Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvtf64Op"), format{}("%cisCvtf64Op%r %c(%r %1 %c)%r")]
  symbol LblisCvti32Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvti32Op"), format{}("%cisCvti32Op%r %c(%r %1 %c)%r")]
  symbol LblisCvti64Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvti64Op"), format{}("%cisCvti64Op%r %c(%r %1 %c)%r")]
  symbol LblisDataDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("DataDefn"), format{}("%cisDataDefn%r %c(%r %1 %c)%r")]
  symbol LblisDataString{}(SortK{}) : SortBool{} [function{}(), predicate{}("DataString"), format{}("%cisDataString%r %c(%r %1 %c)%r")]
  symbol LblisDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("Defn"), format{}("%cisDefn%r %c(%r %1 %c)%r")]
  symbol LblisDefns{}(SortK{}) : SortBool{} [function{}(), predicate{}("Defns"), format{}("%cisDefns%r %c(%r %1 %c)%r")]
  symbol LblisDeterministicMemoryGrowthCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeterministicMemoryGrowthCell"), format{}("%cisDeterministicMemoryGrowthCell%r %c(%r %1 %c)%r")]
  symbol LblisDeterministicMemoryGrowthCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeterministicMemoryGrowthCellOpt"), format{}("%cisDeterministicMemoryGrowthCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisElemDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("ElemDefn"), format{}("%cisElemDefn%r %c(%r %1 %c)%r")]
  symbol LblisElemSegment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ElemSegment"), format{}("%cisElemSegment%r %c(%r %1 %c)%r")]
  symbol LblisEmptyStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("EmptyStmt"), format{}("%cisEmptyStmt%r %c(%r %1 %c)%r")]
  symbol LblisEmptyStmts{}(SortK{}) : SortBool{} [function{}(), predicate{}("EmptyStmts"), format{}("%cisEmptyStmts%r %c(%r %1 %c)%r")]
  symbol LblisEndianness{}(SortK{}) : SortBool{} [function{}(), predicate{}("Endianness"), format{}("%cisEndianness%r %c(%r %1 %c)%r")]
  symbol LblisExportDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExportDefn"), format{}("%cisExportDefn%r %c(%r %1 %c)%r")]
  symbol LblisExportsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExportsCell"), format{}("%cisExportsCell%r %c(%r %1 %c)%r")]
  symbol LblisExportsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExportsCellOpt"), format{}("%cisExportsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisExternval{}(SortK{}) : SortBool{} [function{}(), predicate{}("Externval"), format{}("%cisExternval%r %c(%r %1 %c)%r")]
  symbol LblisFAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FAddrCell"), format{}("%cisFAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisFAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FAddrCellOpt"), format{}("%cisFAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFBinOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("FBinOp"), format{}("%cisFBinOp%r %c(%r %1 %c)%r")]
  symbol LblisFCodeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FCodeCell"), format{}("%cisFCodeCell%r %c(%r %1 %c)%r")]
  symbol LblisFCodeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FCodeCellOpt"), format{}("%cisFCodeCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFLocalCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FLocalCell"), format{}("%cisFLocalCell%r %c(%r %1 %c)%r")]
  symbol LblisFLocalCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FLocalCellOpt"), format{}("%cisFLocalCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFModInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FModInstCell"), format{}("%cisFModInstCell%r %c(%r %1 %c)%r")]
  symbol LblisFModInstCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FModInstCellOpt"), format{}("%cisFModInstCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFRelOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("FRelOp"), format{}("%cisFRelOp%r %c(%r %1 %c)%r")]
  symbol LblisFTypeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FTypeCell"), format{}("%cisFTypeCell%r %c(%r %1 %c)%r")]
  symbol LblisFTypeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FTypeCellOpt"), format{}("%cisFTypeCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFUnOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("FUnOp"), format{}("%cisFUnOp%r %c(%r %1 %c)%r")]
  symbol LblisFVal{}(SortK{}) : SortBool{} [function{}(), predicate{}("FVal"), format{}("%cisFVal%r %c(%r %1 %c)%r")]
  symbol LblisFValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("FValType"), format{}("%cisFValType%r %c(%r %1 %c)%r")]
  symbol LblisFloat{}(SortK{}) : SortBool{} [function{}(), predicate{}("Float"), format{}("%cisFloat%r %c(%r %1 %c)%r")]
  symbol LblisFoldedInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("FoldedInstr"), format{}("%cisFoldedInstr%r %c(%r %1 %c)%r")]
  symbol LblisFrame{}(SortK{}) : SortBool{} [function{}(), predicate{}("Frame"), format{}("%cisFrame%r %c(%r %1 %c)%r")]
  symbol LblisFuncAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncAddrsCell"), format{}("%cisFuncAddrsCell%r %c(%r %1 %c)%r")]
  symbol LblisFuncAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncAddrsCellOpt"), format{}("%cisFuncAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFuncDefCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefCell"), format{}("%cisFuncDefCell%r %c(%r %1 %c)%r")]
  symbol LblisFuncDefCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefCellFragment"), format{}("%cisFuncDefCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisFuncDefCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefCellMap"), format{}("%cisFuncDefCellMap%r %c(%r %1 %c)%r")]
  symbol LblisFuncDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefn"), format{}("%cisFuncDefn%r %c(%r %1 %c)%r")]
  symbol LblisFuncIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncIdsCell"), format{}("%cisFuncIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisFuncIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncIdsCellOpt"), format{}("%cisFuncIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisFuncSpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncSpec"), format{}("%cisFuncSpec%r %c(%r %1 %c)%r")]
  symbol LblisFuncType{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncType"), format{}("%cisFuncType%r %c(%r %1 %c)%r")]
  symbol LblisFuncsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncsCell"), format{}("%cisFuncsCell%r %c(%r %1 %c)%r")]
  symbol LblisFuncsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncsCellFragment"), format{}("%cisFuncsCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisFuncsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncsCellOpt"), format{}("%cisFuncsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GAddrCell"), format{}("%cisGAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisGAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GAddrCellOpt"), format{}("%cisGAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGMutCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GMutCell"), format{}("%cisGMutCell%r %c(%r %1 %c)%r")]
  symbol LblisGMutCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GMutCellOpt"), format{}("%cisGMutCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGValueCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GValueCell"), format{}("%cisGValueCell%r %c(%r %1 %c)%r")]
  symbol LblisGValueCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GValueCellOpt"), format{}("%cisGValueCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCell"), format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r")]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCellOpt"), format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCell"), format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r")]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCellFragment"), format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisGlobIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobIdsCell"), format{}("%cisGlobIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisGlobIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobIdsCellOpt"), format{}("%cisGlobIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGlobalAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalAddrsCell"), format{}("%cisGlobalAddrsCell%r %c(%r %1 %c)%r")]
  symbol LblisGlobalAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalAddrsCellOpt"), format{}("%cisGlobalAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisGlobalDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalDefn"), format{}("%cisGlobalDefn%r %c(%r %1 %c)%r")]
  symbol LblisGlobalInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalInstCell"), format{}("%cisGlobalInstCell%r %c(%r %1 %c)%r")]
  symbol LblisGlobalInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalInstCellFragment"), format{}("%cisGlobalInstCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisGlobalInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalInstCellMap"), format{}("%cisGlobalInstCellMap%r %c(%r %1 %c)%r")]
  symbol LblisGlobalSpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalSpec"), format{}("%cisGlobalSpec%r %c(%r %1 %c)%r")]
  symbol LblisGlobalType{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalType"), format{}("%cisGlobalType%r %c(%r %1 %c)%r")]
  symbol LblisGlobalsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalsCell"), format{}("%cisGlobalsCell%r %c(%r %1 %c)%r")]
  symbol LblisGlobalsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalsCellFragment"), format{}("%cisGlobalsCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisGlobalsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalsCellOpt"), format{}("%cisGlobalsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisIBinOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IBinOp"), format{}("%cisIBinOp%r %c(%r %1 %c)%r")]
  symbol LblisIRelOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IRelOp"), format{}("%cisIRelOp%r %c(%r %1 %c)%r")]
  symbol LblisIUnOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IUnOp"), format{}("%cisIUnOp%r %c(%r %1 %c)%r")]
  symbol LblisIVal{}(SortK{}) : SortBool{} [function{}(), predicate{}("IVal"), format{}("%cisIVal%r %c(%r %1 %c)%r")]
  symbol LblisIValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("IValType"), format{}("%cisIValType%r %c(%r %1 %c)%r")]
  symbol LblisIdentifier{}(SortK{}) : SortBool{} [function{}(), predicate{}("Identifier"), format{}("%cisIdentifier%r %c(%r %1 %c)%r")]
  symbol LblisIdentifierToken{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdentifierToken"), format{}("%cisIdentifierToken%r %c(%r %1 %c)%r")]
  symbol LblisImportDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("ImportDefn"), format{}("%cisImportDefn%r %c(%r %1 %c)%r")]
  symbol LblisImportDesc{}(SortK{}) : SortBool{} [function{}(), predicate{}("ImportDesc"), format{}("%cisImportDesc%r %c(%r %1 %c)%r")]
  symbol LblisIndex{}(SortK{}) : SortBool{} [function{}(), predicate{}("Index"), format{}("%cisIndex%r %c(%r %1 %c)%r")]
  symbol LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("isInfinite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,19,551,62)"), format{}("%cisInfinite%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInlineExport{}(SortK{}) : SortBool{} [function{}(), predicate{}("InlineExport"), format{}("%cisInlineExport%r %c(%r %1 %c)%r")]
  symbol LblisInlineImport{}(SortK{}) : SortBool{} [function{}(), predicate{}("InlineImport"), format{}("%cisInlineImport%r %c(%r %1 %c)%r")]
  symbol LblisInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("Instr"), format{}("%cisInstr%r %c(%r %1 %c)%r")]
  symbol LblisInstrs{}(SortK{}) : SortBool{} [function{}(), predicate{}("Instrs"), format{}("%cisInstrs%r %c(%r %1 %c)%r")]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Int"), format{}("%cisInt%r %c(%r %1 %c)%r")]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), predicate{}("K"), format{}("%cisK%r %c(%r %1 %c)%r")]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCell"), format{}("%cisKCell%r %c(%r %1 %c)%r")]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCellOpt"), format{}("%cisKCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), predicate{}("KConfigVar"), format{}("%cisKConfigVar%r %c(%r %1 %c)%r")]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("KItem"), format{}("%cisKItem%r %c(%r %1 %c)%r")]
  symbol LblisLabel{}(SortK{}) : SortBool{} [function{}(), predicate{}("Label"), format{}("%cisLabel%r %c(%r %1 %c)%r")]
  symbol LblisLabelDepthCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelDepthCell"), format{}("%cisLabelDepthCell%r %c(%r %1 %c)%r")]
  symbol LblisLabelDepthCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelDepthCellOpt"), format{}("%cisLabelDepthCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisLabelIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelIdsCell"), format{}("%cisLabelIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisLabelIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelIdsCellOpt"), format{}("%cisLabelIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisLimits{}(SortK{}) : SortBool{} [function{}(), predicate{}("Limits"), format{}("%cisLimits%r %c(%r %1 %c)%r")]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), predicate{}("List"), format{}("%cisList%r %c(%r %1 %c)%r")]
  symbol LblisLoadOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("LoadOp"), format{}("%cisLoadOp%r %c(%r %1 %c)%r")]
  symbol LblisLoadOpM{}(SortK{}) : SortBool{} [function{}(), predicate{}("LoadOpM"), format{}("%cisLoadOpM%r %c(%r %1 %c)%r")]
  symbol LblisLocalDecl{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalDecl"), format{}("%cisLocalDecl%r %c(%r %1 %c)%r")]
  symbol LblisLocalDecls{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalDecls"), format{}("%cisLocalDecls%r %c(%r %1 %c)%r")]
  symbol LblisLocalsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalsCell"), format{}("%cisLocalsCell%r %c(%r %1 %c)%r")]
  symbol LblisLocalsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalsCellOpt"), format{}("%cisLocalsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MAddrCell"), format{}("%cisMAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisMAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MAddrCellOpt"), format{}("%cisMAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MInt"), format{}("%cisMInt%r %c(%r %1 %c)%r")]
  symbol LblisMainStoreCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MainStoreCell"), format{}("%cisMainStoreCell%r %c(%r %1 %c)%r")]
  symbol LblisMainStoreCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("MainStoreCellFragment"), format{}("%cisMainStoreCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisMainStoreCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MainStoreCellOpt"), format{}("%cisMainStoreCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("Map"), format{}("%cisMap%r %c(%r %1 %c)%r")]
  symbol LblisMdataCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MdataCell"), format{}("%cisMdataCell%r %c(%r %1 %c)%r")]
  symbol LblisMdataCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MdataCellOpt"), format{}("%cisMdataCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMemAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemAddrsCell"), format{}("%cisMemAddrsCell%r %c(%r %1 %c)%r")]
  symbol LblisMemAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemAddrsCellOpt"), format{}("%cisMemAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMemArg{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemArg"), format{}("%cisMemArg%r %c(%r %1 %c)%r")]
  symbol LblisMemIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemIdsCell"), format{}("%cisMemIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisMemIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemIdsCellOpt"), format{}("%cisMemIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMemInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemInstCell"), format{}("%cisMemInstCell%r %c(%r %1 %c)%r")]
  symbol LblisMemInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemInstCellFragment"), format{}("%cisMemInstCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisMemInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemInstCellMap"), format{}("%cisMemInstCellMap%r %c(%r %1 %c)%r")]
  symbol LblisMemType{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemType"), format{}("%cisMemType%r %c(%r %1 %c)%r")]
  symbol LblisMemoryDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemoryDefn"), format{}("%cisMemoryDefn%r %c(%r %1 %c)%r")]
  symbol LblisMemorySpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemorySpec"), format{}("%cisMemorySpec%r %c(%r %1 %c)%r")]
  symbol LblisMemsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemsCell"), format{}("%cisMemsCell%r %c(%r %1 %c)%r")]
  symbol LblisMemsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemsCellFragment"), format{}("%cisMemsCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisMemsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemsCellOpt"), format{}("%cisMemsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMmaxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MmaxCell"), format{}("%cisMmaxCell%r %c(%r %1 %c)%r")]
  symbol LblisMmaxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MmaxCellOpt"), format{}("%cisMmaxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisModIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModIdxCell"), format{}("%cisModIdxCell%r %c(%r %1 %c)%r")]
  symbol LblisModIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModIdxCellOpt"), format{}("%cisModIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisModuleDecl{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleDecl"), format{}("%cisModuleDecl%r %c(%r %1 %c)%r")]
  symbol LblisModuleIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleIdsCell"), format{}("%cisModuleIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisModuleIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleIdsCellOpt"), format{}("%cisModuleIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisModuleInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstCell"), format{}("%cisModuleInstCell%r %c(%r %1 %c)%r")]
  symbol LblisModuleInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstCellFragment"), format{}("%cisModuleInstCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisModuleInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstCellMap"), format{}("%cisModuleInstCellMap%r %c(%r %1 %c)%r")]
  symbol LblisModuleInstancesCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstancesCell"), format{}("%cisModuleInstancesCell%r %c(%r %1 %c)%r")]
  symbol LblisModuleInstancesCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstancesCellFragment"), format{}("%cisModuleInstancesCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisModuleInstancesCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstancesCellOpt"), format{}("%cisModuleInstancesCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisModuleRegistryCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleRegistryCell"), format{}("%cisModuleRegistryCell%r %c(%r %1 %c)%r")]
  symbol LblisModuleRegistryCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleRegistryCellOpt"), format{}("%cisModuleRegistryCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMsizeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MsizeCell"), format{}("%cisMsizeCell%r %c(%r %1 %c)%r")]
  symbol LblisMsizeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MsizeCellOpt"), format{}("%cisMsizeCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisMut{}(SortK{}) : SortBool{} [function{}(), predicate{}("Mut"), format{}("%cisMut%r %c(%r %1 %c)%r")]
  symbol LblisNValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("NValType"), format{}("%cisNValType%r %c(%r %1 %c)%r")]
  hooked-symbol LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("fp.isNaN"), klabel{}("isNaN"), hook{}("FLOAT.isNaN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(550,19,550,101)"), format{}("%cisNaN%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextFreshIdCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFreshIdCell"), format{}("%cisNextFreshIdCell%r %c(%r %1 %c)%r")]
  symbol LblisNextFreshIdCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFreshIdCellOpt"), format{}("%cisNextFreshIdCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextFuncAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncAddrCell"), format{}("%cisNextFuncAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisNextFuncAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncAddrCellOpt"), format{}("%cisNextFuncAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextFuncIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncIdxCell"), format{}("%cisNextFuncIdxCell%r %c(%r %1 %c)%r")]
  symbol LblisNextFuncIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncIdxCellOpt"), format{}("%cisNextFuncIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextGlobAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobAddrCell"), format{}("%cisNextGlobAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisNextGlobAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobAddrCellOpt"), format{}("%cisNextGlobAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextGlobIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobIdxCell"), format{}("%cisNextGlobIdxCell%r %c(%r %1 %c)%r")]
  symbol LblisNextGlobIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobIdxCellOpt"), format{}("%cisNextGlobIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextMemAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextMemAddrCell"), format{}("%cisNextMemAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisNextMemAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextMemAddrCellOpt"), format{}("%cisNextMemAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextModuleIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextModuleIdxCell"), format{}("%cisNextModuleIdxCell%r %c(%r %1 %c)%r")]
  symbol LblisNextModuleIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextModuleIdxCellOpt"), format{}("%cisNextModuleIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextTabAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTabAddrCell"), format{}("%cisNextTabAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisNextTabAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTabAddrCellOpt"), format{}("%cisNextTabAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNextTypeIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTypeIdxCell"), format{}("%cisNextTypeIdxCell%r %c(%r %1 %c)%r")]
  symbol LblisNextTypeIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTypeIdxCellOpt"), format{}("%cisNextTypeIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisNumber{}(SortK{}) : SortBool{} [function{}(), predicate{}("Number"), format{}("%cisNumber%r %c(%r %1 %c)%r")]
  symbol LblisOffset{}(SortK{}) : SortBool{} [function{}(), predicate{}("Offset"), format{}("%cisOffset%r %c(%r %1 %c)%r")]
  symbol LblisOffsetArg{}(SortK{}) : SortBool{} [function{}(), predicate{}("OffsetArg"), format{}("%cisOffsetArg%r %c(%r %1 %c)%r")]
  symbol LblisOptionalId{}(SortK{}) : SortBool{} [function{}(), predicate{}("OptionalId"), format{}("%cisOptionalId%r %c(%r %1 %c)%r")]
  symbol LblisOptionalInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("OptionalInt"), format{}("%cisOptionalInt%r %c(%r %1 %c)%r")]
  symbol LblisPlainInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("PlainInstr"), format{}("%cisPlainInstr%r %c(%r %1 %c)%r")]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("Set"), format{}("%cisSet%r %c(%r %1 %c)%r")]
  symbol LblisSignedness{}(SortK{}) : SortBool{} [function{}(), predicate{}("Signedness"), format{}("%cisSignedness%r %c(%r %1 %c)%r")]
  symbol LblisStartDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("StartDefn"), format{}("%cisStartDefn%r %c(%r %1 %c)%r")]
  symbol LblisStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stmt"), format{}("%cisStmt%r %c(%r %1 %c)%r")]
  symbol LblisStmts{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stmts"), format{}("%cisStmts%r %c(%r %1 %c)%r")]
  symbol LblisStoreOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("StoreOp"), format{}("%cisStoreOp%r %c(%r %1 %c)%r")]
  symbol LblisStoreOpM{}(SortK{}) : SortBool{} [function{}(), predicate{}("StoreOpM"), format{}("%cisStoreOpM%r %c(%r %1 %c)%r")]
  symbol LblisString{}(SortK{}) : SortBool{} [function{}(), predicate{}("String"), format{}("%cisString%r %c(%r %1 %c)%r")]
  symbol LblisTAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TAddrCell"), format{}("%cisTAddrCell%r %c(%r %1 %c)%r")]
  symbol LblisTAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TAddrCellOpt"), format{}("%cisTAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTabAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabAddrsCell"), format{}("%cisTabAddrsCell%r %c(%r %1 %c)%r")]
  symbol LblisTabAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabAddrsCellOpt"), format{}("%cisTabAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTabIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabIdsCell"), format{}("%cisTabIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisTabIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabIdsCellOpt"), format{}("%cisTabIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTabInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabInstCell"), format{}("%cisTabInstCell%r %c(%r %1 %c)%r")]
  symbol LblisTabInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabInstCellFragment"), format{}("%cisTabInstCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisTabInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabInstCellMap"), format{}("%cisTabInstCellMap%r %c(%r %1 %c)%r")]
  symbol LblisTableDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableDefn"), format{}("%cisTableDefn%r %c(%r %1 %c)%r")]
  symbol LblisTableElemType{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableElemType"), format{}("%cisTableElemType%r %c(%r %1 %c)%r")]
  symbol LblisTableSpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableSpec"), format{}("%cisTableSpec%r %c(%r %1 %c)%r")]
  symbol LblisTableType{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableType"), format{}("%cisTableType%r %c(%r %1 %c)%r")]
  symbol LblisTabsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabsCell"), format{}("%cisTabsCell%r %c(%r %1 %c)%r")]
  symbol LblisTabsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabsCellFragment"), format{}("%cisTabsCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisTabsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabsCellOpt"), format{}("%cisTabsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTdataCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TdataCell"), format{}("%cisTdataCell%r %c(%r %1 %c)%r")]
  symbol LblisTdataCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TdataCellOpt"), format{}("%cisTdataCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTestOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("TestOp"), format{}("%cisTestOp%r %c(%r %1 %c)%r")]
  symbol LblisTextFormatGlobalType{}(SortK{}) : SortBool{} [function{}(), predicate{}("TextFormatGlobalType"), format{}("%cisTextFormatGlobalType%r %c(%r %1 %c)%r")]
  symbol LblisTmaxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TmaxCell"), format{}("%cisTmaxCell%r %c(%r %1 %c)%r")]
  symbol LblisTmaxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TmaxCellOpt"), format{}("%cisTmaxCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTsizeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TsizeCell"), format{}("%cisTsizeCell%r %c(%r %1 %c)%r")]
  symbol LblisTsizeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TsizeCellOpt"), format{}("%cisTsizeCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisType{}(SortK{}) : SortBool{} [function{}(), predicate{}("Type"), format{}("%cisType%r %c(%r %1 %c)%r")]
  symbol LblisTypeDecl{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeDecl"), format{}("%cisTypeDecl%r %c(%r %1 %c)%r")]
  symbol LblisTypeDecls{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeDecls"), format{}("%cisTypeDecls%r %c(%r %1 %c)%r")]
  symbol LblisTypeDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeDefn"), format{}("%cisTypeDefn%r %c(%r %1 %c)%r")]
  symbol LblisTypeIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeIdsCell"), format{}("%cisTypeIdsCell%r %c(%r %1 %c)%r")]
  symbol LblisTypeIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeIdsCellOpt"), format{}("%cisTypeIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisTypeKeyWord{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeKeyWord"), format{}("%cisTypeKeyWord%r %c(%r %1 %c)%r")]
  symbol LblisTypeUse{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeUse"), format{}("%cisTypeUse%r %c(%r %1 %c)%r")]
  symbol LblisTypesCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypesCell"), format{}("%cisTypesCell%r %c(%r %1 %c)%r")]
  symbol LblisTypesCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypesCellOpt"), format{}("%cisTypesCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisVal{}(SortK{}) : SortBool{} [function{}(), predicate{}("Val"), format{}("%cisVal%r %c(%r %1 %c)%r")]
  symbol LblisValStack{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValStack"), format{}("%cisValStack%r %c(%r %1 %c)%r")]
  symbol LblisValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValType"), format{}("%cisValType%r %c(%r %1 %c)%r")]
  symbol LblisValTypes{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValTypes"), format{}("%cisValTypes%r %c(%r %1 %c)%r")]
  symbol LblisValstackCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValstackCell"), format{}("%cisValstackCell%r %c(%r %1 %c)%r")]
  symbol LblisValstackCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValstackCellOpt"), format{}("%cisValstackCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisVecType{}(SortK{}) : SortBool{} [function{}(), predicate{}("VecType"), format{}("%cisVecType%r %c(%r %1 %c)%r")]
  symbol LblisWasmCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmCell"), format{}("%cisWasmCell%r %c(%r %1 %c)%r")]
  symbol LblisWasmCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmCellFragment"), format{}("%cisWasmCellFragment%r %c(%r %1 %c)%r")]
  symbol LblisWasmCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmCellOpt"), format{}("%cisWasmCellOpt%r %c(%r %1 %c)%r")]
  symbol LblisWasmInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmInt"), format{}("%cisWasmInt%r %c(%r %1 %c)%r")]
  symbol LblisWasmIntToken{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmIntToken"), format{}("%cisWasmIntToken%r %c(%r %1 %c)%r")]
  symbol LblisWasmString{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmString"), format{}("%cisWasmString%r %c(%r %1 %c)%r")]
  symbol LblisWasmStringToken{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmStringToken"), format{}("%cisWasmStringToken%r %c(%r %1 %c)%r")]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,18,143,86)"), format{}("%ckeys%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,19,144,79)"), format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(SortVecType{}, SortInstrs{}, SortValStack{}) : SortLabel{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,22,339,60)"), format{}("%clabel%r %1 %c{%r %2 %c}%r %3"), injective{}()]
  symbol Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,23,322,26)"), format{}("%cle%r"), injective{}()]
  symbol Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,41,299,46)"), format{}("%cle_s%r"), injective{}()]
  symbol Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,23,299,28)"), format{}("%cle_u%r"), injective{}()]
  hooked-symbol LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(SortBytes{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smtlib{}("lengthBytes"), klabel{}("lengthBytes"), hook{}("BYTES.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(768,18,768,99)"), format{}("%clengthBytes%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(626,18,626,84)"), format{}("%clengthString%r %c(%r %1 %c)%r"), function{}()]
  symbol LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(SortValTypes{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("lengthValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,20,136,69)"), format{}("%clengthValTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol LbllittleEndianBytes{}() : SortEndianness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("littleEndianBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(750,25,750,64)"), format{}("%cLE%r"), injective{}()]
  symbol Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,35,1058,44)"), format{}("%cload16_s%r"), injective{}()]
  symbol Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1057,35,1057,44)"), format{}("%cload16_u%r"), injective{}()]
  symbol Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,48,1058,57)"), format{}("%cload32_s%r"), injective{}()]
  symbol Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1057,48,1057,57)"), format{}("%cload32_u%r"), injective{}()]
  symbol Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,23,1058,31)"), format{}("%cload8_s%r"), injective{}()]
  symbol Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1057,23,1057,31)"), format{}("%cload8_u%r"), injective{}()]
  symbol Lblload'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1056,23,1056,28)"), format{}("%cload%r"), injective{}()]
  symbol Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(SortIValType{}, SortInt{}, SortInt{}, SortSignedness{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1006,22,1006,62)"), format{}("%cload%r %c{%r %1 %2 %3 %4 %c}%r"), injective{}()]
  symbol Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(436,27,436,43)"), format{}("%clocal.get%r %1"), injective{}()]
  symbol Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(437,27,437,43)"), format{}("%clocal.set%r %1"), injective{}()]
  symbol Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(438,27,438,43)"), format{}("%clocal.tee%r %1"), injective{}()]
  symbol Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(SortValTypes{}) : SortLocalDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(622,27,622,53)"), format{}("%clocal%r %1"), injective{}()]
  symbol Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(SortIdentifier{}, SortAValType{}) : SortLocalDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(623,27,623,53)"), format{}("%clocal%r %1 %2"), injective{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(429,18,429,74)"), format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllogFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("logFloat"), hook{}("FLOAT.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(570,20,570,75)"), format{}("%clogFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortIdentifier{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,27,204,77)"), format{}("%cloop%r %1 %2 %3 %cend%r %4"), injective{}()]
  symbol Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(SortTypeDecls{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,22,401,50)"), format{}("%cloop%r %1 %2 %cend%r"), injective{}()]
  symbol Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,23,320,26)"), format{}("%clt%r"), injective{}()]
  symbol Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,41,286,46)"), format{}("%clt_s%r"), injective{}()]
  symbol Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,23,286,28)"), format{}("%clt_u%r"), injective{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,19,305,81)"), format{}("%cmakeList%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("fp.max"), klabel{}("maxFloat"), hook{}("FLOAT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(578,20,578,93)"), format{}("%cmaxFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("(ite (< #1 #2) #2 #1)"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(427,18,427,118)"), format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("maxValueFloat"), hook{}("FLOAT.maxValue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,20,581,105)"), format{}("%cmaxValueFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,23,225,27)"), format{}("%cmax%r"), injective{}()]
  symbol Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1117,27,1117,39)"), format{}("%cmemory.grow%r"), injective{}()]
  symbol Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1091,27,1091,39)"), format{}("%cmemory.size%r"), injective{}()]
  symbol Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,49,561,56)"), format{}("%cmemory%r"), injective{}()]
  hooked-symbol LblminFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("fp.min"), klabel{}("minFloat"), hook{}("FLOAT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,20,579,93)"), format{}("%cminFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smt-hook{}("(ite (< #1 #2) #1 #2)"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(426,18,426,118)"), format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("minValueFloat"), hook{}("FLOAT.minValue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(582,20,582,105)"), format{}("%cminValueFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,23,224,27)"), format{}("%cmin%r"), injective{}()]
  symbol Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,39,121,43)"), format{}("%cmul%r"), injective{}()]
  symbol Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,30,276,33)"), format{}("%cne%r"), injective{}()]
  symbol Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,76,86,84)"), format{}("%cnearest%r"), injective{}()]
  symbol Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,30,86,34)"), format{}("%cneg%r"), injective{}()]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(661,21,661,67)"), format{}("%cnewUUID%r"), function{}()]
  symbol LblnoCurFrameCell{}() : SortCurFrameCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CurFrameCell"), format{}("%cnoCurFrameCell%r"), injective{}()]
  symbol LblnoCurModIdxCell{}() : SortCurModIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CurModIdxCell"), format{}("%cnoCurModIdxCell%r"), injective{}()]
  symbol LblnoDeterministicMemoryGrowthCell{}() : SortDeterministicMemoryGrowthCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("DeterministicMemoryGrowthCell"), format{}("%cnoDeterministicMemoryGrowthCell%r"), injective{}()]
  symbol LblnoExportsCell{}() : SortExportsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ExportsCell"), format{}("%cnoExportsCell%r"), injective{}()]
  symbol LblnoFAddrCell{}() : SortFAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FAddrCell"), format{}("%cnoFAddrCell%r"), injective{}()]
  symbol LblnoFCodeCell{}() : SortFCodeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FCodeCell"), format{}("%cnoFCodeCell%r"), injective{}()]
  symbol LblnoFLocalCell{}() : SortFLocalCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FLocalCell"), format{}("%cnoFLocalCell%r"), injective{}()]
  symbol LblnoFModInstCell{}() : SortFModInstCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FModInstCell"), format{}("%cnoFModInstCell%r"), injective{}()]
  symbol LblnoFTypeCell{}() : SortFTypeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FTypeCell"), format{}("%cnoFTypeCell%r"), injective{}()]
  symbol LblnoFuncAddrsCell{}() : SortFuncAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncAddrsCell"), format{}("%cnoFuncAddrsCell%r"), injective{}()]
  symbol LblnoFuncIdsCell{}() : SortFuncIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncIdsCell"), format{}("%cnoFuncIdsCell%r"), injective{}()]
  symbol LblnoFuncsCell{}() : SortFuncsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncsCell"), format{}("%cnoFuncsCell%r"), injective{}()]
  symbol LblnoGAddrCell{}() : SortGAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GAddrCell"), format{}("%cnoGAddrCell%r"), injective{}()]
  symbol LblnoGMutCell{}() : SortGMutCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GMutCell"), format{}("%cnoGMutCell%r"), injective{}()]
  symbol LblnoGValueCell{}() : SortGValueCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GValueCell"), format{}("%cnoGValueCell%r"), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GeneratedCounterCell"), format{}("%cnoGeneratedCounterCell%r"), injective{}()]
  symbol LblnoGlobIdsCell{}() : SortGlobIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GlobIdsCell"), format{}("%cnoGlobIdsCell%r"), injective{}()]
  symbol LblnoGlobalAddrsCell{}() : SortGlobalAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GlobalAddrsCell"), format{}("%cnoGlobalAddrsCell%r"), injective{}()]
  symbol LblnoGlobalsCell{}() : SortGlobalsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GlobalsCell"), format{}("%cnoGlobalsCell%r"), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("KCell"), format{}("%cnoKCell%r"), injective{}()]
  symbol LblnoLabelDepthCell{}() : SortLabelDepthCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("LabelDepthCell"), format{}("%cnoLabelDepthCell%r"), injective{}()]
  symbol LblnoLabelIdsCell{}() : SortLabelIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("LabelIdsCell"), format{}("%cnoLabelIdsCell%r"), injective{}()]
  symbol LblnoLocalsCell{}() : SortLocalsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("LocalsCell"), format{}("%cnoLocalsCell%r"), injective{}()]
  symbol LblnoMAddrCell{}() : SortMAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MAddrCell"), format{}("%cnoMAddrCell%r"), injective{}()]
  symbol LblnoMainStoreCell{}() : SortMainStoreCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MainStoreCell"), format{}("%cnoMainStoreCell%r"), injective{}()]
  symbol LblnoMdataCell{}() : SortMdataCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MdataCell"), format{}("%cnoMdataCell%r"), injective{}()]
  symbol LblnoMemAddrsCell{}() : SortMemAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MemAddrsCell"), format{}("%cnoMemAddrsCell%r"), injective{}()]
  symbol LblnoMemIdsCell{}() : SortMemIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MemIdsCell"), format{}("%cnoMemIdsCell%r"), injective{}()]
  symbol LblnoMemsCell{}() : SortMemsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MemsCell"), format{}("%cnoMemsCell%r"), injective{}()]
  symbol LblnoMmaxCell{}() : SortMmaxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MmaxCell"), format{}("%cnoMmaxCell%r"), injective{}()]
  symbol LblnoModIdxCell{}() : SortModIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModIdxCell"), format{}("%cnoModIdxCell%r"), injective{}()]
  symbol LblnoModuleIdsCell{}() : SortModuleIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleIdsCell"), format{}("%cnoModuleIdsCell%r"), injective{}()]
  symbol LblnoModuleInstancesCell{}() : SortModuleInstancesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleInstancesCell"), format{}("%cnoModuleInstancesCell%r"), injective{}()]
  symbol LblnoModuleRegistryCell{}() : SortModuleRegistryCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleRegistryCell"), format{}("%cnoModuleRegistryCell%r"), injective{}()]
  symbol LblnoMsizeCell{}() : SortMsizeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MsizeCell"), format{}("%cnoMsizeCell%r"), injective{}()]
  symbol LblnoNextFreshIdCell{}() : SortNextFreshIdCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextFreshIdCell"), format{}("%cnoNextFreshIdCell%r"), injective{}()]
  symbol LblnoNextFuncAddrCell{}() : SortNextFuncAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextFuncAddrCell"), format{}("%cnoNextFuncAddrCell%r"), injective{}()]
  symbol LblnoNextFuncIdxCell{}() : SortNextFuncIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextFuncIdxCell"), format{}("%cnoNextFuncIdxCell%r"), injective{}()]
  symbol LblnoNextGlobAddrCell{}() : SortNextGlobAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextGlobAddrCell"), format{}("%cnoNextGlobAddrCell%r"), injective{}()]
  symbol LblnoNextGlobIdxCell{}() : SortNextGlobIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextGlobIdxCell"), format{}("%cnoNextGlobIdxCell%r"), injective{}()]
  symbol LblnoNextMemAddrCell{}() : SortNextMemAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextMemAddrCell"), format{}("%cnoNextMemAddrCell%r"), injective{}()]
  symbol LblnoNextModuleIdxCell{}() : SortNextModuleIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextModuleIdxCell"), format{}("%cnoNextModuleIdxCell%r"), injective{}()]
  symbol LblnoNextTabAddrCell{}() : SortNextTabAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextTabAddrCell"), format{}("%cnoNextTabAddrCell%r"), injective{}()]
  symbol LblnoNextTypeIdxCell{}() : SortNextTypeIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextTypeIdxCell"), format{}("%cnoNextTypeIdxCell%r"), injective{}()]
  symbol LblnoTAddrCell{}() : SortTAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TAddrCell"), format{}("%cnoTAddrCell%r"), injective{}()]
  symbol LblnoTabAddrsCell{}() : SortTabAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TabAddrsCell"), format{}("%cnoTabAddrsCell%r"), injective{}()]
  symbol LblnoTabIdsCell{}() : SortTabIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TabIdsCell"), format{}("%cnoTabIdsCell%r"), injective{}()]
  symbol LblnoTabsCell{}() : SortTabsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TabsCell"), format{}("%cnoTabsCell%r"), injective{}()]
  symbol LblnoTdataCell{}() : SortTdataCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TdataCell"), format{}("%cnoTdataCell%r"), injective{}()]
  symbol LblnoTmaxCell{}() : SortTmaxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TmaxCell"), format{}("%cnoTmaxCell%r"), injective{}()]
  symbol LblnoTsizeCell{}() : SortTsizeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TsizeCell"), format{}("%cnoTsizeCell%r"), injective{}()]
  symbol LblnoTypeIdsCell{}() : SortTypeIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TypeIdsCell"), format{}("%cnoTypeIdsCell%r"), injective{}()]
  symbol LblnoTypesCell{}() : SortTypesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TypesCell"), format{}("%cnoTypesCell%r"), injective{}()]
  symbol LblnoValstackCell{}() : SortValstackCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ValstackCell"), format{}("%cnoValstackCell%r"), injective{}()]
  symbol LblnoWasmCell{}() : SortWasmCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("WasmCell"), format{}("%cnoWasmCell%r"), injective{}()]
  symbol Lblnop'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,27,316,31)"), format{}("%cnop%r"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("not"), boolOperation{}(), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,19,340,176)"), format{}("%cnotBool%r %1"), function{}()]
  symbol Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(SortWasmInt{}) : SortOffsetArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,26,1077,42)"), format{}("%coffset=%r %1"), injective{}()]
  symbol Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,31,170,34)"), format{}("%cor%r"), injective{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,18,628,69)"), format{}("%cordChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblpadLeftBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("padLeftBytes"), hook{}("BYTES.padLeft"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(765,20,765,95)"), format{}("%cpadLeftBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("padRightBytes"), hook{}("BYTES.padRight"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(764,20,764,97)"), format{}("%cpadRightBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblparam'Unds'WASM'Unds'TypeKeyWord{}() : SortTypeKeyWord{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,28,547,34)"), format{}("%cparam%r"), injective{}()]
  symbol Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(SortIdentifier{}, SortAValType{}) : SortTypeDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,26,552,52)"), format{}("%cparam%r %1 %2"), injective{}()]
  symbol Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,38,37,45)"), format{}("%cpopcnt%r"), injective{}()]
  hooked-symbol LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("precisionFloat"), hook{}("FLOAT.precision"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(545,18,545,84)"), format{}("%cprecisionFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'AValType{}(SortK{}) : SortAValType{} [function{}(), projection{}(), format{}("%cproject:AValType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'AlignArg{}(SortK{}) : SortAlignArg{} [function{}(), projection{}(), format{}("%cproject:AlignArg%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Alloc{}(SortK{}) : SortAlloc{} [function{}(), projection{}(), format{}("%cproject:Alloc%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'AllocatedKind{}(SortK{}) : SortAllocatedKind{} [function{}(), projection{}(), format{}("%cproject:AllocatedKind%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'BlockInstr{}(SortK{}) : SortBlockInstr{} [function{}(), projection{}(), format{}("%cproject:BlockInstr%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [function{}(), projection{}(), format{}("%cproject:Bool%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ByteMap{}(SortK{}) : SortByteMap{} [function{}(), projection{}(), format{}("%cproject:ByteMap%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Bytes{}(SortK{}) : SortBytes{} [function{}(), projection{}(), format{}("%cproject:Bytes%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Cell{}(SortK{}) : SortCell{} [function{}(), projection{}(), format{}("%cproject:Cell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Context{}(SortK{}) : SortContext{} [function{}(), projection{}(), format{}("%cproject:Context%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'CurFrameCell{}(SortK{}) : SortCurFrameCell{} [function{}(), projection{}(), format{}("%cproject:CurFrameCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'CurFrameCellFragment{}(SortK{}) : SortCurFrameCellFragment{} [function{}(), projection{}(), format{}("%cproject:CurFrameCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'CurFrameCellOpt{}(SortK{}) : SortCurFrameCellOpt{} [function{}(), projection{}(), format{}("%cproject:CurFrameCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'CurModIdxCell{}(SortK{}) : SortCurModIdxCell{} [function{}(), projection{}(), format{}("%cproject:CurModIdxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'CurModIdxCellOpt{}(SortK{}) : SortCurModIdxCellOpt{} [function{}(), projection{}(), format{}("%cproject:CurModIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'CvtOp{}(SortK{}) : SortCvtOp{} [function{}(), projection{}(), format{}("%cproject:CvtOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Cvtf32Op{}(SortK{}) : SortCvtf32Op{} [function{}(), projection{}(), format{}("%cproject:Cvtf32Op%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Cvtf64Op{}(SortK{}) : SortCvtf64Op{} [function{}(), projection{}(), format{}("%cproject:Cvtf64Op%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Cvti32Op{}(SortK{}) : SortCvti32Op{} [function{}(), projection{}(), format{}("%cproject:Cvti32Op%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Cvti64Op{}(SortK{}) : SortCvti64Op{} [function{}(), projection{}(), format{}("%cproject:Cvti64Op%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'DataDefn{}(SortK{}) : SortDataDefn{} [function{}(), projection{}(), format{}("%cproject:DataDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'DataString{}(SortK{}) : SortDataString{} [function{}(), projection{}(), format{}("%cproject:DataString%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Defn{}(SortK{}) : SortDefn{} [function{}(), projection{}(), format{}("%cproject:Defn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Defns{}(SortK{}) : SortDefns{} [function{}(), projection{}(), format{}("%cproject:Defns%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'DeterministicMemoryGrowthCell{}(SortK{}) : SortDeterministicMemoryGrowthCell{} [function{}(), projection{}(), format{}("%cproject:DeterministicMemoryGrowthCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'DeterministicMemoryGrowthCellOpt{}(SortK{}) : SortDeterministicMemoryGrowthCellOpt{} [function{}(), projection{}(), format{}("%cproject:DeterministicMemoryGrowthCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ElemDefn{}(SortK{}) : SortElemDefn{} [function{}(), projection{}(), format{}("%cproject:ElemDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ElemSegment{}(SortK{}) : SortElemSegment{} [function{}(), projection{}(), format{}("%cproject:ElemSegment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'EmptyStmt{}(SortK{}) : SortEmptyStmt{} [function{}(), projection{}(), format{}("%cproject:EmptyStmt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'EmptyStmts{}(SortK{}) : SortEmptyStmts{} [function{}(), projection{}(), format{}("%cproject:EmptyStmts%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Endianness{}(SortK{}) : SortEndianness{} [function{}(), projection{}(), format{}("%cproject:Endianness%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ExportDefn{}(SortK{}) : SortExportDefn{} [function{}(), projection{}(), format{}("%cproject:ExportDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ExportsCell{}(SortK{}) : SortExportsCell{} [function{}(), projection{}(), format{}("%cproject:ExportsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ExportsCellOpt{}(SortK{}) : SortExportsCellOpt{} [function{}(), projection{}(), format{}("%cproject:ExportsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Externval{}(SortK{}) : SortExternval{} [function{}(), projection{}(), format{}("%cproject:Externval%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FAddrCell{}(SortK{}) : SortFAddrCell{} [function{}(), projection{}(), format{}("%cproject:FAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FAddrCellOpt{}(SortK{}) : SortFAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:FAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FBinOp{}(SortK{}) : SortFBinOp{} [function{}(), projection{}(), format{}("%cproject:FBinOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FCodeCell{}(SortK{}) : SortFCodeCell{} [function{}(), projection{}(), format{}("%cproject:FCodeCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FCodeCellOpt{}(SortK{}) : SortFCodeCellOpt{} [function{}(), projection{}(), format{}("%cproject:FCodeCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FLocalCell{}(SortK{}) : SortFLocalCell{} [function{}(), projection{}(), format{}("%cproject:FLocalCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FLocalCellOpt{}(SortK{}) : SortFLocalCellOpt{} [function{}(), projection{}(), format{}("%cproject:FLocalCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FModInstCell{}(SortK{}) : SortFModInstCell{} [function{}(), projection{}(), format{}("%cproject:FModInstCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FModInstCellOpt{}(SortK{}) : SortFModInstCellOpt{} [function{}(), projection{}(), format{}("%cproject:FModInstCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FRelOp{}(SortK{}) : SortFRelOp{} [function{}(), projection{}(), format{}("%cproject:FRelOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FTypeCell{}(SortK{}) : SortFTypeCell{} [function{}(), projection{}(), format{}("%cproject:FTypeCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FTypeCellOpt{}(SortK{}) : SortFTypeCellOpt{} [function{}(), projection{}(), format{}("%cproject:FTypeCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FUnOp{}(SortK{}) : SortFUnOp{} [function{}(), projection{}(), format{}("%cproject:FUnOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FVal{}(SortK{}) : SortFVal{} [function{}(), projection{}(), format{}("%cproject:FVal%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FValType{}(SortK{}) : SortFValType{} [function{}(), projection{}(), format{}("%cproject:FValType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [function{}(), projection{}(), format{}("%cproject:Float%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FoldedInstr{}(SortK{}) : SortFoldedInstr{} [function{}(), projection{}(), format{}("%cproject:FoldedInstr%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Frame{}(SortK{}) : SortFrame{} [function{}(), projection{}(), format{}("%cproject:Frame%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncAddrsCell{}(SortK{}) : SortFuncAddrsCell{} [function{}(), projection{}(), format{}("%cproject:FuncAddrsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncAddrsCellOpt{}(SortK{}) : SortFuncAddrsCellOpt{} [function{}(), projection{}(), format{}("%cproject:FuncAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncDefCell{}(SortK{}) : SortFuncDefCell{} [function{}(), projection{}(), format{}("%cproject:FuncDefCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncDefCellFragment{}(SortK{}) : SortFuncDefCellFragment{} [function{}(), projection{}(), format{}("%cproject:FuncDefCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncDefCellMap{}(SortK{}) : SortFuncDefCellMap{} [function{}(), projection{}(), format{}("%cproject:FuncDefCellMap%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncDefn{}(SortK{}) : SortFuncDefn{} [function{}(), projection{}(), format{}("%cproject:FuncDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncIdsCell{}(SortK{}) : SortFuncIdsCell{} [function{}(), projection{}(), format{}("%cproject:FuncIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncIdsCellOpt{}(SortK{}) : SortFuncIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:FuncIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncSpec{}(SortK{}) : SortFuncSpec{} [function{}(), projection{}(), format{}("%cproject:FuncSpec%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncType{}(SortK{}) : SortFuncType{} [function{}(), projection{}(), format{}("%cproject:FuncType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncsCell{}(SortK{}) : SortFuncsCell{} [function{}(), projection{}(), format{}("%cproject:FuncsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncsCellFragment{}(SortK{}) : SortFuncsCellFragment{} [function{}(), projection{}(), format{}("%cproject:FuncsCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'FuncsCellOpt{}(SortK{}) : SortFuncsCellOpt{} [function{}(), projection{}(), format{}("%cproject:FuncsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GAddrCell{}(SortK{}) : SortGAddrCell{} [function{}(), projection{}(), format{}("%cproject:GAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GAddrCellOpt{}(SortK{}) : SortGAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:GAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GMutCell{}(SortK{}) : SortGMutCell{} [function{}(), projection{}(), format{}("%cproject:GMutCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GMutCellOpt{}(SortK{}) : SortGMutCellOpt{} [function{}(), projection{}(), format{}("%cproject:GMutCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GValueCell{}(SortK{}) : SortGValueCell{} [function{}(), projection{}(), format{}("%cproject:GValueCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GValueCellOpt{}(SortK{}) : SortGValueCellOpt{} [function{}(), projection{}(), format{}("%cproject:GValueCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [function{}(), projection{}(), format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [function{}(), projection{}(), format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [function{}(), projection{}(), format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [function{}(), projection{}(), format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobIdsCell{}(SortK{}) : SortGlobIdsCell{} [function{}(), projection{}(), format{}("%cproject:GlobIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobIdsCellOpt{}(SortK{}) : SortGlobIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:GlobIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalAddrsCell{}(SortK{}) : SortGlobalAddrsCell{} [function{}(), projection{}(), format{}("%cproject:GlobalAddrsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalAddrsCellOpt{}(SortK{}) : SortGlobalAddrsCellOpt{} [function{}(), projection{}(), format{}("%cproject:GlobalAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalDefn{}(SortK{}) : SortGlobalDefn{} [function{}(), projection{}(), format{}("%cproject:GlobalDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalInstCell{}(SortK{}) : SortGlobalInstCell{} [function{}(), projection{}(), format{}("%cproject:GlobalInstCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalInstCellFragment{}(SortK{}) : SortGlobalInstCellFragment{} [function{}(), projection{}(), format{}("%cproject:GlobalInstCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalInstCellMap{}(SortK{}) : SortGlobalInstCellMap{} [function{}(), projection{}(), format{}("%cproject:GlobalInstCellMap%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalSpec{}(SortK{}) : SortGlobalSpec{} [function{}(), projection{}(), format{}("%cproject:GlobalSpec%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalType{}(SortK{}) : SortGlobalType{} [function{}(), projection{}(), format{}("%cproject:GlobalType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalsCell{}(SortK{}) : SortGlobalsCell{} [function{}(), projection{}(), format{}("%cproject:GlobalsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalsCellFragment{}(SortK{}) : SortGlobalsCellFragment{} [function{}(), projection{}(), format{}("%cproject:GlobalsCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'GlobalsCellOpt{}(SortK{}) : SortGlobalsCellOpt{} [function{}(), projection{}(), format{}("%cproject:GlobalsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'IBinOp{}(SortK{}) : SortIBinOp{} [function{}(), projection{}(), format{}("%cproject:IBinOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'IRelOp{}(SortK{}) : SortIRelOp{} [function{}(), projection{}(), format{}("%cproject:IRelOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'IUnOp{}(SortK{}) : SortIUnOp{} [function{}(), projection{}(), format{}("%cproject:IUnOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'IVal{}(SortK{}) : SortIVal{} [function{}(), projection{}(), format{}("%cproject:IVal%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'IValType{}(SortK{}) : SortIValType{} [function{}(), projection{}(), format{}("%cproject:IValType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Identifier{}(SortK{}) : SortIdentifier{} [function{}(), projection{}(), format{}("%cproject:Identifier%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'IdentifierToken{}(SortK{}) : SortIdentifierToken{} [function{}(), projection{}(), format{}("%cproject:IdentifierToken%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ImportDefn{}(SortK{}) : SortImportDefn{} [function{}(), projection{}(), format{}("%cproject:ImportDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ImportDesc{}(SortK{}) : SortImportDesc{} [function{}(), projection{}(), format{}("%cproject:ImportDesc%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Index{}(SortK{}) : SortIndex{} [function{}(), projection{}(), format{}("%cproject:Index%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'InlineExport{}(SortK{}) : SortInlineExport{} [function{}(), projection{}(), format{}("%cproject:InlineExport%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'InlineImport{}(SortK{}) : SortInlineImport{} [function{}(), projection{}(), format{}("%cproject:InlineImport%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Instr{}(SortK{}) : SortInstr{} [function{}(), projection{}(), format{}("%cproject:Instr%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Instrs{}(SortK{}) : SortInstrs{} [function{}(), projection{}(), format{}("%cproject:Instrs%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [function{}(), projection{}(), format{}("%cproject:Int%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [function{}(), projection{}(), format{}("%cproject:K%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [function{}(), projection{}(), format{}("%cproject:KCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [function{}(), projection{}(), format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [function{}(), projection{}(), format{}("%cproject:KItem%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Label{}(SortK{}) : SortLabel{} [function{}(), projection{}(), format{}("%cproject:Label%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LabelDepthCell{}(SortK{}) : SortLabelDepthCell{} [function{}(), projection{}(), format{}("%cproject:LabelDepthCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LabelDepthCellOpt{}(SortK{}) : SortLabelDepthCellOpt{} [function{}(), projection{}(), format{}("%cproject:LabelDepthCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LabelIdsCell{}(SortK{}) : SortLabelIdsCell{} [function{}(), projection{}(), format{}("%cproject:LabelIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LabelIdsCellOpt{}(SortK{}) : SortLabelIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:LabelIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Limits{}(SortK{}) : SortLimits{} [function{}(), projection{}(), format{}("%cproject:Limits%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [function{}(), projection{}(), format{}("%cproject:List%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LoadOp{}(SortK{}) : SortLoadOp{} [function{}(), projection{}(), format{}("%cproject:LoadOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LoadOpM{}(SortK{}) : SortLoadOpM{} [function{}(), projection{}(), format{}("%cproject:LoadOpM%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LocalDecl{}(SortK{}) : SortLocalDecl{} [function{}(), projection{}(), format{}("%cproject:LocalDecl%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LocalDecls{}(SortK{}) : SortLocalDecls{} [function{}(), projection{}(), format{}("%cproject:LocalDecls%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LocalsCell{}(SortK{}) : SortLocalsCell{} [function{}(), projection{}(), format{}("%cproject:LocalsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'LocalsCellOpt{}(SortK{}) : SortLocalsCellOpt{} [function{}(), projection{}(), format{}("%cproject:LocalsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MAddrCell{}(SortK{}) : SortMAddrCell{} [function{}(), projection{}(), format{}("%cproject:MAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MAddrCellOpt{}(SortK{}) : SortMAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:MAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MInt{}(SortK{}) : SortMInt{} [function{}(), projection{}(), format{}("%cproject:MInt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MainStoreCell{}(SortK{}) : SortMainStoreCell{} [function{}(), projection{}(), format{}("%cproject:MainStoreCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MainStoreCellFragment{}(SortK{}) : SortMainStoreCellFragment{} [function{}(), projection{}(), format{}("%cproject:MainStoreCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MainStoreCellOpt{}(SortK{}) : SortMainStoreCellOpt{} [function{}(), projection{}(), format{}("%cproject:MainStoreCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [function{}(), projection{}(), format{}("%cproject:Map%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MdataCell{}(SortK{}) : SortMdataCell{} [function{}(), projection{}(), format{}("%cproject:MdataCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MdataCellOpt{}(SortK{}) : SortMdataCellOpt{} [function{}(), projection{}(), format{}("%cproject:MdataCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemAddrsCell{}(SortK{}) : SortMemAddrsCell{} [function{}(), projection{}(), format{}("%cproject:MemAddrsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemAddrsCellOpt{}(SortK{}) : SortMemAddrsCellOpt{} [function{}(), projection{}(), format{}("%cproject:MemAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemArg{}(SortK{}) : SortMemArg{} [function{}(), projection{}(), format{}("%cproject:MemArg%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemIdsCell{}(SortK{}) : SortMemIdsCell{} [function{}(), projection{}(), format{}("%cproject:MemIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemIdsCellOpt{}(SortK{}) : SortMemIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:MemIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemInstCell{}(SortK{}) : SortMemInstCell{} [function{}(), projection{}(), format{}("%cproject:MemInstCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemInstCellFragment{}(SortK{}) : SortMemInstCellFragment{} [function{}(), projection{}(), format{}("%cproject:MemInstCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemInstCellMap{}(SortK{}) : SortMemInstCellMap{} [function{}(), projection{}(), format{}("%cproject:MemInstCellMap%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemType{}(SortK{}) : SortMemType{} [function{}(), projection{}(), format{}("%cproject:MemType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemoryDefn{}(SortK{}) : SortMemoryDefn{} [function{}(), projection{}(), format{}("%cproject:MemoryDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemorySpec{}(SortK{}) : SortMemorySpec{} [function{}(), projection{}(), format{}("%cproject:MemorySpec%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemsCell{}(SortK{}) : SortMemsCell{} [function{}(), projection{}(), format{}("%cproject:MemsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemsCellFragment{}(SortK{}) : SortMemsCellFragment{} [function{}(), projection{}(), format{}("%cproject:MemsCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MemsCellOpt{}(SortK{}) : SortMemsCellOpt{} [function{}(), projection{}(), format{}("%cproject:MemsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MmaxCell{}(SortK{}) : SortMmaxCell{} [function{}(), projection{}(), format{}("%cproject:MmaxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MmaxCellOpt{}(SortK{}) : SortMmaxCellOpt{} [function{}(), projection{}(), format{}("%cproject:MmaxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModIdxCell{}(SortK{}) : SortModIdxCell{} [function{}(), projection{}(), format{}("%cproject:ModIdxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModIdxCellOpt{}(SortK{}) : SortModIdxCellOpt{} [function{}(), projection{}(), format{}("%cproject:ModIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleDecl{}(SortK{}) : SortModuleDecl{} [function{}(), projection{}(), format{}("%cproject:ModuleDecl%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleIdsCell{}(SortK{}) : SortModuleIdsCell{} [function{}(), projection{}(), format{}("%cproject:ModuleIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleIdsCellOpt{}(SortK{}) : SortModuleIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:ModuleIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleInstCell{}(SortK{}) : SortModuleInstCell{} [function{}(), projection{}(), format{}("%cproject:ModuleInstCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleInstCellFragment{}(SortK{}) : SortModuleInstCellFragment{} [function{}(), projection{}(), format{}("%cproject:ModuleInstCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleInstCellMap{}(SortK{}) : SortModuleInstCellMap{} [function{}(), projection{}(), format{}("%cproject:ModuleInstCellMap%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleInstancesCell{}(SortK{}) : SortModuleInstancesCell{} [function{}(), projection{}(), format{}("%cproject:ModuleInstancesCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleInstancesCellFragment{}(SortK{}) : SortModuleInstancesCellFragment{} [function{}(), projection{}(), format{}("%cproject:ModuleInstancesCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleInstancesCellOpt{}(SortK{}) : SortModuleInstancesCellOpt{} [function{}(), projection{}(), format{}("%cproject:ModuleInstancesCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleRegistryCell{}(SortK{}) : SortModuleRegistryCell{} [function{}(), projection{}(), format{}("%cproject:ModuleRegistryCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ModuleRegistryCellOpt{}(SortK{}) : SortModuleRegistryCellOpt{} [function{}(), projection{}(), format{}("%cproject:ModuleRegistryCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MsizeCell{}(SortK{}) : SortMsizeCell{} [function{}(), projection{}(), format{}("%cproject:MsizeCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'MsizeCellOpt{}(SortK{}) : SortMsizeCellOpt{} [function{}(), projection{}(), format{}("%cproject:MsizeCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Mut{}(SortK{}) : SortMut{} [function{}(), projection{}(), format{}("%cproject:Mut%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NValType{}(SortK{}) : SortNValType{} [function{}(), projection{}(), format{}("%cproject:NValType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextFreshIdCell{}(SortK{}) : SortNextFreshIdCell{} [function{}(), projection{}(), format{}("%cproject:NextFreshIdCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextFreshIdCellOpt{}(SortK{}) : SortNextFreshIdCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextFreshIdCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextFuncAddrCell{}(SortK{}) : SortNextFuncAddrCell{} [function{}(), projection{}(), format{}("%cproject:NextFuncAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextFuncAddrCellOpt{}(SortK{}) : SortNextFuncAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextFuncAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextFuncIdxCell{}(SortK{}) : SortNextFuncIdxCell{} [function{}(), projection{}(), format{}("%cproject:NextFuncIdxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextFuncIdxCellOpt{}(SortK{}) : SortNextFuncIdxCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextFuncIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextGlobAddrCell{}(SortK{}) : SortNextGlobAddrCell{} [function{}(), projection{}(), format{}("%cproject:NextGlobAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextGlobAddrCellOpt{}(SortK{}) : SortNextGlobAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextGlobAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextGlobIdxCell{}(SortK{}) : SortNextGlobIdxCell{} [function{}(), projection{}(), format{}("%cproject:NextGlobIdxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextGlobIdxCellOpt{}(SortK{}) : SortNextGlobIdxCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextGlobIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextMemAddrCell{}(SortK{}) : SortNextMemAddrCell{} [function{}(), projection{}(), format{}("%cproject:NextMemAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextMemAddrCellOpt{}(SortK{}) : SortNextMemAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextMemAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextModuleIdxCell{}(SortK{}) : SortNextModuleIdxCell{} [function{}(), projection{}(), format{}("%cproject:NextModuleIdxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextModuleIdxCellOpt{}(SortK{}) : SortNextModuleIdxCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextModuleIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextTabAddrCell{}(SortK{}) : SortNextTabAddrCell{} [function{}(), projection{}(), format{}("%cproject:NextTabAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextTabAddrCellOpt{}(SortK{}) : SortNextTabAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextTabAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextTypeIdxCell{}(SortK{}) : SortNextTypeIdxCell{} [function{}(), projection{}(), format{}("%cproject:NextTypeIdxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'NextTypeIdxCellOpt{}(SortK{}) : SortNextTypeIdxCellOpt{} [function{}(), projection{}(), format{}("%cproject:NextTypeIdxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Number{}(SortK{}) : SortNumber{} [function{}(), projection{}(), format{}("%cproject:Number%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Offset{}(SortK{}) : SortOffset{} [function{}(), projection{}(), format{}("%cproject:Offset%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'OffsetArg{}(SortK{}) : SortOffsetArg{} [function{}(), projection{}(), format{}("%cproject:OffsetArg%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'OptionalId{}(SortK{}) : SortOptionalId{} [function{}(), projection{}(), format{}("%cproject:OptionalId%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'OptionalInt{}(SortK{}) : SortOptionalInt{} [function{}(), projection{}(), format{}("%cproject:OptionalInt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'PlainInstr{}(SortK{}) : SortPlainInstr{} [function{}(), projection{}(), format{}("%cproject:PlainInstr%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [function{}(), projection{}(), format{}("%cproject:Set%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Signedness{}(SortK{}) : SortSignedness{} [function{}(), projection{}(), format{}("%cproject:Signedness%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'StartDefn{}(SortK{}) : SortStartDefn{} [function{}(), projection{}(), format{}("%cproject:StartDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [function{}(), projection{}(), format{}("%cproject:Stmt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Stmts{}(SortK{}) : SortStmts{} [function{}(), projection{}(), format{}("%cproject:Stmts%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'StoreOp{}(SortK{}) : SortStoreOp{} [function{}(), projection{}(), format{}("%cproject:StoreOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'StoreOpM{}(SortK{}) : SortStoreOpM{} [function{}(), projection{}(), format{}("%cproject:StoreOpM%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [function{}(), projection{}(), format{}("%cproject:String%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TAddrCell{}(SortK{}) : SortTAddrCell{} [function{}(), projection{}(), format{}("%cproject:TAddrCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TAddrCellOpt{}(SortK{}) : SortTAddrCellOpt{} [function{}(), projection{}(), format{}("%cproject:TAddrCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabAddrsCell{}(SortK{}) : SortTabAddrsCell{} [function{}(), projection{}(), format{}("%cproject:TabAddrsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabAddrsCellOpt{}(SortK{}) : SortTabAddrsCellOpt{} [function{}(), projection{}(), format{}("%cproject:TabAddrsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabIdsCell{}(SortK{}) : SortTabIdsCell{} [function{}(), projection{}(), format{}("%cproject:TabIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabIdsCellOpt{}(SortK{}) : SortTabIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:TabIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabInstCell{}(SortK{}) : SortTabInstCell{} [function{}(), projection{}(), format{}("%cproject:TabInstCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabInstCellFragment{}(SortK{}) : SortTabInstCellFragment{} [function{}(), projection{}(), format{}("%cproject:TabInstCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabInstCellMap{}(SortK{}) : SortTabInstCellMap{} [function{}(), projection{}(), format{}("%cproject:TabInstCellMap%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TableDefn{}(SortK{}) : SortTableDefn{} [function{}(), projection{}(), format{}("%cproject:TableDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TableElemType{}(SortK{}) : SortTableElemType{} [function{}(), projection{}(), format{}("%cproject:TableElemType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TableSpec{}(SortK{}) : SortTableSpec{} [function{}(), projection{}(), format{}("%cproject:TableSpec%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TableType{}(SortK{}) : SortTableType{} [function{}(), projection{}(), format{}("%cproject:TableType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabsCell{}(SortK{}) : SortTabsCell{} [function{}(), projection{}(), format{}("%cproject:TabsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabsCellFragment{}(SortK{}) : SortTabsCellFragment{} [function{}(), projection{}(), format{}("%cproject:TabsCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TabsCellOpt{}(SortK{}) : SortTabsCellOpt{} [function{}(), projection{}(), format{}("%cproject:TabsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TdataCell{}(SortK{}) : SortTdataCell{} [function{}(), projection{}(), format{}("%cproject:TdataCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TdataCellOpt{}(SortK{}) : SortTdataCellOpt{} [function{}(), projection{}(), format{}("%cproject:TdataCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TestOp{}(SortK{}) : SortTestOp{} [function{}(), projection{}(), format{}("%cproject:TestOp%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TextFormatGlobalType{}(SortK{}) : SortTextFormatGlobalType{} [function{}(), projection{}(), format{}("%cproject:TextFormatGlobalType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TmaxCell{}(SortK{}) : SortTmaxCell{} [function{}(), projection{}(), format{}("%cproject:TmaxCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TmaxCellOpt{}(SortK{}) : SortTmaxCellOpt{} [function{}(), projection{}(), format{}("%cproject:TmaxCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TsizeCell{}(SortK{}) : SortTsizeCell{} [function{}(), projection{}(), format{}("%cproject:TsizeCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TsizeCellOpt{}(SortK{}) : SortTsizeCellOpt{} [function{}(), projection{}(), format{}("%cproject:TsizeCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [function{}(), projection{}(), format{}("%cproject:Type%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeDecl{}(SortK{}) : SortTypeDecl{} [function{}(), projection{}(), format{}("%cproject:TypeDecl%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeDecls{}(SortK{}) : SortTypeDecls{} [function{}(), projection{}(), format{}("%cproject:TypeDecls%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeDefn{}(SortK{}) : SortTypeDefn{} [function{}(), projection{}(), format{}("%cproject:TypeDefn%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeIdsCell{}(SortK{}) : SortTypeIdsCell{} [function{}(), projection{}(), format{}("%cproject:TypeIdsCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeIdsCellOpt{}(SortK{}) : SortTypeIdsCellOpt{} [function{}(), projection{}(), format{}("%cproject:TypeIdsCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeKeyWord{}(SortK{}) : SortTypeKeyWord{} [function{}(), projection{}(), format{}("%cproject:TypeKeyWord%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypeUse{}(SortK{}) : SortTypeUse{} [function{}(), projection{}(), format{}("%cproject:TypeUse%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypesCell{}(SortK{}) : SortTypesCell{} [function{}(), projection{}(), format{}("%cproject:TypesCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'TypesCellOpt{}(SortK{}) : SortTypesCellOpt{} [function{}(), projection{}(), format{}("%cproject:TypesCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [function{}(), projection{}(), format{}("%cproject:Val%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ValStack{}(SortK{}) : SortValStack{} [function{}(), projection{}(), format{}("%cproject:ValStack%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ValType{}(SortK{}) : SortValType{} [function{}(), projection{}(), format{}("%cproject:ValType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ValTypes{}(SortK{}) : SortValTypes{} [function{}(), projection{}(), format{}("%cproject:ValTypes%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ValstackCell{}(SortK{}) : SortValstackCell{} [function{}(), projection{}(), format{}("%cproject:ValstackCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ValstackCellOpt{}(SortK{}) : SortValstackCellOpt{} [function{}(), projection{}(), format{}("%cproject:ValstackCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'VecType{}(SortK{}) : SortVecType{} [function{}(), projection{}(), format{}("%cproject:VecType%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmCell{}(SortK{}) : SortWasmCell{} [function{}(), projection{}(), format{}("%cproject:WasmCell%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmCellFragment{}(SortK{}) : SortWasmCellFragment{} [function{}(), projection{}(), format{}("%cproject:WasmCellFragment%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmCellOpt{}(SortK{}) : SortWasmCellOpt{} [function{}(), projection{}(), format{}("%cproject:WasmCellOpt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmInt{}(SortK{}) : SortWasmInt{} [function{}(), projection{}(), format{}("%cproject:WasmInt%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmIntToken{}(SortK{}) : SortWasmIntToken{} [function{}(), projection{}(), format{}("%cproject:WasmIntToken%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmString{}(SortK{}) : SortWasmString{} [function{}(), projection{}(), format{}("%cproject:WasmString%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'WasmStringToken{}(SortK{}) : SortWasmStringToken{} [function{}(), projection{}(), format{}("%cproject:WasmStringToken%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'ctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Coln'localIds{}(SortContext{}) : SortMap{} [function{}(), format{}("%clocalIds%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'exports{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%cexports%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'funcsGlobals{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%cfuncsGlobals%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'id{}(SortModuleDecl{}) : SortOptionalId{} [function{}(), format{}("%cid%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'importDefns{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%cimportDefns%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'inits{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%cinits%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'memsTables{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%cmemsTables%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'start{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%cstart%r %c(%r %1 %c)%r")]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'types{}(SortModuleDecl{}) : SortDefns{} [function{}(), format{}("%ctypes%r %c(%r %1 %c)%r")]
  symbol Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,25,385,37)"), format{}("%cpromote_f32%r"), injective{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,18,526,56)"), format{}("%crandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,33,142,39)"), format{}("%crem_s%r"), injective{}()]
  symbol Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,33,134,39)"), format{}("%crem_u%r"), injective{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,18,140,91)"), format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.replace"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(646,21,646,145)"), format{}("%creplace%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(645,21,645,153)"), format{}("%creplaceAll%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceAtBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(SortBytes{}, SortInt{}, SortBytes{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("replaceAtBytes"), hook{}("BYTES.replaceAt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(763,20,763,104)"), format{}("%creplaceAtBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(647,21,647,155)"), format{}("%creplaceFirst%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblresult'Unds'WASM'Unds'TypeKeyWord{}() : SortTypeKeyWord{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,38,547,45)"), format{}("%cresult%r"), injective{}()]
  symbol Lblreturn'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(753,27,753,34)"), format{}("%creturn%r"), injective{}()]
  hooked-symbol LblreverseBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes{}(SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("reverseBytes"), hook{}("BYTES.reverse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(766,20,766,82)"), format{}("%creverseBytes%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,18,634,116)"), format{}("%crfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,18,632,111)"), format{}("%crfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrootFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int{}(SortFloat{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("rootFloat"), hook{}("FLOAT.root"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(564,20,564,76)"), format{}("%crootFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,23,199,28)"), format{}("%crotl%r"), injective{}()]
  symbol Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,32,199,37)"), format{}("%crotr%r"), injective{}()]
  hooked-symbol LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(SortFloat{}, SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("roundFloat"), hook{}("FLOAT.round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,20,566,102)"), format{}("%croundFloat%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblselect'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,27,301,34)"), format{}("%cselect%r"), injective{}()]
  symbol Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,23,185,27)"), format{}("%cshl%r"), injective{}()]
  symbol Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,41,185,47)"), format{}("%cshr_s%r"), injective{}()]
  symbol Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,31,185,37)"), format{}("%cshr_u%r"), injective{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,18,432,112)"), format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("signFloat"), hook{}("FLOAT.sign"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(549,19,549,80)"), format{}("%csignFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsignedBytes{}() : SortSignedness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("signedBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(752,25,752,62)"), format{}("%cSigned%r"), injective{}()]
  hooked-symbol LblsignificandFloat'LParUndsRParUnds'FLOAT'Unds'MInt'Unds'Float{}(SortFloat{}) : SortMInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("significandFloat"), hook{}("FLOAT.significand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,552,77)"), format{}("%csignificandFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("sinFloat"), hook{}("FLOAT.sin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(571,20,571,87)"), format{}("%csinFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), smtlib{}("smt_seq_len"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,18,318,121)"), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,18,152,103)"), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,80)"), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(SortDefns{}, SortOptionalId{}) : SortModuleDecl{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("sortModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1455,28,1455,71)"), format{}("%csortModule%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(SortOptionalId{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("sortedModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1452,27,1452,175)"), format{}("%csortedModule%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c,%r %6 %c,%r %7 %c,%r %8 %c)%r"), injective{}()]
  symbol LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("sqrtFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(580,20,580,58)"), format{}("%csqrtFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,38,86,43)"), format{}("%csqrt%r"), injective{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(527,16,527,56)"), format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblstore16'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,45,992,53)"), format{}("%cstore16%r"), injective{}()]
  symbol Lblstore32'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,57,992,65)"), format{}("%cstore32%r"), injective{}()]
  symbol Lblstore8'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,34,992,41)"), format{}("%cstore8%r"), injective{}()]
  symbol Lblstore'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,24,992,30)"), format{}("%cstore%r"), injective{}()]
  symbol Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(SortInt{}, SortInt{}, SortNumber{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(949,22,949,51)"), format{}("%cstore%r %c{%r %1 %2 %3 %c}%r"), injective{}()]
  symbol Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,31,121,35)"), format{}("%csub%r"), injective{}()]
  hooked-symbol LblsubstrBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("substrBytes"), hook{}("BYTES.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(762,20,762,100)"), format{}("%csubstrBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(630,21,630,121)"), format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,39,561,45)"), format{}("%ctable%r"), injective{}()]
  hooked-symbol LbltanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("tanFloat"), hook{}("FLOAT.tan"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(573,20,573,75)"), format{}("%ctanFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(SortStmts{}) : SortStmts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("text2abstract"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,22,109,52)"), format{}("%ctext2abstract%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbltrap'Unds'WASM'Unds'Instr{}() : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,22,173,27)"), format{}("%ctrap%r"), injective{}()]
  symbol LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), klabel{}("truncFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,22,67,52)"), format{}("%ctruncFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,66,86,72)"), format{}("%ctrunc%r"), injective{}()]
  symbol Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,25,397,37)"), format{}("%ctrunc_f32_s%r"), injective{}()]
  symbol Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,41,397,53)"), format{}("%ctrunc_f32_u%r"), injective{}()]
  symbol Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,25,409,37)"), format{}("%ctrunc_f64_s%r"), injective{}()]
  symbol Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,41,409,53)"), format{}("%ctrunc_f64_u%r"), injective{}()]
  symbol Lblundefined'Unds'WASM-DATA'Unds'Val{}() : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,20,263,30)"), format{}("%cundefined%r"), injective{}()]
  symbol Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("unescape"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,23,387,62)"), format{}("%cunescape%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(SortString{}, SortInt{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("unescapeAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,23,388,83)"), format{}("%cunescape%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(SortFuncType{}) : SortFuncType{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("unnameFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,25,145,74)"), format{}("%cunnameFuncType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("unnameValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,25,153,74)"), format{}("%cunnameValTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblunreachable'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,27,324,39)"), format{}("%cunreachable%r"), injective{}()]
  symbol LblunsignedBytes{}() : SortSignedness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("unsignedBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(753,25,753,66)"), format{}("%cUnsigned%r"), injective{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(307,19,307,96)"), format{}("%cupdateList%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,18,137,91)"), format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,19,149,76)"), format{}("%cvalues%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblvar'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,39,225,43)"), format{}("%cvar%r"), injective{}()]
  symbol Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,25,353,34)"), format{}("%cwrap_i64%r"), injective{}()]
  symbol Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,38,170,42)"), format{}("%cxor%r"), injective{}()]
  symbol Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(SortIdentifier{}, SortAValType{}) : SortNValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,25,119,51)"), format{}("%c{%r %1 %2 %c}%r"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("notInt"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,18,400,172)"), format{}("%c~Int%r %1"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortInt{}, SortNumber{}} (From:SortInt{}))) [subsort{SortInt{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValType{}, \equals{SortValType{}, R} (Val:SortValType{}, inj{SortAValType{}, SortValType{}} (From:SortAValType{}))) [subsort{SortAValType{}, SortValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCellMap{}, SortKItem{}} (From:SortModuleInstCellMap{}))) [subsort{SortModuleInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTsizeCellOpt{}, SortKItem{}} (From:SortTsizeCellOpt{}))) [subsort{SortTsizeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCell{}, SortKItem{}} (From:SortCell{}))) [subsort{SortCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCellFragment{}, SortKItem{}} (From:SortFuncDefCellFragment{}))) [subsort{SortFuncDefCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmString{}, \equals{SortWasmString{}, R} (Val:SortWasmString{}, inj{SortWasmStringToken{}, SortWasmString{}} (From:SortWasmStringToken{}))) [subsort{SortWasmStringToken{}, SortWasmString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncsCell{}, SortCell{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMmaxCellOpt{}, SortKItem{}} (From:SortMmaxCellOpt{}))) [subsort{SortMmaxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLabelIdsCell{}, SortCell{}} (From:SortLabelIdsCell{}))) [subsort{SortLabelIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGAddrCell{}, SortCell{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalId{}, \equals{SortOptionalId{}, R} (Val:SortOptionalId{}, inj{SortIdentifier{}, SortOptionalId{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortOptionalId{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDataString{}, SortKItem{}} (From:SortDataString{}))) [subsort{SortDataString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortStartDefn{}, SortDefn{}} (From:SortStartDefn{}))) [subsort{SortStartDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelDepthCellOpt{}, SortKItem{}} (From:SortLabelDepthCellOpt{}))) [subsort{SortLabelDepthCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIBinOp{}, SortKItem{}} (From:SortIBinOp{}))) [subsort{SortIBinOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLoadOpM{}, \equals{SortLoadOpM{}, R} (Val:SortLoadOpM{}, inj{SortLoadOp{}, SortLoadOpM{}} (From:SortLoadOp{}))) [subsort{SortLoadOp{}, SortLoadOpM{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTmaxCellOpt{}, \equals{SortTmaxCellOpt{}, R} (Val:SortTmaxCellOpt{}, inj{SortTmaxCell{}, SortTmaxCellOpt{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortTmaxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, inj{SortInstrs{}, SortStmts{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortStmts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtf32Op{}, SortKItem{}} (From:SortCvtf32Op{}))) [subsort{SortCvtf32Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabsCell{}, SortCell{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, inj{SortExportDefn{}, SortAlloc{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortAlloc{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGAddrCellOpt{}, SortKItem{}} (From:SortGAddrCellOpt{}))) [subsort{SortGAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMsizeCellOpt{}, SortKItem{}} (From:SortMsizeCellOpt{}))) [subsort{SortMsizeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIValType{}, SortKItem{}} (From:SortIValType{}))) [subsort{SortIValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTdataCell{}, SortKItem{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFCodeCellOpt{}, \equals{SortFCodeCellOpt{}, R} (Val:SortFCodeCellOpt{}, inj{SortFCodeCell{}, SortFCodeCellOpt{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortFCodeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIndex{}, \equals{SortIndex{}, R} (Val:SortIndex{}, inj{SortWasmInt{}, SortIndex{}} (From:SortWasmInt{}))) [subsort{SortWasmInt{}, SortIndex{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValType{}, SortKItem{}} (From:SortValType{}))) [subsort{SortValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortCell{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMsizeCellOpt{}, \equals{SortMsizeCellOpt{}, R} (Val:SortMsizeCellOpt{}, inj{SortMsizeCell{}, SortMsizeCellOpt{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortMsizeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurFrameCellOpt{}, \equals{SortCurFrameCellOpt{}, R} (Val:SortCurFrameCellOpt{}, inj{SortCurFrameCell{}, SortCurFrameCellOpt{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortCurFrameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMmaxCell{}, SortCell{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}} (From:SortDeterministicMemoryGrowthCellOpt{}))) [subsort{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCellMap{}, SortKItem{}} (From:SortFuncDefCellMap{}))) [subsort{SortFuncDefCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFLocalCell{}, SortCell{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemsCellOpt{}, \equals{SortMemsCellOpt{}, R} (Val:SortMemsCellOpt{}, inj{SortMemsCell{}, SortMemsCellOpt{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortMemsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMsizeCell{}, SortCell{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBytes{}, SortKItem{}} (From:SortBytes{}))) [subsort{SortBytes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMmaxCell{}, SortKItem{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFBinOp{}, SortKItem{}} (From:SortFBinOp{}))) [subsort{SortFBinOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAValType{}, \equals{SortAValType{}, R} (Val:SortAValType{}, inj{SortFValType{}, SortAValType{}} (From:SortFValType{}))) [subsort{SortFValType{}, SortAValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOffset{}, \equals{SortOffset{}, R} (Val:SortOffset{}, inj{SortInstrs{}, SortOffset{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortOffset{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefn{}, SortKItem{}} (From:SortDefn{}))) [subsort{SortDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTypeIdsCell{}, SortCell{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, inj{SortIdentifierToken{}, SortIdentifier{}} (From:SortIdentifierToken{}))) [subsort{SortIdentifierToken{}, SortIdentifier{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCellOpt{}, SortKItem{}} (From:SortGlobalsCellOpt{}))) [subsort{SortGlobalsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCellFragment{}, SortKItem{}} (From:SortTabInstCellFragment{}))) [subsort{SortTabInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCellFragment{}, SortKItem{}} (From:SortWasmCellFragment{}))) [subsort{SortWasmCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortFuncType{}, SortType{}} (From:SortFuncType{}))) [subsort{SortFuncType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIndex{}, \equals{SortIndex{}, R} (Val:SortIndex{}, inj{SortIdentifier{}, SortIndex{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortIndex{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFLocalCellOpt{}, SortKItem{}} (From:SortFLocalCellOpt{}))) [subsort{SortFLocalCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstr{}, SortKItem{}} (From:SortInstr{}))) [subsort{SortInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobalInstCell{}, SortCell{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStartDefn{}, SortKItem{}} (From:SortStartDefn{}))) [subsort{SortStartDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAllocatedKind{}, SortKItem{}} (From:SortAllocatedKind{}))) [subsort{SortAllocatedKind{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortValType{}, SortType{}} (From:SortValType{}))) [subsort{SortValType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmIntToken{}, SortKItem{}} (From:SortWasmIntToken{}))) [subsort{SortWasmIntToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTabAddrCell{}, SortKItem{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleRegistryCell{}, SortKItem{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextModuleIdxCell{}, SortCell{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFuncIdxCellOpt{}, \equals{SortNextFuncIdxCellOpt{}, R} (Val:SortNextFuncIdxCellOpt{}, inj{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleRegistryCellOpt{}, \equals{SortModuleRegistryCellOpt{}, R} (Val:SortModuleRegistryCellOpt{}, inj{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurModIdxCellOpt{}, SortKItem{}} (From:SortCurModIdxCellOpt{}))) [subsort{SortCurModIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLoadOp{}, SortKItem{}} (From:SortLoadOp{}))) [subsort{SortLoadOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextMemAddrCell{}, SortCell{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncAddrsCell{}, SortKItem{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMAddrCellOpt{}, SortKItem{}} (From:SortMAddrCellOpt{}))) [subsort{SortMAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCellFragment{}, SortKItem{}} (From:SortModuleInstCellFragment{}))) [subsort{SortModuleInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, inj{SortAlignArg{}, SortMemArg{}} (From:SortAlignArg{}))) [subsort{SortAlignArg{}, SortMemArg{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTAddrCellOpt{}, \equals{SortTAddrCellOpt{}, R} (Val:SortTAddrCellOpt{}, inj{SortTAddrCell{}, SortTAddrCellOpt{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortTAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOffset{}, SortKItem{}} (From:SortOffset{}))) [subsort{SortOffset{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalInstCellMap{}, \equals{SortGlobalInstCellMap{}, R} (Val:SortGlobalInstCellMap{}, inj{SortGlobalInstCell{}, SortGlobalInstCellMap{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortGlobalInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCellMap{}, SortKItem{}} (From:SortMemInstCellMap{}))) [subsort{SortMemInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGAddrCell{}, SortKItem{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmts{}, SortKItem{}} (From:SortStmts{}))) [subsort{SortStmts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncAddrCellOpt{}, SortKItem{}} (From:SortNextFuncAddrCellOpt{}))) [subsort{SortNextFuncAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCellOpt{}, SortKItem{}} (From:SortCurFrameCellOpt{}))) [subsort{SortCurFrameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmInt{}, \equals{SortWasmInt{}, R} (Val:SortWasmInt{}, inj{SortInt{}, SortWasmInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortWasmInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTypesCell{}, SortCell{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDefn{}, SortKItem{}} (From:SortTypeDefn{}))) [subsort{SortTypeDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextMemAddrCellOpt{}, SortKItem{}} (From:SortNextMemAddrCellOpt{}))) [subsort{SortNextMemAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValstackCellOpt{}, SortKItem{}} (From:SortValstackCellOpt{}))) [subsort{SortValstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobAddrCellOpt{}, SortKItem{}} (From:SortNextGlobAddrCellOpt{}))) [subsort{SortNextGlobAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalType{}, SortKItem{}} (From:SortGlobalType{}))) [subsort{SortGlobalType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortGlobalDefn{}, SortDefn{}} (From:SortGlobalDefn{}))) [subsort{SortGlobalDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGMutCell{}, SortKItem{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFModInstCell{}, SortCell{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncSpec{}, SortKItem{}} (From:SortFuncSpec{}))) [subsort{SortFuncSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefn{}, SortKItem{}} (From:SortFuncDefn{}))) [subsort{SortFuncDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleRegistryCellOpt{}, SortKItem{}} (From:SortModuleRegistryCellOpt{}))) [subsort{SortModuleRegistryCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalInt{}, \equals{SortOptionalInt{}, R} (Val:SortOptionalInt{}, inj{SortInt{}, SortOptionalInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortOptionalInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvtf32Op{}, SortCvtOp{}} (From:SortCvtf32Op{}))) [subsort{SortCvtf32Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCellOpt{}, SortKItem{}} (From:SortModuleInstancesCellOpt{}))) [subsort{SortModuleInstancesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMdataCellOpt{}, \equals{SortMdataCellOpt{}, R} (Val:SortMdataCellOpt{}, inj{SortMdataCell{}, SortMdataCellOpt{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortMdataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCell{}, SortKItem{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTmaxCellOpt{}, SortKItem{}} (From:SortTmaxCellOpt{}))) [subsort{SortTmaxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModIdxCell{}, SortKItem{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextGlobAddrCellOpt{}, \equals{SortNextGlobAddrCellOpt{}, R} (Val:SortNextGlobAddrCellOpt{}, inj{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCellOpt{}, SortKItem{}} (From:SortMemsCellOpt{}))) [subsort{SortMemsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTextFormatGlobalType{}, SortKItem{}} (From:SortTextFormatGlobalType{}))) [subsort{SortTextFormatGlobalType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalDecl{}, SortKItem{}} (From:SortLocalDecl{}))) [subsort{SortLocalDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTAddrCell{}, SortCell{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleInstancesCell{}, SortCell{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabIdsCellOpt{}, \equals{SortTabIdsCellOpt{}, R} (Val:SortTabIdsCellOpt{}, inj{SortTabIdsCell{}, SortTabIdsCellOpt{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortTabIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, inj{SortImportDefn{}, SortAlloc{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortAlloc{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMAddrCell{}, SortKItem{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTAddrCellOpt{}, SortKItem{}} (From:SortTAddrCellOpt{}))) [subsort{SortTAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortEmptyStmt{}, SortDefn{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCellOpt{}, SortKItem{}} (From:SortWasmCellOpt{}))) [subsort{SortWasmCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleInstancesCellOpt{}, \equals{SortModuleInstancesCellOpt{}, R} (Val:SortModuleInstancesCellOpt{}, inj{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemorySpec{}, SortKItem{}} (From:SortMemorySpec{}))) [subsort{SortMemorySpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTypeIdxCellOpt{}, SortKItem{}} (From:SortNextTypeIdxCellOpt{}))) [subsort{SortNextTypeIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIVal{}, SortKItem{}} (From:SortIVal{}))) [subsort{SortIVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabIdsCellOpt{}, SortKItem{}} (From:SortTabIdsCellOpt{}))) [subsort{SortTabIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNumber{}, SortKItem{}} (From:SortNumber{}))) [subsort{SortNumber{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, inj{SortTypeDecls{}, SortTypeUse{}} (From:SortTypeDecls{}))) [subsort{SortTypeDecls{}, SortTypeUse{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEmptyStmt{}, SortKItem{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmStringToken{}, SortKItem{}} (From:SortWasmStringToken{}))) [subsort{SortWasmStringToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExportsCellOpt{}, \equals{SortExportsCellOpt{}, R} (Val:SortExportsCellOpt{}, inj{SortExportsCell{}, SortExportsCellOpt{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortExportsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElemDefn{}, SortKItem{}} (From:SortElemDefn{}))) [subsort{SortElemDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortContext{}, SortKItem{}} (From:SortContext{}))) [subsort{SortContext{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFModInstCellOpt{}, \equals{SortFModInstCellOpt{}, R} (Val:SortFModInstCellOpt{}, inj{SortFModInstCell{}, SortFModInstCellOpt{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortFModInstCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncDefCell{}, SortCell{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemsCell{}, SortCell{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGAddrCellOpt{}, \equals{SortGAddrCellOpt{}, R} (Val:SortGAddrCellOpt{}, inj{SortGAddrCell{}, SortGAddrCellOpt{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortGAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleInstCellMap{}, \equals{SortModuleInstCellMap{}, R} (Val:SortModuleInstCellMap{}, inj{SortModuleInstCell{}, SortModuleInstCellMap{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortModuleInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableElemType{}, SortKItem{}} (From:SortTableElemType{}))) [subsort{SortTableElemType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvtf64Op{}, SortCvtOp{}} (From:SortCvtf64Op{}))) [subsort{SortCvtf64Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportDefn{}, SortKItem{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFValType{}, SortKItem{}} (From:SortFValType{}))) [subsort{SortFValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFModInstCellOpt{}, SortKItem{}} (From:SortFModInstCellOpt{}))) [subsort{SortFModInstCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalInt{}, SortKItem{}} (From:SortOptionalInt{}))) [subsort{SortOptionalInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreOpM{}, SortKItem{}} (From:SortStoreOpM{}))) [subsort{SortStoreOpM{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextTabAddrCellOpt{}, \equals{SortNextTabAddrCellOpt{}, R} (Val:SortNextTabAddrCellOpt{}, inj{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCell{}, SortKItem{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobIdxCell{}, SortKItem{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTmaxCell{}, SortKItem{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFTypeCellOpt{}, \equals{SortFTypeCellOpt{}, R} (Val:SortFTypeCellOpt{}, inj{SortFTypeCell{}, SortFTypeCellOpt{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortFTypeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCellOpt{}, SortKItem{}} (From:SortTabsCellOpt{}))) [subsort{SortTabsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSignedness{}, SortKItem{}} (From:SortSignedness{}))) [subsort{SortSignedness{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortDefn{}, SortStmt{}} (From:SortDefn{}))) [subsort{SortDefn{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvti32Op{}, SortKItem{}} (From:SortCvti32Op{}))) [subsort{SortCvti32Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdentifier{}, SortKItem{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEmptyStmts{}, SortKItem{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlockInstr{}, SortKItem{}} (From:SortBlockInstr{}))) [subsort{SortBlockInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFTypeCell{}, SortCell{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModIdxCell{}, SortCell{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdsCellOpt{}, SortKItem{}} (From:SortModuleIdsCellOpt{}))) [subsort{SortModuleIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncAddrCell{}, SortKItem{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabAddrsCell{}, SortCell{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCellFragment{}, SortKItem{}} (From:SortMemInstCellFragment{}))) [subsort{SortMemInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAValType{}, \equals{SortAValType{}, R} (Val:SortAValType{}, inj{SortIValType{}, SortAValType{}} (From:SortIValType{}))) [subsort{SortIValType{}, SortAValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabAddrsCellOpt{}, \equals{SortTabAddrsCellOpt{}, R} (Val:SortTabAddrsCellOpt{}, inj{SortTabAddrsCell{}, SortTabAddrsCellOpt{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortTabAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortFuncDefn{}, SortDefn{}} (From:SortFuncDefn{}))) [subsort{SortFuncDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVecType{}, SortKItem{}} (From:SortVecType{}))) [subsort{SortVecType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobIdsCell{}, SortKItem{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabIdsCell{}, SortCell{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortTypeDefn{}, SortDefn{}} (From:SortTypeDefn{}))) [subsort{SortTypeDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortElemDefn{}, SortDefn{}} (From:SortElemDefn{}))) [subsort{SortElemDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdsCell{}, SortKItem{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdsCell{}, SortKItem{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCellOpt{}, SortKItem{}} (From:SortMainStoreCellOpt{}))) [subsort{SortMainStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFreshIdCellOpt{}, \equals{SortNextFreshIdCellOpt{}, R} (Val:SortNextFreshIdCellOpt{}, inj{SortNextFreshIdCell{}, SortNextFreshIdCellOpt{}} (From:SortNextFreshIdCell{}))) [subsort{SortNextFreshIdCell{}, SortNextFreshIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAValType{}, SortKItem{}} (From:SortAValType{}))) [subsort{SortAValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortFloat{}, SortNumber{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextFuncIdxCell{}, SortCell{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdentifierToken{}, SortKItem{}} (From:SortIdentifierToken{}))) [subsort{SortIdentifierToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIRelOp{}, SortKItem{}} (From:SortIRelOp{}))) [subsort{SortIRelOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleInstCell{}, SortCell{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCellMap{}, SortKItem{}} (From:SortGlobalInstCellMap{}))) [subsort{SortGlobalInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalId{}, SortKItem{}} (From:SortOptionalId{}))) [subsort{SortOptionalId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, inj{SortTableType{}, SortTableSpec{}} (From:SortTableType{}))) [subsort{SortTableType{}, SortTableSpec{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCellFragment{}, SortKItem{}} (From:SortFuncsCellFragment{}))) [subsort{SortFuncsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobIdsCellOpt{}, \equals{SortGlobIdsCellOpt{}, R} (Val:SortGlobIdsCellOpt{}, inj{SortGlobIdsCell{}, SortGlobIdsCellOpt{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortGlobIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortBlockInstr{}, SortInstr{}} (From:SortBlockInstr{}))) [subsort{SortBlockInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemIdsCellOpt{}, \equals{SortMemIdsCellOpt{}, R} (Val:SortMemIdsCellOpt{}, inj{SortMemIdsCell{}, SortMemIdsCellOpt{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortMemIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGValueCell{}, SortCell{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemAddrsCellOpt{}, SortKItem{}} (From:SortMemAddrsCellOpt{}))) [subsort{SortMemAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncIdsCell{}, SortCell{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLoadOpM{}, SortKItem{}} (From:SortLoadOpM{}))) [subsort{SortLoadOpM{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPlainInstr{}, SortKItem{}} (From:SortPlainInstr{}))) [subsort{SortPlainInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncAddrsCellOpt{}, SortKItem{}} (From:SortFuncAddrsCellOpt{}))) [subsort{SortFuncAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIndex{}, SortKItem{}} (From:SortIndex{}))) [subsort{SortIndex{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMut{}, SortKItem{}} (From:SortMut{}))) [subsort{SortMut{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGValueCellOpt{}, \equals{SortGValueCellOpt{}, R} (Val:SortGValueCellOpt{}, inj{SortGValueCell{}, SortGValueCellOpt{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortGValueCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLocalsCell{}, SortCell{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtOp{}, SortKItem{}} (From:SortCvtOp{}))) [subsort{SortCvtOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncIdxCell{}, SortKItem{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurModIdxCell{}, SortKItem{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCellFragment{}, SortKItem{}} (From:SortGlobalInstCellFragment{}))) [subsort{SortGlobalInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortCurFrameCell{}, SortCell{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTdataCell{}, SortCell{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExternval{}, SortKItem{}} (From:SortExternval{}))) [subsort{SortExternval{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDecls{}, SortKItem{}} (From:SortTypeDecls{}))) [subsort{SortTypeDecls{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFUnOp{}, SortKItem{}} (From:SortFUnOp{}))) [subsort{SortFUnOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMsizeCell{}, SortKItem{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtf64Op{}, SortKItem{}} (From:SortCvtf64Op{}))) [subsort{SortCvtf64Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTdataCellOpt{}, SortKItem{}} (From:SortTdataCellOpt{}))) [subsort{SortTdataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, inj{SortMemType{}, SortMemorySpec{}} (From:SortMemType{}))) [subsort{SortMemType{}, SortMemorySpec{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFAddrCell{}, SortKItem{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAlignArg{}, SortKItem{}} (From:SortAlignArg{}))) [subsort{SortAlignArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortEmptyStmt{}, SortInstr{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFCodeCell{}, SortCell{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesCell{}, SortKItem{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemType{}, \equals{SortMemType{}, R} (Val:SortMemType{}, inj{SortLimits{}, SortMemType{}} (From:SortLimits{}))) [subsort{SortLimits{}, SortMemType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextMemAddrCellOpt{}, \equals{SortNextMemAddrCellOpt{}, R} (Val:SortNextMemAddrCellOpt{}, inj{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCellFragment{}, SortKItem{}} (From:SortModuleInstancesCellFragment{}))) [subsort{SortModuleInstancesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMdataCell{}, SortCell{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextFreshIdCell{}, SortCell{}} (From:SortNextFreshIdCell{}))) [subsort{SortNextFreshIdCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypesCellOpt{}, \equals{SortTypesCellOpt{}, R} (Val:SortTypesCellOpt{}, inj{SortTypesCell{}, SortTypesCellOpt{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortTypesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortFoldedInstr{}, SortInstr{}} (From:SortFoldedInstr{}))) [subsort{SortFoldedInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabIdsCell{}, SortKItem{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCell{}, SortKItem{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCellOpt{}, \equals{SortDeterministicMemoryGrowthCellOpt{}, R} (Val:SortDeterministicMemoryGrowthCellOpt{}, inj{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCellMap{}, SortKItem{}} (From:SortTabInstCellMap{}))) [subsort{SortTabInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFAddrCell{}, SortCell{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMdataCellOpt{}, SortKItem{}} (From:SortMdataCellOpt{}))) [subsort{SortMdataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDataDefn{}, SortKItem{}} (From:SortDataDefn{}))) [subsort{SortDataDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInlineExport{}, SortKItem{}} (From:SortInlineExport{}))) [subsort{SortInlineExport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalAddrsCell{}, SortKItem{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemIdsCell{}, SortCell{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDecl{}, SortKItem{}} (From:SortTypeDecl{}))) [subsort{SortTypeDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMainStoreCell{}, SortCell{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCellFragment{}, SortKItem{}} (From:SortTabsCellFragment{}))) [subsort{SortTabsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElemSegment{}, SortKItem{}} (From:SortElemSegment{}))) [subsort{SortElemSegment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFAddrCellOpt{}, \equals{SortFAddrCellOpt{}, R} (Val:SortFAddrCellOpt{}, inj{SortFAddrCell{}, SortFAddrCellOpt{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortFAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCellFragment{}, SortKItem{}} (From:SortMemsCellFragment{}))) [subsort{SortMemsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocalsCellOpt{}, \equals{SortLocalsCellOpt{}, R} (Val:SortLocalsCellOpt{}, inj{SortLocalsCell{}, SortLocalsCellOpt{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortLocalsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortDataDefn{}, SortDefn{}} (From:SortDataDefn{}))) [subsort{SortDataDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, inj{SortOffsetArg{}, SortMemArg{}} (From:SortOffsetArg{}))) [subsort{SortOffsetArg{}, SortMemArg{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLabelDepthCell{}, SortCell{}} (From:SortLabelDepthCell{}))) [subsort{SortLabelDepthCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMInt{}, SortKItem{}} (From:SortMInt{}))) [subsort{SortMInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortVecType{}, SortType{}} (From:SortVecType{}))) [subsort{SortVecType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLabelIdsCellOpt{}, \equals{SortLabelIdsCellOpt{}, R} (Val:SortLabelIdsCellOpt{}, inj{SortLabelIdsCell{}, SortLabelIdsCellOpt{}} (From:SortLabelIdsCell{}))) [subsort{SortLabelIdsCell{}, SortLabelIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextTypeIdxCellOpt{}, \equals{SortNextTypeIdxCellOpt{}, R} (Val:SortNextTypeIdxCellOpt{}, inj{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCell{}, SortKItem{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValstackCell{}, SortKItem{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTestOp{}, SortKItem{}} (From:SortTestOp{}))) [subsort{SortTestOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextTypeIdxCell{}, SortCell{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTsizeCell{}, SortKItem{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefns{}, SortKItem{}} (From:SortDefns{}))) [subsort{SortDefns{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabAddrsCell{}, SortKItem{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncType{}, SortKItem{}} (From:SortFuncType{}))) [subsort{SortFuncType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTAddrCell{}, SortKItem{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, inj{SortInt{}, SortLimits{}} (From:SortInt{}))) [subsort{SortInt{}, SortLimits{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelIdsCellOpt{}, SortKItem{}} (From:SortLabelIdsCellOpt{}))) [subsort{SortLabelIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemArg{}, SortKItem{}} (From:SortMemArg{}))) [subsort{SortMemArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFrame{}, SortKItem{}} (From:SortFrame{}))) [subsort{SortFrame{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFCodeCellOpt{}, SortKItem{}} (From:SortFCodeCellOpt{}))) [subsort{SortFCodeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncIdsCellOpt{}, \equals{SortFuncIdsCellOpt{}, R} (Val:SortFuncIdsCellOpt{}, inj{SortFuncIdsCell{}, SortFuncIdsCellOpt{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortFuncIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemoryDefn{}, SortKItem{}} (From:SortMemoryDefn{}))) [subsort{SortMemoryDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortModuleDecl{}, SortStmt{}} (From:SortModuleDecl{}))) [subsort{SortModuleDecl{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFCodeCell{}, SortKItem{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortValstackCell{}, SortCell{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobIdxCellOpt{}, SortKItem{}} (From:SortNextGlobIdxCellOpt{}))) [subsort{SortNextGlobIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreOpM{}, \equals{SortStoreOpM{}, R} (Val:SortStoreOpM{}, inj{SortStoreOp{}, SortStoreOpM{}} (From:SortStoreOp{}))) [subsort{SortStoreOp{}, SortStoreOpM{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFLocalCellOpt{}, \equals{SortFLocalCellOpt{}, R} (Val:SortFLocalCellOpt{}, inj{SortFLocalCell{}, SortFLocalCellOpt{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortFLocalCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeIdsCellOpt{}, \equals{SortTypeIdsCellOpt{}, R} (Val:SortTypeIdsCellOpt{}, inj{SortTypeIdsCell{}, SortTypeIdsCellOpt{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortTypeIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTypeIdxCell{}, SortKItem{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncAddrsCellOpt{}, \equals{SortFuncAddrsCellOpt{}, R} (Val:SortFuncAddrsCellOpt{}, inj{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortFVal{}, SortVal{}} (From:SortFVal{}))) [subsort{SortFVal{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCell{}, SortKItem{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleIdsCellOpt{}, \equals{SortModuleIdsCellOpt{}, R} (Val:SortModuleIdsCellOpt{}, inj{SortModuleIdsCell{}, SortModuleIdsCellOpt{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortModuleIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortImportDesc{}, SortKItem{}} (From:SortImportDesc{}))) [subsort{SortImportDesc{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFVal{}, SortKItem{}} (From:SortFVal{}))) [subsort{SortFVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLimits{}, SortKItem{}} (From:SortLimits{}))) [subsort{SortLimits{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortWasmCell{}, SortCell{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOffsetArg{}, SortKItem{}} (From:SortOffsetArg{}))) [subsort{SortOffsetArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalAddrsCellOpt{}, \equals{SortGlobalAddrsCellOpt{}, R} (Val:SortGlobalAddrsCellOpt{}, inj{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMdataCell{}, SortKItem{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobIdsCellOpt{}, SortKItem{}} (From:SortGlobIdsCellOpt{}))) [subsort{SortGlobIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortCurModIdxCell{}, SortCell{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextModuleIdxCell{}, SortKItem{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTsizeCellOpt{}, \equals{SortTsizeCellOpt{}, R} (Val:SortTsizeCellOpt{}, inj{SortTsizeCell{}, SortTsizeCellOpt{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortTsizeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemIdsCellOpt{}, SortKItem{}} (From:SortMemIdsCellOpt{}))) [subsort{SortMemIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortImportDefn{}, SortDefn{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeIdsCellOpt{}, SortKItem{}} (From:SortTypeIdsCellOpt{}))) [subsort{SortTypeIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemIdsCell{}, SortKItem{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCell{}, SortKItem{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeUse{}, SortKItem{}} (From:SortTypeUse{}))) [subsort{SortTypeUse{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValType{}, \equals{SortValType{}, R} (Val:SortValType{}, inj{SortNValType{}, SortValType{}} (From:SortNValType{}))) [subsort{SortNValType{}, SortValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, inj{SortDefns{}, SortStmts{}} (From:SortDefns{}))) [subsort{SortDefns{}, SortStmts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCell{}, SortKItem{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabAddrsCellOpt{}, SortKItem{}} (From:SortTabAddrsCellOpt{}))) [subsort{SortTabAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFLocalCell{}, SortKItem{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortMemoryDefn{}, SortDefn{}} (From:SortMemoryDefn{}))) [subsort{SortMemoryDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurModIdxCellOpt{}, \equals{SortCurModIdxCellOpt{}, R} (Val:SortCurModIdxCellOpt{}, inj{SortCurModIdxCell{}, SortCurModIdxCellOpt{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortCurModIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobalAddrsCell{}, SortCell{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCell{}, SortKItem{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemInstCell{}, SortCell{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleIdsCell{}, SortCell{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesCellOpt{}, SortKItem{}} (From:SortTypesCellOpt{}))) [subsort{SortTypesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeKeyWord{}, SortKItem{}} (From:SortTypeKeyWord{}))) [subsort{SortTypeKeyWord{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleRegistryCell{}, SortCell{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelIdsCell{}, SortKItem{}} (From:SortLabelIdsCell{}))) [subsort{SortLabelIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCellFragment{}, SortKItem{}} (From:SortGlobalsCellFragment{}))) [subsort{SortGlobalsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortImportDefn{}, SortKItem{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabInstCell{}, SortCell{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIUnOp{}, SortKItem{}} (From:SortIUnOp{}))) [subsort{SortIUnOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobalsCell{}, SortCell{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGValueCellOpt{}, SortKItem{}} (From:SortGValueCellOpt{}))) [subsort{SortGValueCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortExportsCell{}, SortCell{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValTypes{}, SortKItem{}} (From:SortValTypes{}))) [subsort{SortValTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCell{}, SortKItem{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTdataCellOpt{}, \equals{SortTdataCellOpt{}, R} (Val:SortTdataCellOpt{}, inj{SortTdataCell{}, SortTdataCellOpt{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortTdataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFreshIdCell{}, SortKItem{}} (From:SortNextFreshIdCell{}))) [subsort{SortNextFreshIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvti32Op{}, SortCvtOp{}} (From:SortCvti32Op{}))) [subsort{SortCvti32Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemInstCellMap{}, \equals{SortMemInstCellMap{}, R} (Val:SortMemInstCellMap{}, inj{SortMemInstCell{}, SortMemInstCellMap{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortMemInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableType{}, SortKItem{}} (From:SortTableType{}))) [subsort{SortTableType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGValueCell{}, SortKItem{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortInstr{}, SortStmt{}} (From:SortInstr{}))) [subsort{SortInstr{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, inj{SortEmptyStmts{}, SortDefns{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortDefns{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEndianness{}, SortKItem{}} (From:SortEndianness{}))) [subsort{SortEndianness{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCellFragment{}, SortKItem{}} (From:SortCurFrameCellFragment{}))) [subsort{SortCurFrameCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCell{}, SortKItem{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalSpec{}, SortKItem{}} (From:SortGlobalSpec{}))) [subsort{SortGlobalSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTsizeCell{}, SortCell{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFAddrCellOpt{}, SortKItem{}} (From:SortFAddrCellOpt{}))) [subsort{SortFAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncsCellOpt{}, \equals{SortFuncsCellOpt{}, R} (Val:SortFuncsCellOpt{}, inj{SortFuncsCell{}, SortFuncsCellOpt{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortFuncsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdsCellOpt{}, SortKItem{}} (From:SortFuncIdsCellOpt{}))) [subsort{SortFuncIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortTableDefn{}, SortDefn{}} (From:SortTableDefn{}))) [subsort{SortTableDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValstackCellOpt{}, \equals{SortValstackCellOpt{}, R} (Val:SortValstackCellOpt{}, inj{SortValstackCell{}, SortValstackCellOpt{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortValstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabsCellOpt{}, \equals{SortTabsCellOpt{}, R} (Val:SortTabsCellOpt{}, inj{SortTabsCell{}, SortTabsCellOpt{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortTabsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextGlobIdxCellOpt{}, \equals{SortNextGlobIdxCellOpt{}, R} (Val:SortNextGlobIdxCellOpt{}, inj{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTextFormatGlobalType{}, \equals{SortTextFormatGlobalType{}, R} (Val:SortTextFormatGlobalType{}, inj{SortAValType{}, SortTextFormatGlobalType{}} (From:SortAValType{}))) [subsort{SortAValType{}, SortTextFormatGlobalType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncDefCellMap{}, \equals{SortFuncDefCellMap{}, R} (Val:SortFuncDefCellMap{}, inj{SortFuncDefCell{}, SortFuncDefCellMap{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortFuncDefCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemType{}, SortKItem{}} (From:SortMemType{}))) [subsort{SortMemType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemAddrsCellOpt{}, \equals{SortMemAddrsCellOpt{}, R} (Val:SortMemAddrsCellOpt{}, inj{SortMemAddrsCell{}, SortMemAddrsCellOpt{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortMemAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortKCell{}, SortCell{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalDecls{}, SortKItem{}} (From:SortLocalDecls{}))) [subsort{SortLocalDecls{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalDefn{}, SortKItem{}} (From:SortGlobalDefn{}))) [subsort{SortGlobalDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMainStoreCellOpt{}, \equals{SortMainStoreCellOpt{}, R} (Val:SortMainStoreCellOpt{}, inj{SortMainStoreCell{}, SortMainStoreCellOpt{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortMainStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalAddrsCellOpt{}, SortKItem{}} (From:SortGlobalAddrsCellOpt{}))) [subsort{SortGlobalAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGMutCellOpt{}, \equals{SortGMutCellOpt{}, R} (Val:SortGMutCellOpt{}, inj{SortGMutCell{}, SortGMutCellOpt{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortGMutCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabel{}, SortKItem{}} (From:SortLabel{}))) [subsort{SortLabel{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelDepthCell{}, SortKItem{}} (From:SortLabelDepthCell{}))) [subsort{SortLabelDepthCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncAddrsCell{}, SortCell{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortPlainInstr{}, SortInstr{}} (From:SortPlainInstr{}))) [subsort{SortPlainInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableDefn{}, SortKItem{}} (From:SortTableDefn{}))) [subsort{SortTableDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFoldedInstr{}, SortKItem{}} (From:SortFoldedInstr{}))) [subsort{SortFoldedInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCell{}, SortKItem{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModIdxCellOpt{}, SortKItem{}} (From:SortModIdxCellOpt{}))) [subsort{SortModIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFRelOp{}, SortKItem{}} (From:SortFRelOp{}))) [subsort{SortFRelOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMmaxCellOpt{}, \equals{SortMmaxCellOpt{}, R} (Val:SortMmaxCellOpt{}, inj{SortMmaxCell{}, SortMmaxCellOpt{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortMmaxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextModuleIdxCellOpt{}, \equals{SortNextModuleIdxCellOpt{}, R} (Val:SortNextModuleIdxCellOpt{}, inj{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalsCell{}, SortKItem{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLabelDepthCellOpt{}, \equals{SortLabelDepthCellOpt{}, R} (Val:SortLabelDepthCellOpt{}, inj{SortLabelDepthCell{}, SortLabelDepthCellOpt{}} (From:SortLabelDepthCell{}))) [subsort{SortLabelDepthCell{}, SortLabelDepthCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstrs{}, SortKItem{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAlloc{}, SortKItem{}} (From:SortAlloc{}))) [subsort{SortAlloc{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmCellOpt{}, \equals{SortWasmCellOpt{}, R} (Val:SortWasmCellOpt{}, inj{SortWasmCell{}, SortWasmCellOpt{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortWasmCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvti64Op{}, SortKItem{}} (From:SortCvti64Op{}))) [subsort{SortCvti64Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextTabAddrCell{}, SortCell{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFTypeCellOpt{}, SortKItem{}} (From:SortFTypeCellOpt{}))) [subsort{SortFTypeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCellOpt{}, SortKItem{}} (From:SortFuncsCellOpt{}))) [subsort{SortFuncsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortIVal{}, SortVal{}} (From:SortIVal{}))) [subsort{SortIVal{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextMemAddrCell{}, SortKItem{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCellFragment{}, SortKItem{}} (From:SortMainStoreCellFragment{}))) [subsort{SortMainStoreCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobAddrCell{}, SortKItem{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemAddrsCell{}, SortKItem{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportsCell{}, SortKItem{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFTypeCell{}, SortKItem{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportsCellOpt{}, SortKItem{}} (From:SortExportsCellOpt{}))) [subsort{SortExportsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableSpec{}, SortKItem{}} (From:SortTableSpec{}))) [subsort{SortTableSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextGlobAddrCell{}, SortCell{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCell{}, SortKItem{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmInt{}, SortKItem{}} (From:SortWasmInt{}))) [subsort{SortWasmInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortExportDefn{}, SortDefn{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextGlobIdxCell{}, SortCell{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabInstCellMap{}, \equals{SortTabInstCellMap{}, R} (Val:SortTabInstCellMap{}, inj{SortTabInstCell{}, SortTabInstCellMap{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortTabInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, inj{SortEmptyStmts{}, SortInstrs{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortInstrs{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncIdxCellOpt{}, SortKItem{}} (From:SortNextFuncIdxCellOpt{}))) [subsort{SortNextFuncIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGMutCellOpt{}, SortKItem{}} (From:SortGMutCellOpt{}))) [subsort{SortGMutCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMAddrCell{}, SortCell{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMAddrCellOpt{}, \equals{SortMAddrCellOpt{}, R} (Val:SortMAddrCellOpt{}, inj{SortMAddrCell{}, SortMAddrCellOpt{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortMAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInlineImport{}, SortKItem{}} (From:SortInlineImport{}))) [subsort{SortInlineImport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModIdxCellOpt{}, \equals{SortModIdxCellOpt{}, R} (Val:SortModIdxCellOpt{}, inj{SortModIdxCell{}, SortModIdxCellOpt{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortModIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFuncAddrCellOpt{}, \equals{SortNextFuncAddrCellOpt{}, R} (Val:SortNextFuncAddrCellOpt{}, inj{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCell{}, SortKItem{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeIdsCell{}, SortKItem{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGMutCell{}, SortCell{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTabAddrCellOpt{}, SortKItem{}} (From:SortNextTabAddrCellOpt{}))) [subsort{SortNextTabAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalsCellOpt{}, \equals{SortGlobalsCellOpt{}, R} (Val:SortGlobalsCellOpt{}, inj{SortGlobalsCell{}, SortGlobalsCellOpt{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortGlobalsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNValType{}, SortKItem{}} (From:SortNValType{}))) [subsort{SortNValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFModInstCell{}, SortKItem{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTmaxCell{}, SortCell{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFreshIdCellOpt{}, SortKItem{}} (From:SortNextFreshIdCellOpt{}))) [subsort{SortNextFreshIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValStack{}, SortKItem{}} (From:SortValStack{}))) [subsort{SortValStack{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmString{}, SortKItem{}} (From:SortWasmString{}))) [subsort{SortWasmString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleDecl{}, SortKItem{}} (From:SortModuleDecl{}))) [subsort{SortModuleDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextFuncAddrCell{}, SortCell{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvti64Op{}, SortCvtOp{}} (From:SortCvti64Op{}))) [subsort{SortCvti64Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortByteMap{}, SortKItem{}} (From:SortByteMap{}))) [subsort{SortByteMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreOp{}, SortKItem{}} (From:SortStoreOp{}))) [subsort{SortStoreOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemAddrsCell{}, SortCell{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalsCellOpt{}, SortKItem{}} (From:SortLocalsCellOpt{}))) [subsort{SortLocalsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextModuleIdxCellOpt{}, SortKItem{}} (From:SortNextModuleIdxCellOpt{}))) [subsort{SortNextModuleIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobIdsCell{}, SortCell{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(K0:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(Y0:SortTypeUse{})), Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Y0:SortInt{}, Y1:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIVal{}, \equals{SortIVal{}, R} (Val:SortIVal{}, Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(K0:SortIVal{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdentifier{}} (\and{SortIdentifier{}} (Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{}), Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdentifier{}} (\and{SortIdentifier{}} (Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{}), Lbl'Stop'MemoryIdentifier'Unds'WASM-TEXT'Unds'Identifier{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdentifier{}} (\and{SortIdentifier{}} (Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{}), Lbl'Stop'TableIdentifier'Unds'WASM-TEXT'Unds'Identifier{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(K0:SortByteMap{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(K0:SortMemArg{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(K0:SortByteMap{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(K0:SortTypeUse{}, K1:SortLocalDecls{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(K0:SortInt{}, K1:SortTypeUse{}, K2:SortLocalDecls{}))) [functional{}()] // functional
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(K0:SortInt{}, K1:SortInt{}, K2:SortMap{}, K3:SortMap{}, K4:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(X0:SortInt{}, X1:SortInt{}, X2:SortMap{}, X3:SortMap{}, X4:SortElemSegment{}), Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortMap{}, Y3:SortMap{}, Y4:SortElemSegment{})), Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortMap{}} (X2:SortMap{}, Y2:SortMap{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortElemSegment{}} (X4:SortElemSegment{}, Y4:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Y0:SortInt{}, Y1:SortValStack{})), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValStack{}} (X1:SortValStack{}, Y1:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(K0:SortByteMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmStringToken{}(K0:SortWasmStringToken{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(K0:SortValStack{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortByteMap{}, \equals{SortByteMap{}, R} (Val:SortByteMap{}, Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(K0:SortByteMap{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortByteMap{}, \equals{SortByteMap{}, R} (Val:SortByteMap{}, Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(K0:SortByteMap{}, K1:SortInt{}, K2:SortInt{}, K3:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortWasmStringToken{}, \equals{SortWasmStringToken{}, R} (Val:SortWasmStringToken{}, Lbl'Hash'unparseWasmString'LParUndsRParUnds'WASM-DATA'Unds'WasmStringToken'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(K0:SortContext{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(K0:SortContext{}, K1:SortMap{}, K2:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(K0:SortPlainInstr{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Y0:SortPlainInstr{})), Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(\and{SortPlainInstr{}} (X0:SortPlainInstr{}, Y0:SortPlainInstr{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Y0:SortPlainInstr{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(K0:SortPlainInstr{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Y0:SortPlainInstr{}, Y1:SortInstrs{})), Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(\and{SortPlainInstr{}} (X0:SortPlainInstr{}, Y0:SortPlainInstr{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{})), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(K0:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(Y0:SortDataString{})), Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(\and{SortDataString{}} (X0:SortDataString{}, Y0:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Y0:SortInlineExport{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(K0:SortOffset{}, K1:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(Y0:SortOffset{}, Y1:SortDataString{})), Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortDataString{}} (X1:SortDataString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortDataString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(Y0:SortIndex{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(K0:SortIndex{}, K1:SortOffset{}, K2:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortDataString{})), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortOffset{}} (X1:SortOffset{}, Y1:SortOffset{}), \and{SortDataString{}} (X2:SortDataString{}, Y2:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(Y0:SortIndex{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(K0:SortOffset{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Y0:SortOffset{}, Y1:SortElemSegment{})), Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortOffset{}, K2:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortElemSegment{})), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortOffset{}} (X1:SortOffset{}, Y1:SortOffset{}), \and{SortElemSegment{}} (X2:SortElemSegment{}, Y2:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExportDefn{}, \equals{SortExportDefn{}, R} (Val:SortExportDefn{}, Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(K0:SortWasmString{}, K1:SortExternval{}))) [functional{}()] // functional
  axiom{}\implies{SortExportDefn{}} (\and{SortExportDefn{}} (Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}), Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Y0:SortWasmString{}, Y1:SortExternval{})), Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortExternval{}} (X1:SortExternval{}, Y1:SortExternval{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInlineExport{}, \equals{SortInlineExport{}, R} (Val:SortInlineExport{}, Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(K0:SortWasmString{}))) [functional{}()] // functional
  axiom{}\implies{SortInlineExport{}} (\and{SortInlineExport{}} (Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(X0:SortWasmString{}), Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(Y0:SortWasmString{})), Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefn{}, \equals{SortFuncDefn{}, R} (Val:SortFuncDefn{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(K0:SortOptionalId{}, K1:SortFuncSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefn{}} (\and{SortFuncDefn{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Y0:SortOptionalId{}, Y1:SortFuncSpec{})), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortFuncSpec{}} (X1:SortFuncSpec{}, Y1:SortFuncSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(K0:SortOptionalId{}, K1:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Y0:SortOptionalId{}, Y1:SortTypeUse{})), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Y0:SortOptionalId{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalDefn{}, \equals{SortGlobalDefn{}, R} (Val:SortGlobalDefn{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(K0:SortOptionalId{}, K1:SortGlobalSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Y0:SortOptionalId{}, Y1:SortGlobalSpec{})), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Y1:SortGlobalSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(K0:SortOptionalId{}, K1:SortTextFormatGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Y0:SortOptionalId{}, Y1:SortTextFormatGlobalType{})), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTextFormatGlobalType{}} (X1:SortTextFormatGlobalType{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortInstrs{}, K4:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{})), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{})), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInlineImport{}, \equals{SortInlineImport{}, R} (Val:SortInlineImport{}, Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(K0:SortWasmString{}, K1:SortWasmString{}))) [functional{}()] // functional
  axiom{}\implies{SortInlineImport{}} (\and{SortInlineImport{}} (Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(X0:SortWasmString{}, X1:SortWasmString{}), Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Y0:SortWasmString{}, Y1:SortWasmString{})), Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDefn{}, \equals{SortImportDefn{}, R} (Val:SortImportDefn{}, Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(K0:SortWasmString{}, K1:SortWasmString{}, K2:SortImportDesc{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDefn{}} (\and{SortImportDefn{}} (Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{}), Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Y0:SortWasmString{}, Y1:SortWasmString{}, Y2:SortImportDesc{})), Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}), \and{SortImportDesc{}} (X2:SortImportDesc{}, Y2:SortImportDesc{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{})), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{})), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(K0:SortOptionalId{}, K1:SortMemType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{})), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMemType{}} (X1:SortMemType{}, Y1:SortMemType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemoryDefn{}, \equals{SortMemoryDefn{}, R} (Val:SortMemoryDefn{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(K0:SortOptionalId{}, K1:SortMemorySpec{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(K0:SortOptionalId{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{})), Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTextFormatGlobalType{}, \equals{SortTextFormatGlobalType{}, R} (Val:SortTextFormatGlobalType{}, Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(K0:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortTextFormatGlobalType{}} (\and{SortTextFormatGlobalType{}} (Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(X0:SortAValType{}), Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(Y0:SortAValType{})), Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(\and{SortAValType{}} (X0:SortAValType{}, Y0:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOffset{}, \equals{SortOffset{}, R} (Val:SortOffset{}, Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(K0:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortOffset{}} (\and{SortOffset{}} (Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(X0:SortInstrs{}), Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(Y0:SortInstrs{})), Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(\and{SortInstrs{}} (X0:SortInstrs{}, Y0:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStartDefn{}, \equals{SortStartDefn{}, R} (Val:SortStartDefn{}, Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortStartDefn{}} (\and{SortStartDefn{}} (Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(Y0:SortIndex{})), Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(K0:SortOptionalId{}, K1:SortTableType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{})), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTableType{}} (X1:SortTableType{}, Y1:SortTableType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableDefn{}, \equals{SortTableDefn{}, R} (Val:SortTableDefn{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(K0:SortOptionalId{}, K1:SortTableSpec{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeDefn{}, \equals{SortTypeDefn{}, R} (Val:SortTypeDefn{}, Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(K0:SortOptionalId{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDefn{}} (\and{SortTypeDefn{}} (Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}), Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{})), Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(Y0:SortIndex{})), Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Y0:SortIndex{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(K0:SortIndex{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(X0:SortIndex{}, X1:SortTypeDecls{}), Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Y0:SortIndex{}, Y1:SortTypeDecls{})), Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOptionalInt{}, \equals{SortOptionalInt{}, R} (Val:SortOptionalInt{}, Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDataString{}, \equals{SortDataString{}, R} (Val:SortDataString{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}())) [functional{}()] // functional
  axiom{}\not{SortDataString{}} (\and{SortDataString{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(), Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(Y0:SortWasmString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemSegment{}, \equals{SortElemSegment{}, R} (Val:SortElemSegment{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}())) [functional{}()] // functional
  axiom{}\not{SortElemSegment{}} (\and{SortElemSegment{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(), Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())) [functional{}()] // functional
  axiom{}\not{SortValTypes{}} (\and{SortValTypes{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(), Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(Y0:SortValType{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEmptyStmts{}, \equals{SortEmptyStmts{}, R} (Val:SortEmptyStmts{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [functional{}()] // functional
  axiom{}\not{SortEmptyStmts{}} (\and{SortEmptyStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(Y0:SortEmptyStmt{}, Y1:SortEmptyStmts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())) [functional{}()] // functional
  axiom{}\not{SortInstrs{}} (\and{SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Y0:SortInstr{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecls{}, \equals{SortLocalDecls{}, R} (Val:SortLocalDecls{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}())) [functional{}()] // functional
  axiom{}\not{SortLocalDecls{}} (\and{SortLocalDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(), Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Y0:SortLocalDecl{}, Y1:SortLocalDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}())) [functional{}()] // functional
  axiom{}\not{SortStmts{}} (\and{SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Y0:SortStmt{}, Y1:SortStmts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())) [functional{}()] // functional
  axiom{}\not{SortTypeDecls{}} (\and{SortTypeDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(), Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Y0:SortTypeDecl{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, Lbl'Stop'MemoryIdentifier'Unds'WASM-TEXT'Unds'Identifier{}())) [functional{}()] // functional
  axiom{}\not{SortIdentifier{}} (\and{SortIdentifier{}} (Lbl'Stop'MemoryIdentifier'Unds'WASM-TEXT'Unds'Identifier{}(), Lbl'Stop'TableIdentifier'Unds'WASM-TEXT'Unds'Identifier{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), Lblconst'Unds'WASM-DATA'Unds'Mut{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), Lblvar'Unds'WASM-DATA'Unds'Mut{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, Lbl'Stop'TableIdentifier'Unds'WASM-TEXT'Unds'Identifier{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())) [functional{}()] // functional
  axiom{}\not{SortValStack{}} (\and{SortValStack{}} (Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Y0:SortVal{}, Y1:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortWasmString{}, \equals{SortWasmString{}, R} (Val:SortWasmString{}, Lbl'Stop'WasmString'Unds'WASM-DATA'Unds'WasmString{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFVal{}, \equals{SortFVal{}, R} (Val:SortFVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(K0:SortFValType{}, K1:SortFloat{}))) [functional{}()] // functional
  axiom{}\implies{SortFVal{}} (\and{SortFVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(X0:SortFValType{}, X1:SortFloat{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Y0:SortFValType{}, Y1:SortFloat{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFloat{}} (X1:SortFloat{}, Y1:SortFloat{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIVal{}, \equals{SortIVal{}, R} (Val:SortIVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(K0:SortIValType{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIVal{}} (\and{SortIVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(K0:SortAValType{}, K1:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(X0:SortAValType{}, X1:SortNumber{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(Y0:SortAValType{}, Y1:SortNumber{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(\and{SortAValType{}} (X0:SortAValType{}, Y0:SortAValType{}), \and{SortNumber{}} (X1:SortNumber{}, Y1:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(X0:SortAValType{}, X1:SortNumber{}), Lblundefined'Unds'WASM-DATA'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCurFrameCell{}, \equals{SortCurFrameCell{}, R} (Val:SortCurFrameCell{}, Lbl'-LT-'curFrame'-GT-'{}(K0:SortLocalsCell{}, K1:SortCurModIdxCell{}, K2:SortLabelDepthCell{}, K3:SortLabelIdsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortCurFrameCell{}} (\and{SortCurFrameCell{}} (Lbl'-LT-'curFrame'-GT-'{}(X0:SortLocalsCell{}, X1:SortCurModIdxCell{}, X2:SortLabelDepthCell{}, X3:SortLabelIdsCell{}), Lbl'-LT-'curFrame'-GT-'{}(Y0:SortLocalsCell{}, Y1:SortCurModIdxCell{}, Y2:SortLabelDepthCell{}, Y3:SortLabelIdsCell{})), Lbl'-LT-'curFrame'-GT-'{}(\and{SortLocalsCell{}} (X0:SortLocalsCell{}, Y0:SortLocalsCell{}), \and{SortCurModIdxCell{}} (X1:SortCurModIdxCell{}, Y1:SortCurModIdxCell{}), \and{SortLabelDepthCell{}} (X2:SortLabelDepthCell{}, Y2:SortLabelDepthCell{}), \and{SortLabelIdsCell{}} (X3:SortLabelIdsCell{}, Y3:SortLabelIdsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurFrameCellFragment{}, \equals{SortCurFrameCellFragment{}, R} (Val:SortCurFrameCellFragment{}, Lbl'-LT-'curFrame'-GT-'-fragment{}(K0:SortLocalsCellOpt{}, K1:SortCurModIdxCellOpt{}, K2:SortLabelDepthCellOpt{}, K3:SortLabelIdsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurFrameCellFragment{}} (\and{SortCurFrameCellFragment{}} (Lbl'-LT-'curFrame'-GT-'-fragment{}(X0:SortLocalsCellOpt{}, X1:SortCurModIdxCellOpt{}, X2:SortLabelDepthCellOpt{}, X3:SortLabelIdsCellOpt{}), Lbl'-LT-'curFrame'-GT-'-fragment{}(Y0:SortLocalsCellOpt{}, Y1:SortCurModIdxCellOpt{}, Y2:SortLabelDepthCellOpt{}, Y3:SortLabelIdsCellOpt{})), Lbl'-LT-'curFrame'-GT-'-fragment{}(\and{SortLocalsCellOpt{}} (X0:SortLocalsCellOpt{}, Y0:SortLocalsCellOpt{}), \and{SortCurModIdxCellOpt{}} (X1:SortCurModIdxCellOpt{}, Y1:SortCurModIdxCellOpt{}), \and{SortLabelDepthCellOpt{}} (X2:SortLabelDepthCellOpt{}, Y2:SortLabelDepthCellOpt{}), \and{SortLabelIdsCellOpt{}} (X3:SortLabelIdsCellOpt{}, Y3:SortLabelIdsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurModIdxCell{}, \equals{SortCurModIdxCell{}, R} (Val:SortCurModIdxCell{}, Lbl'-LT-'curModIdx'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurModIdxCell{}} (\and{SortCurModIdxCell{}} (Lbl'-LT-'curModIdx'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'curModIdx'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'curModIdx'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCell{}, \equals{SortDeterministicMemoryGrowthCell{}, R} (Val:SortDeterministicMemoryGrowthCell{}, Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{}\implies{SortDeterministicMemoryGrowthCell{}} (\and{SortDeterministicMemoryGrowthCell{}} (Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(X0:SortBool{}), Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(Y0:SortBool{})), Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(\and{SortBool{}} (X0:SortBool{}, Y0:SortBool{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExportsCell{}, \equals{SortExportsCell{}, R} (Val:SortExportsCell{}, Lbl'-LT-'exports'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortExportsCell{}} (\and{SortExportsCell{}} (Lbl'-LT-'exports'-GT-'{}(X0:SortMap{}), Lbl'-LT-'exports'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'exports'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFAddrCell{}, \equals{SortFAddrCell{}, R} (Val:SortFAddrCell{}, Lbl'-LT-'fAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortFAddrCell{}} (\and{SortFAddrCell{}} (Lbl'-LT-'fAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'fAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'fAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFCodeCell{}, \equals{SortFCodeCell{}, R} (Val:SortFCodeCell{}, Lbl'-LT-'fCode'-GT-'{}(K0:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFCodeCell{}} (\and{SortFCodeCell{}} (Lbl'-LT-'fCode'-GT-'{}(X0:SortInstrs{}), Lbl'-LT-'fCode'-GT-'{}(Y0:SortInstrs{})), Lbl'-LT-'fCode'-GT-'{}(\and{SortInstrs{}} (X0:SortInstrs{}, Y0:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFLocalCell{}, \equals{SortFLocalCell{}, R} (Val:SortFLocalCell{}, Lbl'-LT-'fLocal'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortFLocalCell{}} (\and{SortFLocalCell{}} (Lbl'-LT-'fLocal'-GT-'{}(X0:SortType{}), Lbl'-LT-'fLocal'-GT-'{}(Y0:SortType{})), Lbl'-LT-'fLocal'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFModInstCell{}, \equals{SortFModInstCell{}, R} (Val:SortFModInstCell{}, Lbl'-LT-'fModInst'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortFModInstCell{}} (\and{SortFModInstCell{}} (Lbl'-LT-'fModInst'-GT-'{}(X0:SortInt{}), Lbl'-LT-'fModInst'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'fModInst'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFTypeCell{}, \equals{SortFTypeCell{}, R} (Val:SortFTypeCell{}, Lbl'-LT-'fType'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortFTypeCell{}} (\and{SortFTypeCell{}} (Lbl'-LT-'fType'-GT-'{}(X0:SortType{}), Lbl'-LT-'fType'-GT-'{}(Y0:SortType{})), Lbl'-LT-'fType'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncAddrsCell{}, \equals{SortFuncAddrsCell{}, R} (Val:SortFuncAddrsCell{}, Lbl'-LT-'funcAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncAddrsCell{}} (\and{SortFuncAddrsCell{}} (Lbl'-LT-'funcAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'funcAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'funcAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefCell{}, \equals{SortFuncDefCell{}, R} (Val:SortFuncDefCell{}, Lbl'-LT-'funcDef'-GT-'{}(K0:SortFAddrCell{}, K1:SortFCodeCell{}, K2:SortFTypeCell{}, K3:SortFLocalCell{}, K4:SortFModInstCell{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefCell{}} (\and{SortFuncDefCell{}} (Lbl'-LT-'funcDef'-GT-'{}(X0:SortFAddrCell{}, X1:SortFCodeCell{}, X2:SortFTypeCell{}, X3:SortFLocalCell{}, X4:SortFModInstCell{}), Lbl'-LT-'funcDef'-GT-'{}(Y0:SortFAddrCell{}, Y1:SortFCodeCell{}, Y2:SortFTypeCell{}, Y3:SortFLocalCell{}, Y4:SortFModInstCell{})), Lbl'-LT-'funcDef'-GT-'{}(\and{SortFAddrCell{}} (X0:SortFAddrCell{}, Y0:SortFAddrCell{}), \and{SortFCodeCell{}} (X1:SortFCodeCell{}, Y1:SortFCodeCell{}), \and{SortFTypeCell{}} (X2:SortFTypeCell{}, Y2:SortFTypeCell{}), \and{SortFLocalCell{}} (X3:SortFLocalCell{}, Y3:SortFLocalCell{}), \and{SortFModInstCell{}} (X4:SortFModInstCell{}, Y4:SortFModInstCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefCellFragment{}, \equals{SortFuncDefCellFragment{}, R} (Val:SortFuncDefCellFragment{}, Lbl'-LT-'funcDef'-GT-'-fragment{}(K0:SortFAddrCellOpt{}, K1:SortFCodeCellOpt{}, K2:SortFTypeCellOpt{}, K3:SortFLocalCellOpt{}, K4:SortFModInstCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefCellFragment{}} (\and{SortFuncDefCellFragment{}} (Lbl'-LT-'funcDef'-GT-'-fragment{}(X0:SortFAddrCellOpt{}, X1:SortFCodeCellOpt{}, X2:SortFTypeCellOpt{}, X3:SortFLocalCellOpt{}, X4:SortFModInstCellOpt{}), Lbl'-LT-'funcDef'-GT-'-fragment{}(Y0:SortFAddrCellOpt{}, Y1:SortFCodeCellOpt{}, Y2:SortFTypeCellOpt{}, Y3:SortFLocalCellOpt{}, Y4:SortFModInstCellOpt{})), Lbl'-LT-'funcDef'-GT-'-fragment{}(\and{SortFAddrCellOpt{}} (X0:SortFAddrCellOpt{}, Y0:SortFAddrCellOpt{}), \and{SortFCodeCellOpt{}} (X1:SortFCodeCellOpt{}, Y1:SortFCodeCellOpt{}), \and{SortFTypeCellOpt{}} (X2:SortFTypeCellOpt{}, Y2:SortFTypeCellOpt{}), \and{SortFLocalCellOpt{}} (X3:SortFLocalCellOpt{}, Y3:SortFLocalCellOpt{}), \and{SortFModInstCellOpt{}} (X4:SortFModInstCellOpt{}, Y4:SortFModInstCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncIdsCell{}, \equals{SortFuncIdsCell{}, R} (Val:SortFuncIdsCell{}, Lbl'-LT-'funcIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncIdsCell{}} (\and{SortFuncIdsCell{}} (Lbl'-LT-'funcIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'funcIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'funcIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncsCell{}, \equals{SortFuncsCell{}, R} (Val:SortFuncsCell{}, Lbl'-LT-'funcs'-GT-'{}(K0:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncsCell{}} (\and{SortFuncsCell{}} (Lbl'-LT-'funcs'-GT-'{}(X0:SortFuncDefCellMap{}), Lbl'-LT-'funcs'-GT-'{}(Y0:SortFuncDefCellMap{})), Lbl'-LT-'funcs'-GT-'{}(\and{SortFuncDefCellMap{}} (X0:SortFuncDefCellMap{}, Y0:SortFuncDefCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncsCellFragment{}, \equals{SortFuncsCellFragment{}, R} (Val:SortFuncsCellFragment{}, Lbl'-LT-'funcs'-GT-'-fragment{}(K0:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncsCellFragment{}} (\and{SortFuncsCellFragment{}} (Lbl'-LT-'funcs'-GT-'-fragment{}(X0:SortFuncDefCellMap{}), Lbl'-LT-'funcs'-GT-'-fragment{}(Y0:SortFuncDefCellMap{})), Lbl'-LT-'funcs'-GT-'-fragment{}(\and{SortFuncDefCellMap{}} (X0:SortFuncDefCellMap{}, Y0:SortFuncDefCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGAddrCell{}, \equals{SortGAddrCell{}, R} (Val:SortGAddrCell{}, Lbl'-LT-'gAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGAddrCell{}} (\and{SortGAddrCell{}} (Lbl'-LT-'gAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'gAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'gAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGMutCell{}, \equals{SortGMutCell{}, R} (Val:SortGMutCell{}, Lbl'-LT-'gMut'-GT-'{}(K0:SortMut{}))) [functional{}()] // functional
  axiom{}\implies{SortGMutCell{}} (\and{SortGMutCell{}} (Lbl'-LT-'gMut'-GT-'{}(X0:SortMut{}), Lbl'-LT-'gMut'-GT-'{}(Y0:SortMut{})), Lbl'-LT-'gMut'-GT-'{}(\and{SortMut{}} (X0:SortMut{}, Y0:SortMut{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGValueCell{}, \equals{SortGValueCell{}, R} (Val:SortGValueCell{}, Lbl'-LT-'gValue'-GT-'{}(K0:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortGValueCell{}} (\and{SortGValueCell{}} (Lbl'-LT-'gValue'-GT-'{}(X0:SortVal{}), Lbl'-LT-'gValue'-GT-'{}(Y0:SortVal{})), Lbl'-LT-'gValue'-GT-'{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortWasmCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortWasmCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortWasmCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortWasmCell{}} (X0:SortWasmCell{}, Y0:SortWasmCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortWasmCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortWasmCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortWasmCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortWasmCellOpt{}} (X0:SortWasmCellOpt{}, Y0:SortWasmCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobIdsCell{}, \equals{SortGlobIdsCell{}, R} (Val:SortGlobIdsCell{}, Lbl'-LT-'globIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobIdsCell{}} (\and{SortGlobIdsCell{}} (Lbl'-LT-'globIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'globIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'globIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalAddrsCell{}, \equals{SortGlobalAddrsCell{}, R} (Val:SortGlobalAddrsCell{}, Lbl'-LT-'globalAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalAddrsCell{}} (\and{SortGlobalAddrsCell{}} (Lbl'-LT-'globalAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'globalAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'globalAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalInstCell{}, \equals{SortGlobalInstCell{}, R} (Val:SortGlobalInstCell{}, Lbl'-LT-'globalInst'-GT-'{}(K0:SortGAddrCell{}, K1:SortGValueCell{}, K2:SortGMutCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalInstCell{}} (\and{SortGlobalInstCell{}} (Lbl'-LT-'globalInst'-GT-'{}(X0:SortGAddrCell{}, X1:SortGValueCell{}, X2:SortGMutCell{}), Lbl'-LT-'globalInst'-GT-'{}(Y0:SortGAddrCell{}, Y1:SortGValueCell{}, Y2:SortGMutCell{})), Lbl'-LT-'globalInst'-GT-'{}(\and{SortGAddrCell{}} (X0:SortGAddrCell{}, Y0:SortGAddrCell{}), \and{SortGValueCell{}} (X1:SortGValueCell{}, Y1:SortGValueCell{}), \and{SortGMutCell{}} (X2:SortGMutCell{}, Y2:SortGMutCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalInstCellFragment{}, \equals{SortGlobalInstCellFragment{}, R} (Val:SortGlobalInstCellFragment{}, Lbl'-LT-'globalInst'-GT-'-fragment{}(K0:SortGAddrCellOpt{}, K1:SortGValueCellOpt{}, K2:SortGMutCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalInstCellFragment{}} (\and{SortGlobalInstCellFragment{}} (Lbl'-LT-'globalInst'-GT-'-fragment{}(X0:SortGAddrCellOpt{}, X1:SortGValueCellOpt{}, X2:SortGMutCellOpt{}), Lbl'-LT-'globalInst'-GT-'-fragment{}(Y0:SortGAddrCellOpt{}, Y1:SortGValueCellOpt{}, Y2:SortGMutCellOpt{})), Lbl'-LT-'globalInst'-GT-'-fragment{}(\and{SortGAddrCellOpt{}} (X0:SortGAddrCellOpt{}, Y0:SortGAddrCellOpt{}), \and{SortGValueCellOpt{}} (X1:SortGValueCellOpt{}, Y1:SortGValueCellOpt{}), \and{SortGMutCellOpt{}} (X2:SortGMutCellOpt{}, Y2:SortGMutCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalsCell{}, \equals{SortGlobalsCell{}, R} (Val:SortGlobalsCell{}, Lbl'-LT-'globals'-GT-'{}(K0:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalsCell{}} (\and{SortGlobalsCell{}} (Lbl'-LT-'globals'-GT-'{}(X0:SortGlobalInstCellMap{}), Lbl'-LT-'globals'-GT-'{}(Y0:SortGlobalInstCellMap{})), Lbl'-LT-'globals'-GT-'{}(\and{SortGlobalInstCellMap{}} (X0:SortGlobalInstCellMap{}, Y0:SortGlobalInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalsCellFragment{}, \equals{SortGlobalsCellFragment{}, R} (Val:SortGlobalsCellFragment{}, Lbl'-LT-'globals'-GT-'-fragment{}(K0:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalsCellFragment{}} (\and{SortGlobalsCellFragment{}} (Lbl'-LT-'globals'-GT-'-fragment{}(X0:SortGlobalInstCellMap{}), Lbl'-LT-'globals'-GT-'-fragment{}(Y0:SortGlobalInstCellMap{})), Lbl'-LT-'globals'-GT-'-fragment{}(\and{SortGlobalInstCellMap{}} (X0:SortGlobalInstCellMap{}, Y0:SortGlobalInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLabelDepthCell{}, \equals{SortLabelDepthCell{}, R} (Val:SortLabelDepthCell{}, Lbl'-LT-'labelDepth'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLabelDepthCell{}} (\and{SortLabelDepthCell{}} (Lbl'-LT-'labelDepth'-GT-'{}(X0:SortInt{}), Lbl'-LT-'labelDepth'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'labelDepth'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLabelIdsCell{}, \equals{SortLabelIdsCell{}, R} (Val:SortLabelIdsCell{}, Lbl'-LT-'labelIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLabelIdsCell{}} (\and{SortLabelIdsCell{}} (Lbl'-LT-'labelIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'labelIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'labelIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalsCell{}, \equals{SortLocalsCell{}, R} (Val:SortLocalsCell{}, Lbl'-LT-'locals'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalsCell{}} (\and{SortLocalsCell{}} (Lbl'-LT-'locals'-GT-'{}(X0:SortMap{}), Lbl'-LT-'locals'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'locals'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMAddrCell{}, \equals{SortMAddrCell{}, R} (Val:SortMAddrCell{}, Lbl'-LT-'mAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMAddrCell{}} (\and{SortMAddrCell{}} (Lbl'-LT-'mAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'mAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'mAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMainStoreCell{}, \equals{SortMainStoreCell{}, R} (Val:SortMainStoreCell{}, Lbl'-LT-'mainStore'-GT-'{}(K0:SortFuncsCell{}, K1:SortNextFuncAddrCell{}, K2:SortTabsCell{}, K3:SortNextTabAddrCell{}, K4:SortMemsCell{}, K5:SortNextMemAddrCell{}, K6:SortGlobalsCell{}, K7:SortNextGlobAddrCell{}))) [functional{}()] // functional
  axiom{}\implies{SortMainStoreCell{}} (\and{SortMainStoreCell{}} (Lbl'-LT-'mainStore'-GT-'{}(X0:SortFuncsCell{}, X1:SortNextFuncAddrCell{}, X2:SortTabsCell{}, X3:SortNextTabAddrCell{}, X4:SortMemsCell{}, X5:SortNextMemAddrCell{}, X6:SortGlobalsCell{}, X7:SortNextGlobAddrCell{}), Lbl'-LT-'mainStore'-GT-'{}(Y0:SortFuncsCell{}, Y1:SortNextFuncAddrCell{}, Y2:SortTabsCell{}, Y3:SortNextTabAddrCell{}, Y4:SortMemsCell{}, Y5:SortNextMemAddrCell{}, Y6:SortGlobalsCell{}, Y7:SortNextGlobAddrCell{})), Lbl'-LT-'mainStore'-GT-'{}(\and{SortFuncsCell{}} (X0:SortFuncsCell{}, Y0:SortFuncsCell{}), \and{SortNextFuncAddrCell{}} (X1:SortNextFuncAddrCell{}, Y1:SortNextFuncAddrCell{}), \and{SortTabsCell{}} (X2:SortTabsCell{}, Y2:SortTabsCell{}), \and{SortNextTabAddrCell{}} (X3:SortNextTabAddrCell{}, Y3:SortNextTabAddrCell{}), \and{SortMemsCell{}} (X4:SortMemsCell{}, Y4:SortMemsCell{}), \and{SortNextMemAddrCell{}} (X5:SortNextMemAddrCell{}, Y5:SortNextMemAddrCell{}), \and{SortGlobalsCell{}} (X6:SortGlobalsCell{}, Y6:SortGlobalsCell{}), \and{SortNextGlobAddrCell{}} (X7:SortNextGlobAddrCell{}, Y7:SortNextGlobAddrCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMainStoreCellFragment{}, \equals{SortMainStoreCellFragment{}, R} (Val:SortMainStoreCellFragment{}, Lbl'-LT-'mainStore'-GT-'-fragment{}(K0:SortFuncsCellOpt{}, K1:SortNextFuncAddrCellOpt{}, K2:SortTabsCellOpt{}, K3:SortNextTabAddrCellOpt{}, K4:SortMemsCellOpt{}, K5:SortNextMemAddrCellOpt{}, K6:SortGlobalsCellOpt{}, K7:SortNextGlobAddrCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortMainStoreCellFragment{}} (\and{SortMainStoreCellFragment{}} (Lbl'-LT-'mainStore'-GT-'-fragment{}(X0:SortFuncsCellOpt{}, X1:SortNextFuncAddrCellOpt{}, X2:SortTabsCellOpt{}, X3:SortNextTabAddrCellOpt{}, X4:SortMemsCellOpt{}, X5:SortNextMemAddrCellOpt{}, X6:SortGlobalsCellOpt{}, X7:SortNextGlobAddrCellOpt{}), Lbl'-LT-'mainStore'-GT-'-fragment{}(Y0:SortFuncsCellOpt{}, Y1:SortNextFuncAddrCellOpt{}, Y2:SortTabsCellOpt{}, Y3:SortNextTabAddrCellOpt{}, Y4:SortMemsCellOpt{}, Y5:SortNextMemAddrCellOpt{}, Y6:SortGlobalsCellOpt{}, Y7:SortNextGlobAddrCellOpt{})), Lbl'-LT-'mainStore'-GT-'-fragment{}(\and{SortFuncsCellOpt{}} (X0:SortFuncsCellOpt{}, Y0:SortFuncsCellOpt{}), \and{SortNextFuncAddrCellOpt{}} (X1:SortNextFuncAddrCellOpt{}, Y1:SortNextFuncAddrCellOpt{}), \and{SortTabsCellOpt{}} (X2:SortTabsCellOpt{}, Y2:SortTabsCellOpt{}), \and{SortNextTabAddrCellOpt{}} (X3:SortNextTabAddrCellOpt{}, Y3:SortNextTabAddrCellOpt{}), \and{SortMemsCellOpt{}} (X4:SortMemsCellOpt{}, Y4:SortMemsCellOpt{}), \and{SortNextMemAddrCellOpt{}} (X5:SortNextMemAddrCellOpt{}, Y5:SortNextMemAddrCellOpt{}), \and{SortGlobalsCellOpt{}} (X6:SortGlobalsCellOpt{}, Y6:SortGlobalsCellOpt{}), \and{SortNextGlobAddrCellOpt{}} (X7:SortNextGlobAddrCellOpt{}, Y7:SortNextGlobAddrCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMdataCell{}, \equals{SortMdataCell{}, R} (Val:SortMdataCell{}, Lbl'-LT-'mdata'-GT-'{}(K0:SortByteMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMdataCell{}} (\and{SortMdataCell{}} (Lbl'-LT-'mdata'-GT-'{}(X0:SortByteMap{}), Lbl'-LT-'mdata'-GT-'{}(Y0:SortByteMap{})), Lbl'-LT-'mdata'-GT-'{}(\and{SortByteMap{}} (X0:SortByteMap{}, Y0:SortByteMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemAddrsCell{}, \equals{SortMemAddrsCell{}, R} (Val:SortMemAddrsCell{}, Lbl'-LT-'memAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemAddrsCell{}} (\and{SortMemAddrsCell{}} (Lbl'-LT-'memAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'memAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'memAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemIdsCell{}, \equals{SortMemIdsCell{}, R} (Val:SortMemIdsCell{}, Lbl'-LT-'memIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemIdsCell{}} (\and{SortMemIdsCell{}} (Lbl'-LT-'memIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'memIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'memIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemInstCell{}, \equals{SortMemInstCell{}, R} (Val:SortMemInstCell{}, Lbl'-LT-'memInst'-GT-'{}(K0:SortMAddrCell{}, K1:SortMmaxCell{}, K2:SortMsizeCell{}, K3:SortMdataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortMemInstCell{}} (\and{SortMemInstCell{}} (Lbl'-LT-'memInst'-GT-'{}(X0:SortMAddrCell{}, X1:SortMmaxCell{}, X2:SortMsizeCell{}, X3:SortMdataCell{}), Lbl'-LT-'memInst'-GT-'{}(Y0:SortMAddrCell{}, Y1:SortMmaxCell{}, Y2:SortMsizeCell{}, Y3:SortMdataCell{})), Lbl'-LT-'memInst'-GT-'{}(\and{SortMAddrCell{}} (X0:SortMAddrCell{}, Y0:SortMAddrCell{}), \and{SortMmaxCell{}} (X1:SortMmaxCell{}, Y1:SortMmaxCell{}), \and{SortMsizeCell{}} (X2:SortMsizeCell{}, Y2:SortMsizeCell{}), \and{SortMdataCell{}} (X3:SortMdataCell{}, Y3:SortMdataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemInstCellFragment{}, \equals{SortMemInstCellFragment{}, R} (Val:SortMemInstCellFragment{}, Lbl'-LT-'memInst'-GT-'-fragment{}(K0:SortMAddrCellOpt{}, K1:SortMmaxCellOpt{}, K2:SortMsizeCellOpt{}, K3:SortMdataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortMemInstCellFragment{}} (\and{SortMemInstCellFragment{}} (Lbl'-LT-'memInst'-GT-'-fragment{}(X0:SortMAddrCellOpt{}, X1:SortMmaxCellOpt{}, X2:SortMsizeCellOpt{}, X3:SortMdataCellOpt{}), Lbl'-LT-'memInst'-GT-'-fragment{}(Y0:SortMAddrCellOpt{}, Y1:SortMmaxCellOpt{}, Y2:SortMsizeCellOpt{}, Y3:SortMdataCellOpt{})), Lbl'-LT-'memInst'-GT-'-fragment{}(\and{SortMAddrCellOpt{}} (X0:SortMAddrCellOpt{}, Y0:SortMAddrCellOpt{}), \and{SortMmaxCellOpt{}} (X1:SortMmaxCellOpt{}, Y1:SortMmaxCellOpt{}), \and{SortMsizeCellOpt{}} (X2:SortMsizeCellOpt{}, Y2:SortMsizeCellOpt{}), \and{SortMdataCellOpt{}} (X3:SortMdataCellOpt{}, Y3:SortMdataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemsCell{}, \equals{SortMemsCell{}, R} (Val:SortMemsCell{}, Lbl'-LT-'mems'-GT-'{}(K0:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemsCell{}} (\and{SortMemsCell{}} (Lbl'-LT-'mems'-GT-'{}(X0:SortMemInstCellMap{}), Lbl'-LT-'mems'-GT-'{}(Y0:SortMemInstCellMap{})), Lbl'-LT-'mems'-GT-'{}(\and{SortMemInstCellMap{}} (X0:SortMemInstCellMap{}, Y0:SortMemInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemsCellFragment{}, \equals{SortMemsCellFragment{}, R} (Val:SortMemsCellFragment{}, Lbl'-LT-'mems'-GT-'-fragment{}(K0:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemsCellFragment{}} (\and{SortMemsCellFragment{}} (Lbl'-LT-'mems'-GT-'-fragment{}(X0:SortMemInstCellMap{}), Lbl'-LT-'mems'-GT-'-fragment{}(Y0:SortMemInstCellMap{})), Lbl'-LT-'mems'-GT-'-fragment{}(\and{SortMemInstCellMap{}} (X0:SortMemInstCellMap{}, Y0:SortMemInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMmaxCell{}, \equals{SortMmaxCell{}, R} (Val:SortMmaxCell{}, Lbl'-LT-'mmax'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMmaxCell{}} (\and{SortMmaxCell{}} (Lbl'-LT-'mmax'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'mmax'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'mmax'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModIdxCell{}, \equals{SortModIdxCell{}, R} (Val:SortModIdxCell{}, Lbl'-LT-'modIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortModIdxCell{}} (\and{SortModIdxCell{}} (Lbl'-LT-'modIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'modIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'modIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleIdsCell{}, \equals{SortModuleIdsCell{}, R} (Val:SortModuleIdsCell{}, Lbl'-LT-'moduleIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleIdsCell{}} (\and{SortModuleIdsCell{}} (Lbl'-LT-'moduleIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'moduleIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'moduleIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstCell{}, \equals{SortModuleInstCell{}, R} (Val:SortModuleInstCell{}, Lbl'-LT-'moduleInst'-GT-'{}(K0:SortModIdxCell{}, K1:SortExportsCell{}, K2:SortTypeIdsCell{}, K3:SortTypesCell{}, K4:SortNextTypeIdxCell{}, K5:SortFuncIdsCell{}, K6:SortFuncAddrsCell{}, K7:SortNextFuncIdxCell{}, K8:SortTabIdsCell{}, K9:SortTabAddrsCell{}, K10:SortMemIdsCell{}, K11:SortMemAddrsCell{}, K12:SortGlobIdsCell{}, K13:SortGlobalAddrsCell{}, K14:SortNextGlobIdxCell{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstCell{}} (\and{SortModuleInstCell{}} (Lbl'-LT-'moduleInst'-GT-'{}(X0:SortModIdxCell{}, X1:SortExportsCell{}, X2:SortTypeIdsCell{}, X3:SortTypesCell{}, X4:SortNextTypeIdxCell{}, X5:SortFuncIdsCell{}, X6:SortFuncAddrsCell{}, X7:SortNextFuncIdxCell{}, X8:SortTabIdsCell{}, X9:SortTabAddrsCell{}, X10:SortMemIdsCell{}, X11:SortMemAddrsCell{}, X12:SortGlobIdsCell{}, X13:SortGlobalAddrsCell{}, X14:SortNextGlobIdxCell{}), Lbl'-LT-'moduleInst'-GT-'{}(Y0:SortModIdxCell{}, Y1:SortExportsCell{}, Y2:SortTypeIdsCell{}, Y3:SortTypesCell{}, Y4:SortNextTypeIdxCell{}, Y5:SortFuncIdsCell{}, Y6:SortFuncAddrsCell{}, Y7:SortNextFuncIdxCell{}, Y8:SortTabIdsCell{}, Y9:SortTabAddrsCell{}, Y10:SortMemIdsCell{}, Y11:SortMemAddrsCell{}, Y12:SortGlobIdsCell{}, Y13:SortGlobalAddrsCell{}, Y14:SortNextGlobIdxCell{})), Lbl'-LT-'moduleInst'-GT-'{}(\and{SortModIdxCell{}} (X0:SortModIdxCell{}, Y0:SortModIdxCell{}), \and{SortExportsCell{}} (X1:SortExportsCell{}, Y1:SortExportsCell{}), \and{SortTypeIdsCell{}} (X2:SortTypeIdsCell{}, Y2:SortTypeIdsCell{}), \and{SortTypesCell{}} (X3:SortTypesCell{}, Y3:SortTypesCell{}), \and{SortNextTypeIdxCell{}} (X4:SortNextTypeIdxCell{}, Y4:SortNextTypeIdxCell{}), \and{SortFuncIdsCell{}} (X5:SortFuncIdsCell{}, Y5:SortFuncIdsCell{}), \and{SortFuncAddrsCell{}} (X6:SortFuncAddrsCell{}, Y6:SortFuncAddrsCell{}), \and{SortNextFuncIdxCell{}} (X7:SortNextFuncIdxCell{}, Y7:SortNextFuncIdxCell{}), \and{SortTabIdsCell{}} (X8:SortTabIdsCell{}, Y8:SortTabIdsCell{}), \and{SortTabAddrsCell{}} (X9:SortTabAddrsCell{}, Y9:SortTabAddrsCell{}), \and{SortMemIdsCell{}} (X10:SortMemIdsCell{}, Y10:SortMemIdsCell{}), \and{SortMemAddrsCell{}} (X11:SortMemAddrsCell{}, Y11:SortMemAddrsCell{}), \and{SortGlobIdsCell{}} (X12:SortGlobIdsCell{}, Y12:SortGlobIdsCell{}), \and{SortGlobalAddrsCell{}} (X13:SortGlobalAddrsCell{}, Y13:SortGlobalAddrsCell{}), \and{SortNextGlobIdxCell{}} (X14:SortNextGlobIdxCell{}, Y14:SortNextGlobIdxCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstCellFragment{}, \equals{SortModuleInstCellFragment{}, R} (Val:SortModuleInstCellFragment{}, Lbl'-LT-'moduleInst'-GT-'-fragment{}(K0:SortModIdxCellOpt{}, K1:SortExportsCellOpt{}, K2:SortTypeIdsCellOpt{}, K3:SortTypesCellOpt{}, K4:SortNextTypeIdxCellOpt{}, K5:SortFuncIdsCellOpt{}, K6:SortFuncAddrsCellOpt{}, K7:SortNextFuncIdxCellOpt{}, K8:SortTabIdsCellOpt{}, K9:SortTabAddrsCellOpt{}, K10:SortMemIdsCellOpt{}, K11:SortMemAddrsCellOpt{}, K12:SortGlobIdsCellOpt{}, K13:SortGlobalAddrsCellOpt{}, K14:SortNextGlobIdxCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstCellFragment{}} (\and{SortModuleInstCellFragment{}} (Lbl'-LT-'moduleInst'-GT-'-fragment{}(X0:SortModIdxCellOpt{}, X1:SortExportsCellOpt{}, X2:SortTypeIdsCellOpt{}, X3:SortTypesCellOpt{}, X4:SortNextTypeIdxCellOpt{}, X5:SortFuncIdsCellOpt{}, X6:SortFuncAddrsCellOpt{}, X7:SortNextFuncIdxCellOpt{}, X8:SortTabIdsCellOpt{}, X9:SortTabAddrsCellOpt{}, X10:SortMemIdsCellOpt{}, X11:SortMemAddrsCellOpt{}, X12:SortGlobIdsCellOpt{}, X13:SortGlobalAddrsCellOpt{}, X14:SortNextGlobIdxCellOpt{}), Lbl'-LT-'moduleInst'-GT-'-fragment{}(Y0:SortModIdxCellOpt{}, Y1:SortExportsCellOpt{}, Y2:SortTypeIdsCellOpt{}, Y3:SortTypesCellOpt{}, Y4:SortNextTypeIdxCellOpt{}, Y5:SortFuncIdsCellOpt{}, Y6:SortFuncAddrsCellOpt{}, Y7:SortNextFuncIdxCellOpt{}, Y8:SortTabIdsCellOpt{}, Y9:SortTabAddrsCellOpt{}, Y10:SortMemIdsCellOpt{}, Y11:SortMemAddrsCellOpt{}, Y12:SortGlobIdsCellOpt{}, Y13:SortGlobalAddrsCellOpt{}, Y14:SortNextGlobIdxCellOpt{})), Lbl'-LT-'moduleInst'-GT-'-fragment{}(\and{SortModIdxCellOpt{}} (X0:SortModIdxCellOpt{}, Y0:SortModIdxCellOpt{}), \and{SortExportsCellOpt{}} (X1:SortExportsCellOpt{}, Y1:SortExportsCellOpt{}), \and{SortTypeIdsCellOpt{}} (X2:SortTypeIdsCellOpt{}, Y2:SortTypeIdsCellOpt{}), \and{SortTypesCellOpt{}} (X3:SortTypesCellOpt{}, Y3:SortTypesCellOpt{}), \and{SortNextTypeIdxCellOpt{}} (X4:SortNextTypeIdxCellOpt{}, Y4:SortNextTypeIdxCellOpt{}), \and{SortFuncIdsCellOpt{}} (X5:SortFuncIdsCellOpt{}, Y5:SortFuncIdsCellOpt{}), \and{SortFuncAddrsCellOpt{}} (X6:SortFuncAddrsCellOpt{}, Y6:SortFuncAddrsCellOpt{}), \and{SortNextFuncIdxCellOpt{}} (X7:SortNextFuncIdxCellOpt{}, Y7:SortNextFuncIdxCellOpt{}), \and{SortTabIdsCellOpt{}} (X8:SortTabIdsCellOpt{}, Y8:SortTabIdsCellOpt{}), \and{SortTabAddrsCellOpt{}} (X9:SortTabAddrsCellOpt{}, Y9:SortTabAddrsCellOpt{}), \and{SortMemIdsCellOpt{}} (X10:SortMemIdsCellOpt{}, Y10:SortMemIdsCellOpt{}), \and{SortMemAddrsCellOpt{}} (X11:SortMemAddrsCellOpt{}, Y11:SortMemAddrsCellOpt{}), \and{SortGlobIdsCellOpt{}} (X12:SortGlobIdsCellOpt{}, Y12:SortGlobIdsCellOpt{}), \and{SortGlobalAddrsCellOpt{}} (X13:SortGlobalAddrsCellOpt{}, Y13:SortGlobalAddrsCellOpt{}), \and{SortNextGlobIdxCellOpt{}} (X14:SortNextGlobIdxCellOpt{}, Y14:SortNextGlobIdxCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstancesCell{}, \equals{SortModuleInstancesCell{}, R} (Val:SortModuleInstancesCell{}, Lbl'-LT-'moduleInstances'-GT-'{}(K0:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstancesCell{}} (\and{SortModuleInstancesCell{}} (Lbl'-LT-'moduleInstances'-GT-'{}(X0:SortModuleInstCellMap{}), Lbl'-LT-'moduleInstances'-GT-'{}(Y0:SortModuleInstCellMap{})), Lbl'-LT-'moduleInstances'-GT-'{}(\and{SortModuleInstCellMap{}} (X0:SortModuleInstCellMap{}, Y0:SortModuleInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstancesCellFragment{}, \equals{SortModuleInstancesCellFragment{}, R} (Val:SortModuleInstancesCellFragment{}, Lbl'-LT-'moduleInstances'-GT-'-fragment{}(K0:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstancesCellFragment{}} (\and{SortModuleInstancesCellFragment{}} (Lbl'-LT-'moduleInstances'-GT-'-fragment{}(X0:SortModuleInstCellMap{}), Lbl'-LT-'moduleInstances'-GT-'-fragment{}(Y0:SortModuleInstCellMap{})), Lbl'-LT-'moduleInstances'-GT-'-fragment{}(\and{SortModuleInstCellMap{}} (X0:SortModuleInstCellMap{}, Y0:SortModuleInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleRegistryCell{}, \equals{SortModuleRegistryCell{}, R} (Val:SortModuleRegistryCell{}, Lbl'-LT-'moduleRegistry'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleRegistryCell{}} (\and{SortModuleRegistryCell{}} (Lbl'-LT-'moduleRegistry'-GT-'{}(X0:SortMap{}), Lbl'-LT-'moduleRegistry'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'moduleRegistry'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMsizeCell{}, \equals{SortMsizeCell{}, R} (Val:SortMsizeCell{}, Lbl'-LT-'msize'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMsizeCell{}} (\and{SortMsizeCell{}} (Lbl'-LT-'msize'-GT-'{}(X0:SortInt{}), Lbl'-LT-'msize'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'msize'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFreshIdCell{}, \equals{SortNextFreshIdCell{}, R} (Val:SortNextFreshIdCell{}, Lbl'-LT-'nextFreshId'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFreshIdCell{}} (\and{SortNextFreshIdCell{}} (Lbl'-LT-'nextFreshId'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFreshId'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFreshId'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFuncAddrCell{}, \equals{SortNextFuncAddrCell{}, R} (Val:SortNextFuncAddrCell{}, Lbl'-LT-'nextFuncAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFuncAddrCell{}} (\and{SortNextFuncAddrCell{}} (Lbl'-LT-'nextFuncAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFuncAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFuncAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFuncIdxCell{}, \equals{SortNextFuncIdxCell{}, R} (Val:SortNextFuncIdxCell{}, Lbl'-LT-'nextFuncIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFuncIdxCell{}} (\and{SortNextFuncIdxCell{}} (Lbl'-LT-'nextFuncIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFuncIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFuncIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextGlobAddrCell{}, \equals{SortNextGlobAddrCell{}, R} (Val:SortNextGlobAddrCell{}, Lbl'-LT-'nextGlobAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextGlobAddrCell{}} (\and{SortNextGlobAddrCell{}} (Lbl'-LT-'nextGlobAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextGlobAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextGlobAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextGlobIdxCell{}, \equals{SortNextGlobIdxCell{}, R} (Val:SortNextGlobIdxCell{}, Lbl'-LT-'nextGlobIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextGlobIdxCell{}} (\and{SortNextGlobIdxCell{}} (Lbl'-LT-'nextGlobIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextGlobIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextGlobIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextMemAddrCell{}, \equals{SortNextMemAddrCell{}, R} (Val:SortNextMemAddrCell{}, Lbl'-LT-'nextMemAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextMemAddrCell{}} (\and{SortNextMemAddrCell{}} (Lbl'-LT-'nextMemAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextMemAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextMemAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextModuleIdxCell{}, \equals{SortNextModuleIdxCell{}, R} (Val:SortNextModuleIdxCell{}, Lbl'-LT-'nextModuleIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextModuleIdxCell{}} (\and{SortNextModuleIdxCell{}} (Lbl'-LT-'nextModuleIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextModuleIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextModuleIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextTabAddrCell{}, \equals{SortNextTabAddrCell{}, R} (Val:SortNextTabAddrCell{}, Lbl'-LT-'nextTabAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextTabAddrCell{}} (\and{SortNextTabAddrCell{}} (Lbl'-LT-'nextTabAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextTabAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextTabAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextTypeIdxCell{}, \equals{SortNextTypeIdxCell{}, R} (Val:SortNextTypeIdxCell{}, Lbl'-LT-'nextTypeIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextTypeIdxCell{}} (\and{SortNextTypeIdxCell{}} (Lbl'-LT-'nextTypeIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextTypeIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextTypeIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTAddrCell{}, \equals{SortTAddrCell{}, R} (Val:SortTAddrCell{}, Lbl'-LT-'tAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTAddrCell{}} (\and{SortTAddrCell{}} (Lbl'-LT-'tAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'tAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'tAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabAddrsCell{}, \equals{SortTabAddrsCell{}, R} (Val:SortTabAddrsCell{}, Lbl'-LT-'tabAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabAddrsCell{}} (\and{SortTabAddrsCell{}} (Lbl'-LT-'tabAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tabAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tabAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabIdsCell{}, \equals{SortTabIdsCell{}, R} (Val:SortTabIdsCell{}, Lbl'-LT-'tabIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabIdsCell{}} (\and{SortTabIdsCell{}} (Lbl'-LT-'tabIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tabIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tabIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabInstCell{}, \equals{SortTabInstCell{}, R} (Val:SortTabInstCell{}, Lbl'-LT-'tabInst'-GT-'{}(K0:SortTAddrCell{}, K1:SortTmaxCell{}, K2:SortTsizeCell{}, K3:SortTdataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTabInstCell{}} (\and{SortTabInstCell{}} (Lbl'-LT-'tabInst'-GT-'{}(X0:SortTAddrCell{}, X1:SortTmaxCell{}, X2:SortTsizeCell{}, X3:SortTdataCell{}), Lbl'-LT-'tabInst'-GT-'{}(Y0:SortTAddrCell{}, Y1:SortTmaxCell{}, Y2:SortTsizeCell{}, Y3:SortTdataCell{})), Lbl'-LT-'tabInst'-GT-'{}(\and{SortTAddrCell{}} (X0:SortTAddrCell{}, Y0:SortTAddrCell{}), \and{SortTmaxCell{}} (X1:SortTmaxCell{}, Y1:SortTmaxCell{}), \and{SortTsizeCell{}} (X2:SortTsizeCell{}, Y2:SortTsizeCell{}), \and{SortTdataCell{}} (X3:SortTdataCell{}, Y3:SortTdataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabInstCellFragment{}, \equals{SortTabInstCellFragment{}, R} (Val:SortTabInstCellFragment{}, Lbl'-LT-'tabInst'-GT-'-fragment{}(K0:SortTAddrCellOpt{}, K1:SortTmaxCellOpt{}, K2:SortTsizeCellOpt{}, K3:SortTdataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTabInstCellFragment{}} (\and{SortTabInstCellFragment{}} (Lbl'-LT-'tabInst'-GT-'-fragment{}(X0:SortTAddrCellOpt{}, X1:SortTmaxCellOpt{}, X2:SortTsizeCellOpt{}, X3:SortTdataCellOpt{}), Lbl'-LT-'tabInst'-GT-'-fragment{}(Y0:SortTAddrCellOpt{}, Y1:SortTmaxCellOpt{}, Y2:SortTsizeCellOpt{}, Y3:SortTdataCellOpt{})), Lbl'-LT-'tabInst'-GT-'-fragment{}(\and{SortTAddrCellOpt{}} (X0:SortTAddrCellOpt{}, Y0:SortTAddrCellOpt{}), \and{SortTmaxCellOpt{}} (X1:SortTmaxCellOpt{}, Y1:SortTmaxCellOpt{}), \and{SortTsizeCellOpt{}} (X2:SortTsizeCellOpt{}, Y2:SortTsizeCellOpt{}), \and{SortTdataCellOpt{}} (X3:SortTdataCellOpt{}, Y3:SortTdataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabsCell{}, \equals{SortTabsCell{}, R} (Val:SortTabsCell{}, Lbl'-LT-'tabs'-GT-'{}(K0:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabsCell{}} (\and{SortTabsCell{}} (Lbl'-LT-'tabs'-GT-'{}(X0:SortTabInstCellMap{}), Lbl'-LT-'tabs'-GT-'{}(Y0:SortTabInstCellMap{})), Lbl'-LT-'tabs'-GT-'{}(\and{SortTabInstCellMap{}} (X0:SortTabInstCellMap{}, Y0:SortTabInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabsCellFragment{}, \equals{SortTabsCellFragment{}, R} (Val:SortTabsCellFragment{}, Lbl'-LT-'tabs'-GT-'-fragment{}(K0:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabsCellFragment{}} (\and{SortTabsCellFragment{}} (Lbl'-LT-'tabs'-GT-'-fragment{}(X0:SortTabInstCellMap{}), Lbl'-LT-'tabs'-GT-'-fragment{}(Y0:SortTabInstCellMap{})), Lbl'-LT-'tabs'-GT-'-fragment{}(\and{SortTabInstCellMap{}} (X0:SortTabInstCellMap{}, Y0:SortTabInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTdataCell{}, \equals{SortTdataCell{}, R} (Val:SortTdataCell{}, Lbl'-LT-'tdata'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTdataCell{}} (\and{SortTdataCell{}} (Lbl'-LT-'tdata'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tdata'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tdata'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTmaxCell{}, \equals{SortTmaxCell{}, R} (Val:SortTmaxCell{}, Lbl'-LT-'tmax'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTmaxCell{}} (\and{SortTmaxCell{}} (Lbl'-LT-'tmax'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'tmax'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'tmax'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTsizeCell{}, \equals{SortTsizeCell{}, R} (Val:SortTsizeCell{}, Lbl'-LT-'tsize'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTsizeCell{}} (\and{SortTsizeCell{}} (Lbl'-LT-'tsize'-GT-'{}(X0:SortInt{}), Lbl'-LT-'tsize'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'tsize'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeIdsCell{}, \equals{SortTypeIdsCell{}, R} (Val:SortTypeIdsCell{}, Lbl'-LT-'typeIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeIdsCell{}} (\and{SortTypeIdsCell{}} (Lbl'-LT-'typeIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'typeIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'typeIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypesCell{}, \equals{SortTypesCell{}, R} (Val:SortTypesCell{}, Lbl'-LT-'types'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTypesCell{}} (\and{SortTypesCell{}} (Lbl'-LT-'types'-GT-'{}(X0:SortMap{}), Lbl'-LT-'types'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'types'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortValstackCell{}, \equals{SortValstackCell{}, R} (Val:SortValstackCell{}, Lbl'-LT-'valstack'-GT-'{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortValstackCell{}} (\and{SortValstackCell{}} (Lbl'-LT-'valstack'-GT-'{}(X0:SortValStack{}), Lbl'-LT-'valstack'-GT-'{}(Y0:SortValStack{})), Lbl'-LT-'valstack'-GT-'{}(\and{SortValStack{}} (X0:SortValStack{}, Y0:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWasmCell{}, \equals{SortWasmCell{}, R} (Val:SortWasmCell{}, Lbl'-LT-'wasm'-GT-'{}(K0:SortKCell{}, K1:SortValstackCell{}, K2:SortCurFrameCell{}, K3:SortModuleRegistryCell{}, K4:SortModuleIdsCell{}, K5:SortModuleInstancesCell{}, K6:SortNextModuleIdxCell{}, K7:SortMainStoreCell{}, K8:SortDeterministicMemoryGrowthCell{}, K9:SortNextFreshIdCell{}))) [functional{}()] // functional
  axiom{}\implies{SortWasmCell{}} (\and{SortWasmCell{}} (Lbl'-LT-'wasm'-GT-'{}(X0:SortKCell{}, X1:SortValstackCell{}, X2:SortCurFrameCell{}, X3:SortModuleRegistryCell{}, X4:SortModuleIdsCell{}, X5:SortModuleInstancesCell{}, X6:SortNextModuleIdxCell{}, X7:SortMainStoreCell{}, X8:SortDeterministicMemoryGrowthCell{}, X9:SortNextFreshIdCell{}), Lbl'-LT-'wasm'-GT-'{}(Y0:SortKCell{}, Y1:SortValstackCell{}, Y2:SortCurFrameCell{}, Y3:SortModuleRegistryCell{}, Y4:SortModuleIdsCell{}, Y5:SortModuleInstancesCell{}, Y6:SortNextModuleIdxCell{}, Y7:SortMainStoreCell{}, Y8:SortDeterministicMemoryGrowthCell{}, Y9:SortNextFreshIdCell{})), Lbl'-LT-'wasm'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortValstackCell{}} (X1:SortValstackCell{}, Y1:SortValstackCell{}), \and{SortCurFrameCell{}} (X2:SortCurFrameCell{}, Y2:SortCurFrameCell{}), \and{SortModuleRegistryCell{}} (X3:SortModuleRegistryCell{}, Y3:SortModuleRegistryCell{}), \and{SortModuleIdsCell{}} (X4:SortModuleIdsCell{}, Y4:SortModuleIdsCell{}), \and{SortModuleInstancesCell{}} (X5:SortModuleInstancesCell{}, Y5:SortModuleInstancesCell{}), \and{SortNextModuleIdxCell{}} (X6:SortNextModuleIdxCell{}, Y6:SortNextModuleIdxCell{}), \and{SortMainStoreCell{}} (X7:SortMainStoreCell{}, Y7:SortMainStoreCell{}), \and{SortDeterministicMemoryGrowthCell{}} (X8:SortDeterministicMemoryGrowthCell{}, Y8:SortDeterministicMemoryGrowthCell{}), \and{SortNextFreshIdCell{}} (X9:SortNextFreshIdCell{}, Y9:SortNextFreshIdCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWasmCellFragment{}, \equals{SortWasmCellFragment{}, R} (Val:SortWasmCellFragment{}, Lbl'-LT-'wasm'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortValstackCellOpt{}, K2:SortCurFrameCellOpt{}, K3:SortModuleRegistryCellOpt{}, K4:SortModuleIdsCellOpt{}, K5:SortModuleInstancesCellOpt{}, K6:SortNextModuleIdxCellOpt{}, K7:SortMainStoreCellOpt{}, K8:SortDeterministicMemoryGrowthCellOpt{}, K9:SortNextFreshIdCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortWasmCellFragment{}} (\and{SortWasmCellFragment{}} (Lbl'-LT-'wasm'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortValstackCellOpt{}, X2:SortCurFrameCellOpt{}, X3:SortModuleRegistryCellOpt{}, X4:SortModuleIdsCellOpt{}, X5:SortModuleInstancesCellOpt{}, X6:SortNextModuleIdxCellOpt{}, X7:SortMainStoreCellOpt{}, X8:SortDeterministicMemoryGrowthCellOpt{}, X9:SortNextFreshIdCellOpt{}), Lbl'-LT-'wasm'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortValstackCellOpt{}, Y2:SortCurFrameCellOpt{}, Y3:SortModuleRegistryCellOpt{}, Y4:SortModuleIdsCellOpt{}, Y5:SortModuleInstancesCellOpt{}, Y6:SortNextModuleIdxCellOpt{}, Y7:SortMainStoreCellOpt{}, Y8:SortDeterministicMemoryGrowthCellOpt{}, Y9:SortNextFreshIdCellOpt{})), Lbl'-LT-'wasm'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortValstackCellOpt{}} (X1:SortValstackCellOpt{}, Y1:SortValstackCellOpt{}), \and{SortCurFrameCellOpt{}} (X2:SortCurFrameCellOpt{}, Y2:SortCurFrameCellOpt{}), \and{SortModuleRegistryCellOpt{}} (X3:SortModuleRegistryCellOpt{}, Y3:SortModuleRegistryCellOpt{}), \and{SortModuleIdsCellOpt{}} (X4:SortModuleIdsCellOpt{}, Y4:SortModuleIdsCellOpt{}), \and{SortModuleInstancesCellOpt{}} (X5:SortModuleInstancesCellOpt{}, Y5:SortModuleInstancesCellOpt{}), \and{SortNextModuleIdxCellOpt{}} (X6:SortNextModuleIdxCellOpt{}, Y6:SortNextModuleIdxCellOpt{}), \and{SortMainStoreCellOpt{}} (X7:SortMainStoreCellOpt{}, Y7:SortMainStoreCellOpt{}), \and{SortDeterministicMemoryGrowthCellOpt{}} (X8:SortDeterministicMemoryGrowthCellOpt{}, Y8:SortDeterministicMemoryGrowthCellOpt{}), \and{SortNextFreshIdCellOpt{}} (X9:SortNextFreshIdCellOpt{}, Y9:SortNextFreshIdCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortByteMap{}, \equals{SortByteMap{}, R} (Val:SortByteMap{}, LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortByteMap{}} (\and{SortByteMap{}} (LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(X0:SortMap{}), LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Y0:SortMap{})), LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(K0:SortBytes{}, K1:SortEndianness{}, K2:SortSignedness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblFuncDefCellMap'Coln'in'Unds'keys{}(K0:SortFAddrCell{}, K1:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblGlobalInstCellMap'Coln'in'Unds'keys{}(K0:SortGAddrCell{}, K1:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(K0:SortInt{}, K1:SortEndianness{}, K2:SortSignedness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(K0:SortInt{}, K1:SortInt{}, K2:SortEndianness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblMemInstCellMap'Coln'in'Unds'keys{}(K0:SortMAddrCell{}, K1:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblModuleInstCellMap'Coln'in'Unds'keys{}(K0:SortModIdxCell{}, K1:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifierToken{}, \equals{SortIdentifierToken{}, R} (Val:SortIdentifierToken{}, LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblTabInstCellMap'Coln'in'Unds'keys{}(K0:SortTAddrCell{}, K1:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblWasmIntToken2String'LParUndsRParUnds'WASM-TEXT'Unds'String'Unds'WasmIntToken{}(K0:SortWasmIntToken{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVecType{}, \equals{SortVecType{}, R} (Val:SortVecType{}, Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortVecType{}} (\and{SortVecType{}} (Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(X0:SortValTypes{}), Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(Y0:SortValTypes{})), Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(K0:SortTableElemType{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Y0:SortTableElemType{}, Y1:SortElemSegment{})), Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(\and{SortTableElemType{}} (X0:SortTableElemType{}, Y0:SortTableElemType{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Y0:SortInlineExport{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(K0:SortValStack{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}(K0:SortBytes{}, K1:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncType{}, \equals{SortFuncType{}, R} (Val:SortFuncType{}, Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(K0:SortVecType{}, K1:SortVecType{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncType{}} (\and{SortFuncType{}} (Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(X0:SortVecType{}, X1:SortVecType{}), Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Y0:SortVecType{}, Y1:SortVecType{})), Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortVecType{}} (X1:SortVecType{}, Y1:SortVecType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(K0:SortAValType{}, K1:SortCvtOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(Y0:SortAValType{}, Y1:SortCvtOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(\and{SortAValType{}} (X0:SortAValType{}, Y0:SortAValType{}), \and{SortCvtOp{}} (X1:SortCvtOp{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(K0:SortFValType{}, K1:SortFBinOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFBinOp{}} (X1:SortFBinOp{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(K0:SortFValType{}, K1:SortFRelOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFRelOp{}} (X1:SortFRelOp{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(K0:SortFValType{}, K1:SortFUnOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFUnOp{}} (X1:SortFUnOp{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(K0:SortFValType{}, K1:SortLoadOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortLoadOpM{}} (X1:SortLoadOpM{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(K0:SortFValType{}, K1:SortStoreOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortStoreOpM{}} (X1:SortStoreOpM{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(K0:SortIValType{}, K1:SortIBinOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIBinOp{}} (X1:SortIBinOp{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(K0:SortIValType{}, K1:SortIRelOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIRelOp{}} (X1:SortIRelOp{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(K0:SortIValType{}, K1:SortIUnOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIUnOp{}} (X1:SortIUnOp{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(K0:SortIValType{}, K1:SortLoadOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortLoadOpM{}} (X1:SortLoadOpM{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(K0:SortIValType{}, K1:SortStoreOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortStoreOpM{}} (X1:SortStoreOpM{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(K0:SortIValType{}, K1:SortTestOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortTestOp{}} (X1:SortTestOp{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(K0:SortIValType{}, K1:SortLoadOp{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{})), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortLoadOp{}} (X1:SortLoadOp{}, Y1:SortLoadOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(K0:SortIValType{}, K1:SortStoreOp{}, K2:SortInt{}, K3:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{})), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortStoreOp{}} (X1:SortStoreOp{}, Y1:SortStoreOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortInt{}} (X3:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(K0:SortFValType{}, K1:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{})), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortNumber{}} (X1:SortNumber{}, Y1:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(K0:SortIValType{}, K1:SortWasmInt{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Y0:SortIValType{}, Y1:SortWasmInt{})), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortWasmInt{}} (X1:SortWasmInt{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(K0:SortVal{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortValStack{}} (\and{SortValStack{}} (Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(X0:SortVal{}, X1:SortValStack{}), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Y0:SortVal{}, Y1:SortValStack{})), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortValStack{}} (X1:SortValStack{}, Y1:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},K2:SortFuncDefCellMap{}),K3:SortFuncDefCellMap{}),Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},Lbl'Unds'FuncDefCellMap'Unds'{}(K2:SortFuncDefCellMap{},K3:SortFuncDefCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},K2:SortFuncDefCellMap{}),Lbl'Unds'FuncDefCellMap'Unds'{}(K2:SortFuncDefCellMap{},K1:SortFuncDefCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(K:SortFuncDefCellMap{},Lbl'Stop'FuncDefCellMap{}()),K:SortFuncDefCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Stop'FuncDefCellMap{}(),K:SortFuncDefCellMap{}),K:SortFuncDefCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},K2:SortGlobalInstCellMap{}),K3:SortGlobalInstCellMap{}),Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},Lbl'Unds'GlobalInstCellMap'Unds'{}(K2:SortGlobalInstCellMap{},K3:SortGlobalInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},K2:SortGlobalInstCellMap{}),Lbl'Unds'GlobalInstCellMap'Unds'{}(K2:SortGlobalInstCellMap{},K1:SortGlobalInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(K:SortGlobalInstCellMap{},Lbl'Stop'GlobalInstCellMap{}()),K:SortGlobalInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Stop'GlobalInstCellMap{}(),K:SortGlobalInstCellMap{}),K:SortGlobalInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},K2:SortMemInstCellMap{}),K3:SortMemInstCellMap{}),Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},Lbl'Unds'MemInstCellMap'Unds'{}(K2:SortMemInstCellMap{},K3:SortMemInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},K2:SortMemInstCellMap{}),Lbl'Unds'MemInstCellMap'Unds'{}(K2:SortMemInstCellMap{},K1:SortMemInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(K:SortMemInstCellMap{},Lbl'Stop'MemInstCellMap{}()),K:SortMemInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Stop'MemInstCellMap{}(),K:SortMemInstCellMap{}),K:SortMemInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},K2:SortModuleInstCellMap{}),K3:SortModuleInstCellMap{}),Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},Lbl'Unds'ModuleInstCellMap'Unds'{}(K2:SortModuleInstCellMap{},K3:SortModuleInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},K2:SortModuleInstCellMap{}),Lbl'Unds'ModuleInstCellMap'Unds'{}(K2:SortModuleInstCellMap{},K1:SortModuleInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(K:SortModuleInstCellMap{},Lbl'Stop'ModuleInstCellMap{}()),K:SortModuleInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Stop'ModuleInstCellMap{}(),K:SortModuleInstCellMap{}),K:SortModuleInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},K2:SortTabInstCellMap{}),K3:SortTabInstCellMap{}),Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},Lbl'Unds'TabInstCellMap'Unds'{}(K2:SortTabInstCellMap{},K3:SortTabInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},K2:SortTabInstCellMap{}),Lbl'Unds'TabInstCellMap'Unds'{}(K2:SortTabInstCellMap{},K1:SortTabInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(K:SortTabInstCellMap{},Lbl'Stop'TabInstCellMap{}()),K:SortTabInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Stop'TabInstCellMap{}(),K:SortTabInstCellMap{}),K:SortTabInstCellMap{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortOptionalId{}, \equals{SortOptionalId{}, R} (Val:SortOptionalId{}, Lbl'Unds'WASM-DATA'Unds'OptionalId{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDataString{}, \equals{SortDataString{}, R} (Val:SortDataString{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(K0:SortWasmString{}, K1:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataString{}} (\and{SortDataString{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(X0:SortWasmString{}, X1:SortDataString{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(Y0:SortWasmString{}, Y1:SortDataString{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortDataString{}} (X1:SortDataString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortElemSegment{}, \equals{SortElemSegment{}, R} (Val:SortElemSegment{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemSegment{}} (\and{SortElemSegment{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExternval{}, \equals{SortExternval{}, R} (Val:SortExternval{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(K0:SortAllocatedKind{}, K1:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortExternval{}} (\and{SortExternval{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(X0:SortAllocatedKind{}, X1:SortIndex{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Y0:SortAllocatedKind{}, Y1:SortIndex{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(\and{SortAllocatedKind{}} (X0:SortAllocatedKind{}, Y0:SortAllocatedKind{}), \and{SortIndex{}} (X1:SortIndex{}, Y1:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLimits{}} (\and{SortLimits{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(Y0:SortInt{}, Y1:SortInt{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(K0:SortValType{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortValTypes{}} (\and{SortValTypes{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(X0:SortValType{}, X1:SortValTypes{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(Y0:SortValType{}, Y1:SortValTypes{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(K0:SortInlineExport{}, K1:SortFuncSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Y0:SortInlineExport{}, Y1:SortFuncSpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortFuncSpec{}} (X1:SortFuncSpec{}, Y1:SortFuncSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Y0:SortInlineImport{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(K0:SortInlineImport{}, K1:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Y0:SortInlineImport{}, Y1:SortTypeUse{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(K0:SortInlineExport{}, K1:SortGlobalSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Y0:SortInlineExport{}, Y1:SortGlobalSpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Y1:SortGlobalSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Y0:SortInlineImport{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(K0:SortInlineImport{}, K1:SortTextFormatGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Y0:SortInlineImport{}, Y1:SortTextFormatGlobalType{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTextFormatGlobalType{}} (X1:SortTextFormatGlobalType{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(K0:SortInlineExport{}, K1:SortMemorySpec{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Y0:SortInlineExport{}, Y1:SortMemorySpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortMemorySpec{}} (X1:SortMemorySpec{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(K0:SortInlineImport{}, K1:SortMemType{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(X0:SortInlineImport{}, X1:SortMemType{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortMemType{}} (X1:SortMemType{}, Y1:SortMemType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(K0:SortInlineExport{}, K1:SortTableSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Y0:SortInlineExport{}, Y1:SortTableSpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortTableSpec{}} (X1:SortTableSpec{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(K0:SortInlineImport{}, K1:SortTableType{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(X0:SortInlineImport{}, X1:SortTableType{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTableType{}} (X1:SortTableType{}, Y1:SortTableType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(K0:SortDefn{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEmptyStmts{}, \equals{SortEmptyStmts{}, R} (Val:SortEmptyStmts{}, Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{}, K1:SortEmptyStmts{}))) [functional{}()] // functional
  axiom{}\implies{SortEmptyStmts{}} (\and{SortEmptyStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(X0:SortEmptyStmt{}, X1:SortEmptyStmts{}), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(Y0:SortEmptyStmt{}, Y1:SortEmptyStmts{})), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(\and{SortEmptyStmt{}} (X0:SortEmptyStmt{}, Y0:SortEmptyStmt{}), \and{SortEmptyStmts{}} (X1:SortEmptyStmts{}, Y1:SortEmptyStmts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(K0:SortTextFormatGlobalType{}, K1:SortInstr{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(X0:SortTextFormatGlobalType{}, X1:SortInstr{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{})), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(\and{SortTextFormatGlobalType{}} (X0:SortTextFormatGlobalType{}, Y0:SortTextFormatGlobalType{}), \and{SortInstr{}} (X1:SortInstr{}, Y1:SortInstr{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalType{}, \equals{SortGlobalType{}, R} (Val:SortGlobalType{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(K0:SortMut{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalType{}} (\and{SortGlobalType{}} (Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(X0:SortMut{}, X1:SortAValType{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(Y0:SortMut{}, Y1:SortAValType{})), Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(\and{SortMut{}} (X0:SortMut{}, Y0:SortMut{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(K0:SortInstr{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstrs{}} (\and{SortInstrs{}} (Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(X0:SortInstr{}, X1:SortInstrs{}), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Y0:SortInstr{}, Y1:SortInstrs{})), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(\and{SortInstr{}} (X0:SortInstr{}, Y0:SortInstr{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLoadOpM{}, \equals{SortLoadOpM{}, R} (Val:SortLoadOpM{}, Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(K0:SortLoadOp{}, K1:SortMemArg{}))) [functional{}()] // functional
  axiom{}\implies{SortLoadOpM{}} (\and{SortLoadOpM{}} (Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(X0:SortLoadOp{}, X1:SortMemArg{}), Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(Y0:SortLoadOp{}, Y1:SortMemArg{})), Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(\and{SortLoadOp{}} (X0:SortLoadOp{}, Y0:SortLoadOp{}), \and{SortMemArg{}} (X1:SortMemArg{}, Y1:SortMemArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalDecls{}, \equals{SortLocalDecls{}, R} (Val:SortLocalDecls{}, Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(K0:SortLocalDecl{}, K1:SortLocalDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecls{}} (\and{SortLocalDecls{}} (Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(X0:SortLocalDecl{}, X1:SortLocalDecls{}), Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Y0:SortLocalDecl{}, Y1:SortLocalDecls{})), Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(\and{SortLocalDecl{}} (X0:SortLocalDecl{}, Y0:SortLocalDecl{}), \and{SortLocalDecls{}} (X1:SortLocalDecls{}, Y1:SortLocalDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(K0:SortOffsetArg{}, K1:SortAlignArg{}))) [functional{}()] // functional
  axiom{}\implies{SortMemArg{}} (\and{SortMemArg{}} (Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(X0:SortOffsetArg{}, X1:SortAlignArg{}), Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(Y0:SortOffsetArg{}, Y1:SortAlignArg{})), Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(\and{SortOffsetArg{}} (X0:SortOffsetArg{}, Y0:SortOffsetArg{}), \and{SortAlignArg{}} (X1:SortAlignArg{}, Y1:SortAlignArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(K0:SortStmt{}, K1:SortStmts{}))) [functional{}()] // functional
  axiom{}\implies{SortStmts{}} (\and{SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(X0:SortStmt{}, X1:SortStmts{}), Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Y0:SortStmt{}, Y1:SortStmts{})), Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmts{}} (X1:SortStmts{}, Y1:SortStmts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreOpM{}, \equals{SortStoreOpM{}, R} (Val:SortStoreOpM{}, Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(K0:SortStoreOp{}, K1:SortMemArg{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreOpM{}} (\and{SortStoreOpM{}} (Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(X0:SortStoreOp{}, X1:SortMemArg{}), Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(Y0:SortStoreOp{}, Y1:SortMemArg{})), Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(\and{SortStoreOp{}} (X0:SortStoreOp{}, Y0:SortStoreOp{}), \and{SortMemArg{}} (X1:SortMemArg{}, Y1:SortMemArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableType{}, \equals{SortTableType{}, R} (Val:SortTableType{}, Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(K0:SortLimits{}, K1:SortTableElemType{}))) [functional{}()] // functional
  axiom{}\implies{SortTableType{}} (\and{SortTableType{}} (Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(X0:SortLimits{}, X1:SortTableElemType{}), Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(Y0:SortLimits{}, Y1:SortTableElemType{})), Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(\and{SortLimits{}} (X0:SortLimits{}, Y0:SortLimits{}), \and{SortTableElemType{}} (X1:SortTableElemType{}, Y1:SortTableElemType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeDecl{}, \equals{SortTypeDecl{}, R} (Val:SortTypeDecl{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(K0:SortTypeKeyWord{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}), Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Y0:SortTypeKeyWord{}, Y1:SortValTypes{})), Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(\and{SortTypeKeyWord{}} (X0:SortTypeKeyWord{}, Y0:SortTypeKeyWord{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}), Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(K0:SortTypeDecl{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecls{}} (\and{SortTypeDecls{}} (Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(X0:SortTypeDecl{}, X1:SortTypeDecls{}), Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Y0:SortTypeDecl{}, Y1:SortTypeDecls{})), Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(\and{SortTypeDecl{}} (X0:SortTypeDecl{}, Y0:SortTypeDecl{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(K0:SortTypeUse{}, K1:SortLocalDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortTypeUse{}, X1:SortLocalDecls{}, X2:SortInstrs{}), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{})), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}), \and{SortLocalDecls{}} (X1:SortLocalDecls{}, Y1:SortLocalDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(K0:SortInt{}, K1:SortByteMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlignArg{}, \equals{SortAlignArg{}, R} (Val:SortAlignArg{}, Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'WasmInt{}(K0:SortWasmInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlignArg{}} (\and{SortAlignArg{}} (Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'WasmInt{}(X0:SortWasmInt{}), Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'WasmInt{}(Y0:SortWasmInt{})), Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'WasmInt{}(\and{SortWasmInt{}} (X0:SortWasmInt{}, Y0:SortWasmInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeUse{}, K2:SortLocalDecls{}, K3:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeUse{}, X2:SortLocalDecls{}, X3:SortInstrs{}), Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeUse{}, Y2:SortLocalDecls{}, Y3:SortInstrs{})), Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}), \and{SortLocalDecls{}} (X2:SortLocalDecls{}, Y2:SortLocalDecls{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeUse{}, X2:SortLocalDecls{}, X3:SortInstrs{}), Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeUse{}, X2:SortLocalDecls{}, X3:SortInstrs{}), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeUse{}, X2:SortLocalDecls{}, X3:SortInstrs{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeUse{}, X2:SortLocalDecls{}, X3:SortInstrs{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(K0:SortOptionalId{}, K1:SortGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(Y0:SortOptionalId{}, Y1:SortGlobalType{})), Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalType{}} (X1:SortGlobalType{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(K0:SortOptionalId{}, K1:SortInt{}, K2:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{})), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortOptionalInt{}} (X2:SortOptionalInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(K0:SortOptionalId{}, K1:SortInt{}, K2:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{})), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortOptionalInt{}} (X2:SortOptionalInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(K0:SortOptionalId{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{})), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblatanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEndianness{}, \equals{SortEndianness{}, R} (Val:SortEndianness{}, LblbigEndianBytes{}())) [functional{}()] // functional
  axiom{}\not{SortEndianness{}} (\and{SortEndianness{}} (LblbigEndianBytes{}(), LbllittleEndianBytes{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortIdentifier{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}, Y4:SortInstrs{}, Y5:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(K0:SortTypeDecls{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{})), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(\and{SortTypeDecls{}} (X0:SortTypeDecls{}, Y0:SortTypeDecls{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(K0:SortVecType{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{})), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(K0:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{})), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(\and{SortElemSegment{}} (X0:SortElemSegment{}, Y0:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(K0:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{})), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lblconst'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lblconst'Unds'WASM-DATA'Unds'Mut{}(), Lblvar'Unds'WASM-DATA'Unds'Mut{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatAdd{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblcosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortContext{}} (\and{SortContext{}} (Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(X0:SortMap{}), Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(Y0:SortMap{})), Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(K0:SortIndex{}, K1:SortBytes{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(X0:SortIndex{}, X1:SortBytes{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(Y0:SortIndex{}, Y1:SortBytes{})), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortBytes{}} (X1:SortBytes{}, Y1:SortBytes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatAdd{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{})), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTestOp{}, \equals{SortTestOp{}, R} (Val:SortTestOp{}, Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblexpFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblexponentFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFValType{}, \equals{SortFValType{}, R} (Val:SortFValType{}, Lblf32'Unds'WASM-DATA'Unds'FValType{}())) [functional{}()] // functional
  axiom{}\not{SortFValType{}} (\and{SortFValType{}} (Lblf32'Unds'WASM-DATA'Unds'FValType{}(), Lblf64'Unds'WASM-DATA'Unds'FValType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFValType{}, \equals{SortFValType{}, R} (Val:SortFValType{}, Lblf64'Unds'WASM-DATA'Unds'FValType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatAdd{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatEq{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatMul{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatNe{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatSub{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatSub{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatSub{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFrame{}, \equals{SortFrame{}, R} (Val:SortFrame{}, Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(K0:SortInt{}, K1:SortValTypes{}, K2:SortValStack{}, K3:SortMap{}, K4:SortInt{}, K5:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFrame{}} (\and{SortFrame{}} (Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(X0:SortInt{}, X1:SortValTypes{}, X2:SortValStack{}, X3:SortMap{}, X4:SortInt{}, X5:SortMap{}), Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(Y0:SortInt{}, Y1:SortValTypes{}, Y2:SortValStack{}, Y3:SortMap{}, Y4:SortInt{}, Y5:SortMap{})), Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}), \and{SortValStack{}} (X2:SortValStack{}, Y2:SortValStack{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortInt{}} (X4:SortInt{}, Y4:SortInt{}), \and{SortMap{}} (X5:SortMap{}, Y5:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableElemType{}, \equals{SortTableElemType{}, R} (Val:SortTableElemType{}, Lblfuncref'Unds'WASM'Unds'TableElemType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{})), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIValType{}, \equals{SortIValType{}, R} (Val:SortIValType{}, Lbli32'Unds'WASM-DATA'Unds'IValType{}())) [functional{}()] // functional
  axiom{}\not{SortIValType{}} (\and{SortIValType{}} (Lbli32'Unds'WASM-DATA'Unds'IValType{}(), Lbli64'Unds'WASM-DATA'Unds'IValType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIValType{}, \equals{SortIValType{}, R} (Val:SortIValType{}, Lbli64'Unds'WASM-DATA'Unds'IValType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(K0:SortIdentifier{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}, K4:SortInstrs{}, K5:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}, Y4:SortInstrs{}, Y5:SortOptionalId{})), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}), \and{SortOptionalId{}} (X5:SortOptionalId{}, Y5:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(K0:SortTypeDecls{}, K1:SortInstrs{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{})), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(\and{SortTypeDecls{}} (X0:SortTypeDecls{}, Y0:SortTypeDecls{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(K0:SortInt{}, K1:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{})), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortVal{}} (X1:SortVal{}, Y1:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{})), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(\and{SortValStack{}} (X0:SortValStack{}, Y0:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabel{}, \equals{SortLabel{}, R} (Val:SortLabel{}, Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(K0:SortVecType{}, K1:SortInstrs{}, K2:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortLabel{}} (\and{SortLabel{}} (Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortValStack{}), Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortValStack{})), Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortValStack{}} (X2:SortValStack{}, Y2:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEndianness{}, \equals{SortEndianness{}, R} (Val:SortEndianness{}, LbllittleEndianBytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(K0:SortIValType{}, K1:SortInt{}, K2:SortInt{}, K3:SortSignedness{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{})), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortSignedness{}} (X3:SortSignedness{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecl{}, \equals{SortLocalDecl{}, R} (Val:SortLocalDecl{}, Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{}), Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(Y0:SortValTypes{})), Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{}), Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecl{}, \equals{SortLocalDecl{}, R} (Val:SortLocalDecl{}, Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(K0:SortIdentifier{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}), Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{})), Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortIdentifier{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(K0:SortTypeDecls{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{})), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(\and{SortTypeDecls{}} (X0:SortTypeDecls{}, Y0:SortTypeDecls{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCurFrameCellOpt{}, \equals{SortCurFrameCellOpt{}, R} (Val:SortCurFrameCellOpt{}, LblnoCurFrameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurModIdxCellOpt{}, \equals{SortCurModIdxCellOpt{}, R} (Val:SortCurModIdxCellOpt{}, LblnoCurModIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCellOpt{}, \equals{SortDeterministicMemoryGrowthCellOpt{}, R} (Val:SortDeterministicMemoryGrowthCellOpt{}, LblnoDeterministicMemoryGrowthCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExportsCellOpt{}, \equals{SortExportsCellOpt{}, R} (Val:SortExportsCellOpt{}, LblnoExportsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFAddrCellOpt{}, \equals{SortFAddrCellOpt{}, R} (Val:SortFAddrCellOpt{}, LblnoFAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFCodeCellOpt{}, \equals{SortFCodeCellOpt{}, R} (Val:SortFCodeCellOpt{}, LblnoFCodeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFLocalCellOpt{}, \equals{SortFLocalCellOpt{}, R} (Val:SortFLocalCellOpt{}, LblnoFLocalCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFModInstCellOpt{}, \equals{SortFModInstCellOpt{}, R} (Val:SortFModInstCellOpt{}, LblnoFModInstCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFTypeCellOpt{}, \equals{SortFTypeCellOpt{}, R} (Val:SortFTypeCellOpt{}, LblnoFTypeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncAddrsCellOpt{}, \equals{SortFuncAddrsCellOpt{}, R} (Val:SortFuncAddrsCellOpt{}, LblnoFuncAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncIdsCellOpt{}, \equals{SortFuncIdsCellOpt{}, R} (Val:SortFuncIdsCellOpt{}, LblnoFuncIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncsCellOpt{}, \equals{SortFuncsCellOpt{}, R} (Val:SortFuncsCellOpt{}, LblnoFuncsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGAddrCellOpt{}, \equals{SortGAddrCellOpt{}, R} (Val:SortGAddrCellOpt{}, LblnoGAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGMutCellOpt{}, \equals{SortGMutCellOpt{}, R} (Val:SortGMutCellOpt{}, LblnoGMutCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGValueCellOpt{}, \equals{SortGValueCellOpt{}, R} (Val:SortGValueCellOpt{}, LblnoGValueCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobIdsCellOpt{}, \equals{SortGlobIdsCellOpt{}, R} (Val:SortGlobIdsCellOpt{}, LblnoGlobIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobalAddrsCellOpt{}, \equals{SortGlobalAddrsCellOpt{}, R} (Val:SortGlobalAddrsCellOpt{}, LblnoGlobalAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobalsCellOpt{}, \equals{SortGlobalsCellOpt{}, R} (Val:SortGlobalsCellOpt{}, LblnoGlobalsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabelDepthCellOpt{}, \equals{SortLabelDepthCellOpt{}, R} (Val:SortLabelDepthCellOpt{}, LblnoLabelDepthCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabelIdsCellOpt{}, \equals{SortLabelIdsCellOpt{}, R} (Val:SortLabelIdsCellOpt{}, LblnoLabelIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocalsCellOpt{}, \equals{SortLocalsCellOpt{}, R} (Val:SortLocalsCellOpt{}, LblnoLocalsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMAddrCellOpt{}, \equals{SortMAddrCellOpt{}, R} (Val:SortMAddrCellOpt{}, LblnoMAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMainStoreCellOpt{}, \equals{SortMainStoreCellOpt{}, R} (Val:SortMainStoreCellOpt{}, LblnoMainStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMdataCellOpt{}, \equals{SortMdataCellOpt{}, R} (Val:SortMdataCellOpt{}, LblnoMdataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemAddrsCellOpt{}, \equals{SortMemAddrsCellOpt{}, R} (Val:SortMemAddrsCellOpt{}, LblnoMemAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemIdsCellOpt{}, \equals{SortMemIdsCellOpt{}, R} (Val:SortMemIdsCellOpt{}, LblnoMemIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemsCellOpt{}, \equals{SortMemsCellOpt{}, R} (Val:SortMemsCellOpt{}, LblnoMemsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMmaxCellOpt{}, \equals{SortMmaxCellOpt{}, R} (Val:SortMmaxCellOpt{}, LblnoMmaxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModIdxCellOpt{}, \equals{SortModIdxCellOpt{}, R} (Val:SortModIdxCellOpt{}, LblnoModIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleIdsCellOpt{}, \equals{SortModuleIdsCellOpt{}, R} (Val:SortModuleIdsCellOpt{}, LblnoModuleIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleInstancesCellOpt{}, \equals{SortModuleInstancesCellOpt{}, R} (Val:SortModuleInstancesCellOpt{}, LblnoModuleInstancesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleRegistryCellOpt{}, \equals{SortModuleRegistryCellOpt{}, R} (Val:SortModuleRegistryCellOpt{}, LblnoModuleRegistryCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMsizeCellOpt{}, \equals{SortMsizeCellOpt{}, R} (Val:SortMsizeCellOpt{}, LblnoMsizeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFreshIdCellOpt{}, \equals{SortNextFreshIdCellOpt{}, R} (Val:SortNextFreshIdCellOpt{}, LblnoNextFreshIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFuncAddrCellOpt{}, \equals{SortNextFuncAddrCellOpt{}, R} (Val:SortNextFuncAddrCellOpt{}, LblnoNextFuncAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFuncIdxCellOpt{}, \equals{SortNextFuncIdxCellOpt{}, R} (Val:SortNextFuncIdxCellOpt{}, LblnoNextFuncIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextGlobAddrCellOpt{}, \equals{SortNextGlobAddrCellOpt{}, R} (Val:SortNextGlobAddrCellOpt{}, LblnoNextGlobAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextGlobIdxCellOpt{}, \equals{SortNextGlobIdxCellOpt{}, R} (Val:SortNextGlobIdxCellOpt{}, LblnoNextGlobIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextMemAddrCellOpt{}, \equals{SortNextMemAddrCellOpt{}, R} (Val:SortNextMemAddrCellOpt{}, LblnoNextMemAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextModuleIdxCellOpt{}, \equals{SortNextModuleIdxCellOpt{}, R} (Val:SortNextModuleIdxCellOpt{}, LblnoNextModuleIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextTabAddrCellOpt{}, \equals{SortNextTabAddrCellOpt{}, R} (Val:SortNextTabAddrCellOpt{}, LblnoNextTabAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextTypeIdxCellOpt{}, \equals{SortNextTypeIdxCellOpt{}, R} (Val:SortNextTypeIdxCellOpt{}, LblnoNextTypeIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTAddrCellOpt{}, \equals{SortTAddrCellOpt{}, R} (Val:SortTAddrCellOpt{}, LblnoTAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabAddrsCellOpt{}, \equals{SortTabAddrsCellOpt{}, R} (Val:SortTabAddrsCellOpt{}, LblnoTabAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabIdsCellOpt{}, \equals{SortTabIdsCellOpt{}, R} (Val:SortTabIdsCellOpt{}, LblnoTabIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabsCellOpt{}, \equals{SortTabsCellOpt{}, R} (Val:SortTabsCellOpt{}, LblnoTabsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTdataCellOpt{}, \equals{SortTdataCellOpt{}, R} (Val:SortTdataCellOpt{}, LblnoTdataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTmaxCellOpt{}, \equals{SortTmaxCellOpt{}, R} (Val:SortTmaxCellOpt{}, LblnoTmaxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTsizeCellOpt{}, \equals{SortTsizeCellOpt{}, R} (Val:SortTsizeCellOpt{}, LblnoTsizeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeIdsCellOpt{}, \equals{SortTypeIdsCellOpt{}, R} (Val:SortTypeIdsCellOpt{}, LblnoTypeIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypesCellOpt{}, \equals{SortTypesCellOpt{}, R} (Val:SortTypesCellOpt{}, LblnoTypesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValstackCellOpt{}, \equals{SortValstackCellOpt{}, R} (Val:SortValstackCellOpt{}, LblnoValstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortWasmCellOpt{}, \equals{SortWasmCellOpt{}, R} (Val:SortWasmCellOpt{}, LblnoWasmCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblnop'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOffsetArg{}, \equals{SortOffsetArg{}, R} (Val:SortOffsetArg{}, Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(K0:SortWasmInt{}))) [functional{}()] // functional
  axiom{}\implies{SortOffsetArg{}} (\and{SortOffsetArg{}} (Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(X0:SortWasmInt{}), Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(Y0:SortWasmInt{})), Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(\and{SortWasmInt{}} (X0:SortWasmInt{}, Y0:SortWasmInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeKeyWord{}, \equals{SortTypeKeyWord{}, R} (Val:SortTypeKeyWord{}, Lblparam'Unds'WASM'Unds'TypeKeyWord{}())) [functional{}()] // functional
  axiom{}\not{SortTypeKeyWord{}} (\and{SortTypeKeyWord{}} (Lblparam'Unds'WASM'Unds'TypeKeyWord{}(), Lblresult'Unds'WASM'Unds'TypeKeyWord{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecl{}, \equals{SortTypeDecl{}, R} (Val:SortTypeDecl{}, Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(K0:SortIdentifier{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}), Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{})), Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeKeyWord{}, \equals{SortTypeKeyWord{}, R} (Val:SortTypeKeyWord{}, Lblresult'Unds'WASM'Unds'TypeKeyWord{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblreturn'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblreturn'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblreverseBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblselect'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblselect'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSignedness{}, \equals{SortSignedness{}, R} (Val:SortSignedness{}, LblsignedBytes{}())) [functional{}()] // functional
  axiom{}\not{SortSignedness{}} (\and{SortSignedness{}} (LblsignedBytes{}(), LblunsignedBytes{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblsinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(K0:SortOptionalId{}, K1:SortDefns{}, K2:SortDefns{}, K3:SortDefns{}, K4:SortDefns{}, K5:SortDefns{}, K6:SortDefns{}, K7:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}, X2:SortDefns{}, X3:SortDefns{}, X4:SortDefns{}, X5:SortDefns{}, X6:SortDefns{}, X7:SortDefns{}), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{})), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}), \and{SortDefns{}} (X2:SortDefns{}, Y2:SortDefns{}), \and{SortDefns{}} (X3:SortDefns{}, Y3:SortDefns{}), \and{SortDefns{}} (X4:SortDefns{}, Y4:SortDefns{}), \and{SortDefns{}} (X5:SortDefns{}, Y5:SortDefns{}), \and{SortDefns{}} (X6:SortDefns{}, Y6:SortDefns{}), \and{SortDefns{}} (X7:SortDefns{}, Y7:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore16'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), Lblstore32'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), Lblstore8'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), Lblstore'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore32'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore32'Unds'WASM'Unds'StoreOp{}(), Lblstore8'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore32'Unds'WASM'Unds'StoreOp{}(), Lblstore'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore8'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore8'Unds'WASM'Unds'StoreOp{}(), Lblstore'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(K0:SortInt{}, K1:SortInt{}, K2:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{})), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortNumber{}} (X2:SortNumber{}, Y2:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbltrap'Unds'WASM'Unds'Instr{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblundefined'Unds'WASM-DATA'Unds'Val{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncType{}, \equals{SortFuncType{}, R} (Val:SortFuncType{}, LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(K0:SortFuncType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSignedness{}, \equals{SortSignedness{}, R} (Val:SortSignedness{}, LblunsignedBytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lblvar'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNValType{}, \equals{SortNValType{}, R} (Val:SortNValType{}, Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(K0:SortIdentifier{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortNValType{}} (\and{SortNValType{}} (Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}), Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{})), Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortTmaxCell{}} (\exists{SortTmaxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'tmax'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortTmaxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNValType{}} (\exists{SortNValType{}} (X0:SortIdentifier{}, \exists{SortNValType{}} (X1:SortAValType{}, Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}))), \bottom{SortNValType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortInlineExport{}, \exists{SortFuncSpec{}} (X1:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}))), \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortInlineImport{}, \exists{SortFuncSpec{}} (X1:SortTypeUse{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}))), \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortTypeUse{}, \exists{SortFuncSpec{}} (X1:SortLocalDecls{}, \exists{SortFuncSpec{}} (X2:SortInstrs{}, Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortTypeUse{}, X1:SortLocalDecls{}, X2:SortInstrs{})))), \bottom{SortFuncSpec{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortIVal{}} (\exists{SortIVal{}} (X0:SortIValType{}, \exists{SortIVal{}} (X1:SortInt{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}))), \bottom{SortIVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMsizeCell{}} (\exists{SortMsizeCell{}} (X0:SortInt{}, Lbl'-LT-'msize'-GT-'{}(X0:SortInt{})), \bottom{SortMsizeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCellOpt{}} (LblnoMainStoreCell{}(), \or{SortMainStoreCellOpt{}} (\exists{SortMainStoreCellOpt{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortMainStoreCellOpt{}} (Val:SortMainStoreCell{})), \bottom{SortMainStoreCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFLocalCellOpt{}} (LblnoFLocalCell{}(), \or{SortFLocalCellOpt{}} (\exists{SortFLocalCellOpt{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortFLocalCellOpt{}} (Val:SortFLocalCell{})), \bottom{SortFLocalCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLabelIdsCellOpt{}} (LblnoLabelIdsCell{}(), \or{SortLabelIdsCellOpt{}} (\exists{SortLabelIdsCellOpt{}} (Val:SortLabelIdsCell{}, inj{SortLabelIdsCell{}, SortLabelIdsCellOpt{}} (Val:SortLabelIdsCell{})), \bottom{SortLabelIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTableDefn{}} (\exists{SortTableDefn{}} (X0:SortOptionalId{}, \exists{SortTableDefn{}} (X1:SortTableSpec{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}))), \bottom{SortTableDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFCodeCellOpt{}} (LblnoFCodeCell{}(), \or{SortFCodeCellOpt{}} (\exists{SortFCodeCellOpt{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortFCodeCellOpt{}} (Val:SortFCodeCell{})), \bottom{SortFCodeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCellMap{}} (\exists{SortTabInstCellMap{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortTabInstCellMap{}} (Val:SortTabInstCell{})), \bottom{SortTabInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdentifier{}} (\exists{SortIdentifier{}} (X0:SortInt{}, Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{})), \or{SortIdentifier{}} (Lbl'Stop'MemoryIdentifier'Unds'WASM-TEXT'Unds'Identifier{}(), \or{SortIdentifier{}} (Lbl'Stop'TableIdentifier'Unds'WASM-TEXT'Unds'Identifier{}(), \or{SortIdentifier{}} (\exists{SortIdentifier{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortIdentifier{}} (Val:SortIdentifierToken{})), \bottom{SortIdentifier{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortIndex{}} (Val:SortIdentifier{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortWasmInt{}, inj{SortWasmInt{}, SortIndex{}} (Val:SortWasmInt{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortInt{}, inj{SortInt{}, SortIndex{}} (Val:SortInt{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortIndex{}} (Val:SortIdentifierToken{})), \bottom{SortIndex{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortKItem{}} (Val:SortTmaxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNValType{}, inj{SortNValType{}, SortKItem{}} (Val:SortNValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncSpec{}, inj{SortFuncSpec{}, SortKItem{}} (Val:SortFuncSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIVal{}, inj{SortIVal{}, SortKItem{}} (Val:SortIVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortKItem{}} (Val:SortMsizeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCellOpt{}, inj{SortMainStoreCellOpt{}, SortKItem{}} (Val:SortMainStoreCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFLocalCellOpt{}, inj{SortFLocalCellOpt{}, SortKItem{}} (Val:SortFLocalCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelIdsCellOpt{}, inj{SortLabelIdsCellOpt{}, SortKItem{}} (Val:SortLabelIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortKItem{}} (Val:SortTableDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFCodeCellOpt{}, inj{SortFCodeCellOpt{}, SortKItem{}} (Val:SortFCodeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCellMap{}, inj{SortTabInstCellMap{}, SortKItem{}} (Val:SortTabInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortKItem{}} (Val:SortIdentifier{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIndex{}, inj{SortIndex{}, SortKItem{}} (Val:SortIndex{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortKItem{}} (Val:SortMemAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTypeIdxCellOpt{}, inj{SortNextTypeIdxCellOpt{}, SortKItem{}} (Val:SortNextTypeIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModIdxCellOpt{}, inj{SortModIdxCellOpt{}, SortKItem{}} (Val:SortModIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortKItem{}} (Val:SortLocalsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExternval{}, inj{SortExternval{}, SortKItem{}} (Val:SortExternval{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalDecls{}, inj{SortLocalDecls{}, SortKItem{}} (Val:SortLocalDecls{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortKItem{}} (Val:SortImportDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDataString{}, inj{SortDataString{}, SortKItem{}} (Val:SortDataString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableElemType{}, inj{SortTableElemType{}, SortKItem{}} (Val:SortTableElemType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportsCellOpt{}, inj{SortExportsCellOpt{}, SortKItem{}} (Val:SortExportsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortKItem{}} (Val:SortGValueCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAlloc{}, inj{SortAlloc{}, SortKItem{}} (Val:SortAlloc{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncAddrsCellOpt{}, inj{SortFuncAddrsCellOpt{}, SortKItem{}} (Val:SortFuncAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElemSegment{}, inj{SortElemSegment{}, SortKItem{}} (Val:SortElemSegment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortKItem{}} (Val:SortGAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGMutCellOpt{}, inj{SortGMutCellOpt{}, SortKItem{}} (Val:SortGMutCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortKItem{}} (Val:SortCurFrameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemIdsCellOpt{}, inj{SortMemIdsCellOpt{}, SortKItem{}} (Val:SortMemIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFreshIdCell{}, inj{SortNextFreshIdCell{}, SortKItem{}} (Val:SortNextFreshIdCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIUnOp{}, inj{SortIUnOp{}, SortKItem{}} (Val:SortIUnOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCellFragment{}, inj{SortFuncsCellFragment{}, SortKItem{}} (Val:SortFuncsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortKItem{}} (Val:SortGlobIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortKItem{}} (Val:SortNextGlobIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalId{}, inj{SortOptionalId{}, SortKItem{}} (Val:SortOptionalId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemorySpec{}, inj{SortMemorySpec{}, SortKItem{}} (Val:SortMemorySpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortKItem{}} (Val:SortWasmCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCellFragment{}, inj{SortCurFrameCellFragment{}, SortKItem{}} (Val:SortCurFrameCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortKItem{}} (Val:SortGlobalsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextMemAddrCellOpt{}, inj{SortNextMemAddrCellOpt{}, SortKItem{}} (Val:SortNextMemAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabAddrsCellOpt{}, inj{SortTabAddrsCellOpt{}, SortKItem{}} (Val:SortTabAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOffset{}, inj{SortOffset{}, SortKItem{}} (Val:SortOffset{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextModuleIdxCellOpt{}, inj{SortNextModuleIdxCellOpt{}, SortKItem{}} (Val:SortNextModuleIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortKItem{}} (Val:SortGlobalDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}} (Val:SortDeterministicMemoryGrowthCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDecls{}, inj{SortTypeDecls{}, SortKItem{}} (Val:SortTypeDecls{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortKItem{}} (Val:SortTAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTestOp{}, inj{SortTestOp{}, SortKItem{}} (Val:SortTestOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelIdsCell{}, inj{SortLabelIdsCell{}, SortKItem{}} (Val:SortLabelIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFRelOp{}, inj{SortFRelOp{}, SortKItem{}} (Val:SortFRelOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortKItem{}} (Val:SortModuleInstancesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMAddrCellOpt{}, inj{SortMAddrCellOpt{}, SortKItem{}} (Val:SortMAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtOp{}, inj{SortCvtOp{}, SortKItem{}} (Val:SortCvtOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCellOpt{}, inj{SortModuleInstancesCellOpt{}, SortKItem{}} (Val:SortModuleInstancesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalSpec{}, inj{SortGlobalSpec{}, SortKItem{}} (Val:SortGlobalSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortKItem{}} (Val:SortNextTypeIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortKItem{}} (Val:SortFuncDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCellFragment{}, inj{SortWasmCellFragment{}, SortKItem{}} (Val:SortWasmCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortKItem{}} (Val:SortTabInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortKItem{}} (Val:SortTypeDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLoadOp{}, inj{SortLoadOp{}, SortKItem{}} (Val:SortLoadOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstr{}, inj{SortInstr{}, SortKItem{}} (Val:SortInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortKItem{}} (Val:SortElemDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFVal{}, inj{SortFVal{}, SortKItem{}} (Val:SortFVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalDecl{}, inj{SortLocalDecl{}, SortKItem{}} (Val:SortLocalDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCellMap{}, inj{SortMemInstCellMap{}, SortKItem{}} (Val:SortMemInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTabAddrCellOpt{}, inj{SortNextTabAddrCellOpt{}, SortKItem{}} (Val:SortNextTabAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortKItem{}} (Val:SortMemoryDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemArg{}, inj{SortMemArg{}, SortKItem{}} (Val:SortMemArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortKItem{}} (Val:SortFuncDefCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmString{}, inj{SortWasmString{}, SortKItem{}} (Val:SortWasmString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvti32Op{}, inj{SortCvti32Op{}, SortKItem{}} (Val:SortCvti32Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncIdxCellOpt{}, inj{SortNextFuncIdxCellOpt{}, SortKItem{}} (Val:SortNextFuncIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemAddrsCellOpt{}, inj{SortMemAddrsCellOpt{}, SortKItem{}} (Val:SortMemAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortKItem{}} (Val:SortMAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortKItem{}} (Val:SortNextFuncIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortKItem{}} (Val:SortCurModIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmInt{}, inj{SortWasmInt{}, SortKItem{}} (Val:SortWasmInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleRegistryCellOpt{}, inj{SortModuleRegistryCellOpt{}, SortKItem{}} (Val:SortModuleRegistryCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortKItem{}} (Val:SortModuleRegistryCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIBinOp{}, inj{SortIBinOp{}, SortKItem{}} (Val:SortIBinOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortKItem{}} (Val:SortStartDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCellOpt{}, inj{SortFuncsCellOpt{}, SortKItem{}} (Val:SortFuncsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTdataCellOpt{}, inj{SortTdataCellOpt{}, SortKItem{}} (Val:SortTdataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCellFragment{}, inj{SortTabInstCellFragment{}, SortKItem{}} (Val:SortTabInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortContext{}, inj{SortContext{}, SortKItem{}} (Val:SortContext{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreOpM{}, inj{SortStoreOpM{}, SortKItem{}} (Val:SortStoreOpM{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreOp{}, inj{SortStoreOp{}, SortKItem{}} (Val:SortStoreOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortKItem{}} (Val:SortFuncAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMmaxCellOpt{}, inj{SortMmaxCellOpt{}, SortKItem{}} (Val:SortMmaxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeterministicMemoryGrowthCellOpt{}, inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}} (Val:SortDeterministicMemoryGrowthCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTmaxCellOpt{}, inj{SortTmaxCellOpt{}, SortKItem{}} (Val:SortTmaxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAlignArg{}, inj{SortAlignArg{}, SortKItem{}} (Val:SortAlignArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortKItem{}} (Val:SortMemInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalType{}, inj{SortGlobalType{}, SortKItem{}} (Val:SortGlobalType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleDecl{}, inj{SortModuleDecl{}, SortKItem{}} (Val:SortModuleDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFModInstCellOpt{}, inj{SortFModInstCellOpt{}, SortKItem{}} (Val:SortFModInstCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSignedness{}, inj{SortSignedness{}, SortKItem{}} (Val:SortSignedness{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGValueCellOpt{}, inj{SortGValueCellOpt{}, SortKItem{}} (Val:SortGValueCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCellOpt{}, inj{SortWasmCellOpt{}, SortKItem{}} (Val:SortWasmCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCellMap{}, inj{SortGlobalInstCellMap{}, SortKItem{}} (Val:SortGlobalInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValType{}, inj{SortValType{}, SortKItem{}} (Val:SortValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCell{}, inj{SortCell{}, SortKItem{}} (Val:SortCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortKItem{}} (Val:SortMemIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNumber{}, inj{SortNumber{}, SortKItem{}} (Val:SortNumber{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFValType{}, inj{SortFValType{}, SortKItem{}} (Val:SortFValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeKeyWord{}, inj{SortTypeKeyWord{}, SortKItem{}} (Val:SortTypeKeyWord{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortImportDesc{}, inj{SortImportDesc{}, SortKItem{}} (Val:SortImportDesc{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCellFragment{}, inj{SortMemInstCellFragment{}, SortKItem{}} (Val:SortMemInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortKItem{}} (Val:SortExportsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobAddrCellOpt{}, inj{SortNextGlobAddrCellOpt{}, SortKItem{}} (Val:SortNextGlobAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMInt{}, inj{SortMInt{}, SortKItem{}} (Val:SortMInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortKItem{}} (Val:SortNextGlobAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortKItem{}} (Val:SortTdataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCellMap{}, inj{SortFuncDefCellMap{}, SortKItem{}} (Val:SortFuncDefCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortKItem{}} (Val:SortNextModuleIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmts{}, inj{SortStmts{}, SortKItem{}} (Val:SortStmts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGAddrCellOpt{}, inj{SortGAddrCellOpt{}, SortKItem{}} (Val:SortGAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortKItem{}} (Val:SortNextTabAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEndianness{}, inj{SortEndianness{}, SortKItem{}} (Val:SortEndianness{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortKItem{}} (Val:SortFAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortKItem{}} (Val:SortNextFuncAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIRelOp{}, inj{SortIRelOp{}, SortKItem{}} (Val:SortIRelOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtf64Op{}, inj{SortCvtf64Op{}, SortKItem{}} (Val:SortCvtf64Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCellFragment{}, inj{SortTabsCellFragment{}, SortKItem{}} (Val:SortTabsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortKItem{}} (Val:SortValstackCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemType{}, inj{SortMemType{}, SortKItem{}} (Val:SortMemType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabel{}, inj{SortLabel{}, SortKItem{}} (Val:SortLabel{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeIdsCellOpt{}, inj{SortTypeIdsCellOpt{}, SortKItem{}} (Val:SortTypeIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelDepthCellOpt{}, inj{SortLabelDepthCellOpt{}, SortKItem{}} (Val:SortLabelDepthCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCellMap{}, inj{SortModuleInstCellMap{}, SortKItem{}} (Val:SortModuleInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeUse{}, inj{SortTypeUse{}, SortKItem{}} (Val:SortTypeUse{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCellFragment{}, inj{SortGlobalsCellFragment{}, SortKItem{}} (Val:SortGlobalsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabIdsCellOpt{}, inj{SortTabIdsCellOpt{}, SortKItem{}} (Val:SortTabIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLoadOpM{}, inj{SortLoadOpM{}, SortKItem{}} (Val:SortLoadOpM{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAValType{}, inj{SortAValType{}, SortKItem{}} (Val:SortAValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortKItem{}} (Val:SortGlobalInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortKItem{}} (Val:SortPlainInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurModIdxCellOpt{}, inj{SortCurModIdxCellOpt{}, SortKItem{}} (Val:SortCurModIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortKItem{}} (Val:SortFuncsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFTypeCellOpt{}, inj{SortFTypeCellOpt{}, SortKItem{}} (Val:SortFTypeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLimits{}, inj{SortLimits{}, SortKItem{}} (Val:SortLimits{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTAddrCellOpt{}, inj{SortTAddrCellOpt{}, SortKItem{}} (Val:SortTAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCellFragment{}, inj{SortModuleInstCellFragment{}, SortKItem{}} (Val:SortModuleInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCellFragment{}, inj{SortModuleInstancesCellFragment{}, SortKItem{}} (Val:SortModuleInstancesCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortKItem{}} (Val:SortModuleIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortKItem{}} (Val:SortFTypeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortKItem{}} (Val:SortMainStoreCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortKItem{}} (Val:SortTsizeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCellFragment{}, inj{SortMainStoreCellFragment{}, SortKItem{}} (Val:SortMainStoreCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortKItem{}} (Val:SortFuncIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortKItem{}} (Val:SortFLocalCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortKItem{}} (Val:SortTabsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmStringToken{}, inj{SortWasmStringToken{}, SortKItem{}} (Val:SortWasmStringToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortKItem{}} (Val:SortNextMemAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIValType{}, inj{SortIValType{}, SortKItem{}} (Val:SortIValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCellOpt{}, inj{SortMemsCellOpt{}, SortKItem{}} (Val:SortMemsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobIdsCellOpt{}, inj{SortGlobIdsCellOpt{}, SortKItem{}} (Val:SortGlobIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortKItem{}} (Val:SortMdataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableSpec{}, inj{SortTableSpec{}, SortKItem{}} (Val:SortTableSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortKItem{}} (Val:SortFCodeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCellOpt{}, inj{SortCurFrameCellOpt{}, SortKItem{}} (Val:SortCurFrameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortKItem{}} (Val:SortFModInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortKItem{}} (Val:SortTabAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefn{}, inj{SortDefn{}, SortKItem{}} (Val:SortDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortKItem{}} (Val:SortFoldedInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFreshIdCellOpt{}, inj{SortNextFreshIdCellOpt{}, SortKItem{}} (Val:SortNextFreshIdCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInlineImport{}, inj{SortInlineImport{}, SortKItem{}} (Val:SortInlineImport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValstackCellOpt{}, inj{SortValstackCellOpt{}, SortKItem{}} (Val:SortValstackCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdsCellOpt{}, inj{SortFuncIdsCellOpt{}, SortKItem{}} (Val:SortFuncIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAllocatedKind{}, inj{SortAllocatedKind{}, SortKItem{}} (Val:SortAllocatedKind{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortKItem{}} (Val:SortEmptyStmts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCellFragment{}, inj{SortMemsCellFragment{}, SortKItem{}} (Val:SortMemsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFBinOp{}, inj{SortFBinOp{}, SortKItem{}} (Val:SortFBinOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalsCellOpt{}, inj{SortLocalsCellOpt{}, SortKItem{}} (Val:SortLocalsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortKItem{}} (Val:SortDataDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncType{}, inj{SortFuncType{}, SortKItem{}} (Val:SortFuncType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortKItem{}} (Val:SortTypeIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCellOpt{}, inj{SortTabsCellOpt{}, SortKItem{}} (Val:SortTabsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortKItem{}} (Val:SortGMutCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortKItem{}} (Val:SortTabIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFrame{}, inj{SortFrame{}, SortKItem{}} (Val:SortFrame{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortKItem{}} (Val:SortInstrs{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortKItem{}} (Val:SortModIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFAddrCellOpt{}, inj{SortFAddrCellOpt{}, SortKItem{}} (Val:SortFAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortKItem{}} (Val:SortBlockInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalAddrsCellOpt{}, inj{SortGlobalAddrsCellOpt{}, SortKItem{}} (Val:SortGlobalAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVecType{}, inj{SortVecType{}, SortKItem{}} (Val:SortVecType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortKItem{}} (Val:SortIdentifierToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobIdxCellOpt{}, inj{SortNextGlobIdxCellOpt{}, SortKItem{}} (Val:SortNextGlobIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValStack{}, inj{SortValStack{}, SortKItem{}} (Val:SortValStack{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMut{}, inj{SortMut{}, SortKItem{}} (Val:SortMut{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortKItem{}} (Val:SortModuleInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortKItem{}} (Val:SortWasmIntToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCellFragment{}, inj{SortFuncDefCellFragment{}, SortKItem{}} (Val:SortFuncDefCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOffsetArg{}, inj{SortOffsetArg{}, SortKItem{}} (Val:SortOffsetArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTsizeCellOpt{}, inj{SortTsizeCellOpt{}, SortKItem{}} (Val:SortTsizeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCellFragment{}, inj{SortGlobalInstCellFragment{}, SortKItem{}} (Val:SortGlobalInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDecl{}, inj{SortTypeDecl{}, SortKItem{}} (Val:SortTypeDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtf32Op{}, inj{SortCvtf32Op{}, SortKItem{}} (Val:SortCvtf32Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefns{}, inj{SortDefns{}, SortKItem{}} (Val:SortDefns{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelDepthCell{}, inj{SortLabelDepthCell{}, SortKItem{}} (Val:SortLabelDepthCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMsizeCellOpt{}, inj{SortMsizeCellOpt{}, SortKItem{}} (Val:SortMsizeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortKItem{}} (Val:SortMemsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFUnOp{}, inj{SortFUnOp{}, SortKItem{}} (Val:SortFUnOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInlineExport{}, inj{SortInlineExport{}, SortKItem{}} (Val:SortInlineExport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValTypes{}, inj{SortValTypes{}, SortKItem{}} (Val:SortValTypes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortKItem{}} (Val:SortTypesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortKItem{}} (Val:SortGlobalAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBytes{}, inj{SortBytes{}, SortKItem{}} (Val:SortBytes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMdataCellOpt{}, inj{SortMdataCellOpt{}, SortKItem{}} (Val:SortMdataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortKItem{}} (Val:SortEmptyStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortKItem{}} (Val:SortExportDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdsCellOpt{}, inj{SortModuleIdsCellOpt{}, SortKItem{}} (Val:SortModuleIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCellOpt{}, inj{SortGlobalsCellOpt{}, SortKItem{}} (Val:SortGlobalsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncAddrCellOpt{}, inj{SortNextFuncAddrCellOpt{}, SortKItem{}} (Val:SortNextFuncAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableType{}, inj{SortTableType{}, SortKItem{}} (Val:SortTableType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalInt{}, inj{SortOptionalInt{}, SortKItem{}} (Val:SortOptionalInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortByteMap{}, inj{SortByteMap{}, SortKItem{}} (Val:SortByteMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesCellOpt{}, inj{SortTypesCellOpt{}, SortKItem{}} (Val:SortTypesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvti64Op{}, inj{SortCvti64Op{}, SortKItem{}} (Val:SortCvti64Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortKItem{}} (Val:SortMmaxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTextFormatGlobalType{}, inj{SortTextFormatGlobalType{}, SortKItem{}} (Val:SortTextFormatGlobalType{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortMemAddrsCell{}} (\exists{SortMemAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'memAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortMemAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTypeIdxCellOpt{}} (LblnoNextTypeIdxCell{}(), \or{SortNextTypeIdxCellOpt{}} (\exists{SortNextTypeIdxCellOpt{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}} (Val:SortNextTypeIdxCell{})), \bottom{SortNextTypeIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModIdxCellOpt{}} (LblnoModIdxCell{}(), \or{SortModIdxCellOpt{}} (\exists{SortModIdxCellOpt{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortModIdxCellOpt{}} (Val:SortModIdxCell{})), \bottom{SortModIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocalsCell{}} (\exists{SortLocalsCell{}} (X0:SortMap{}, Lbl'-LT-'locals'-GT-'{}(X0:SortMap{})), \bottom{SortLocalsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExternval{}} (\exists{SortExternval{}} (X0:SortAllocatedKind{}, \exists{SortExternval{}} (X1:SortIndex{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(X0:SortAllocatedKind{}, X1:SortIndex{}))), \bottom{SortExternval{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(), \or{SortLocalDecls{}} (\exists{SortLocalDecls{}} (X0:SortLocalDecl{}, \exists{SortLocalDecls{}} (X1:SortLocalDecls{}, Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(X0:SortLocalDecl{}, X1:SortLocalDecls{}))), \bottom{SortLocalDecls{}}())) [constructor{}()] // no junk
  axiom{} \or{SortImportDefn{}} (\exists{SortImportDefn{}} (X0:SortWasmString{}, \exists{SortImportDefn{}} (X1:SortWasmString{}, \exists{SortImportDefn{}} (X2:SortImportDesc{}, Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{})))), \bottom{SortImportDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDataString{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(), \or{SortDataString{}} (\exists{SortDataString{}} (X0:SortWasmString{}, \exists{SortDataString{}} (X1:SortDataString{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(X0:SortWasmString{}, X1:SortDataString{}))), \bottom{SortDataString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTableElemType{}} (Lblfuncref'Unds'WASM'Unds'TableElemType{}(), \bottom{SortTableElemType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportsCellOpt{}} (LblnoExportsCell{}(), \or{SortExportsCellOpt{}} (\exists{SortExportsCellOpt{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortExportsCellOpt{}} (Val:SortExportsCell{})), \bottom{SortExportsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGValueCell{}} (\exists{SortGValueCell{}} (X0:SortVal{}, Lbl'-LT-'gValue'-GT-'{}(X0:SortVal{})), \bottom{SortGValueCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortTypeUse{}, \exists{SortAlloc{}} (X2:SortLocalDecls{}, \exists{SortAlloc{}} (X3:SortInstrs{}, Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeUse{}, X2:SortLocalDecls{}, X3:SortInstrs{}))))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortGlobalType{}, Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortInt{}, \exists{SortAlloc{}} (X2:SortOptionalInt{}, Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{})))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortInt{}, \exists{SortAlloc{}} (X2:SortOptionalInt{}, Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{})))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortTypeDecls{}, Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}))), \or{SortAlloc{}} (\exists{SortAlloc{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortAlloc{}} (Val:SortImportDefn{})), \or{SortAlloc{}} (\exists{SortAlloc{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortAlloc{}} (Val:SortExportDefn{})), \bottom{SortAlloc{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortFuncAddrsCellOpt{}} (LblnoFuncAddrsCell{}(), \or{SortFuncAddrsCellOpt{}} (\exists{SortFuncAddrsCellOpt{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}} (Val:SortFuncAddrsCell{})), \bottom{SortFuncAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortElemSegment{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(), \or{SortElemSegment{}} (\exists{SortElemSegment{}} (X0:SortIndex{}, \exists{SortElemSegment{}} (X1:SortElemSegment{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}))), \bottom{SortElemSegment{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGAddrCell{}} (\exists{SortGAddrCell{}} (X0:SortInt{}, Lbl'-LT-'gAddr'-GT-'{}(X0:SortInt{})), \bottom{SortGAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGMutCellOpt{}} (LblnoGMutCell{}(), \or{SortGMutCellOpt{}} (\exists{SortGMutCellOpt{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortGMutCellOpt{}} (Val:SortGMutCell{})), \bottom{SortGMutCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCell{}} (\exists{SortCurFrameCell{}} (X0:SortLocalsCell{}, \exists{SortCurFrameCell{}} (X1:SortCurModIdxCell{}, \exists{SortCurFrameCell{}} (X2:SortLabelDepthCell{}, \exists{SortCurFrameCell{}} (X3:SortLabelIdsCell{}, Lbl'-LT-'curFrame'-GT-'{}(X0:SortLocalsCell{}, X1:SortCurModIdxCell{}, X2:SortLabelDepthCell{}, X3:SortLabelIdsCell{}))))), \bottom{SortCurFrameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemIdsCellOpt{}} (LblnoMemIdsCell{}(), \or{SortMemIdsCellOpt{}} (\exists{SortMemIdsCellOpt{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortMemIdsCellOpt{}} (Val:SortMemIdsCell{})), \bottom{SortMemIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortNextFreshIdCell{}} (\exists{SortNextFreshIdCell{}} (X0:SortInt{}, Lbl'-LT-'nextFreshId'-GT-'{}(X0:SortInt{})), \bottom{SortNextFreshIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIUnOp{}} (Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), \or{SortIUnOp{}} (Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), \or{SortIUnOp{}} (Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}(), \bottom{SortIUnOp{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCellFragment{}} (\exists{SortFuncsCellFragment{}} (X0:SortFuncDefCellMap{}, Lbl'-LT-'funcs'-GT-'-fragment{}(X0:SortFuncDefCellMap{})), \bottom{SortFuncsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobIdsCell{}} (\exists{SortGlobIdsCell{}} (X0:SortMap{}, Lbl'-LT-'globIds'-GT-'{}(X0:SortMap{})), \bottom{SortGlobIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobIdxCell{}} (\exists{SortNextGlobIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextGlobIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextGlobIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOptionalId{}} (Lbl'Unds'WASM-DATA'Unds'OptionalId{}(), \or{SortOptionalId{}} (\exists{SortOptionalId{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortOptionalId{}} (Val:SortIdentifier{})), \or{SortOptionalId{}} (\exists{SortOptionalId{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortOptionalId{}} (Val:SortIdentifierToken{})), \bottom{SortOptionalId{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortDataString{}, Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortInlineExport{}, \exists{SortMemorySpec{}} (X1:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}))), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortInlineImport{}, \exists{SortMemorySpec{}} (X1:SortMemType{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(X0:SortInlineImport{}, X1:SortMemType{}))), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortMemType{}, inj{SortMemType{}, SortMemorySpec{}} (Val:SortMemType{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortLimits{}, inj{SortLimits{}, SortMemorySpec{}} (Val:SortLimits{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortInt{}, inj{SortInt{}, SortMemorySpec{}} (Val:SortInt{})), \bottom{SortMemorySpec{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortWasmCell{}} (\exists{SortWasmCell{}} (X0:SortKCell{}, \exists{SortWasmCell{}} (X1:SortValstackCell{}, \exists{SortWasmCell{}} (X2:SortCurFrameCell{}, \exists{SortWasmCell{}} (X3:SortModuleRegistryCell{}, \exists{SortWasmCell{}} (X4:SortModuleIdsCell{}, \exists{SortWasmCell{}} (X5:SortModuleInstancesCell{}, \exists{SortWasmCell{}} (X6:SortNextModuleIdxCell{}, \exists{SortWasmCell{}} (X7:SortMainStoreCell{}, \exists{SortWasmCell{}} (X8:SortDeterministicMemoryGrowthCell{}, \exists{SortWasmCell{}} (X9:SortNextFreshIdCell{}, Lbl'-LT-'wasm'-GT-'{}(X0:SortKCell{}, X1:SortValstackCell{}, X2:SortCurFrameCell{}, X3:SortModuleRegistryCell{}, X4:SortModuleIdsCell{}, X5:SortModuleInstancesCell{}, X6:SortNextModuleIdxCell{}, X7:SortMainStoreCell{}, X8:SortDeterministicMemoryGrowthCell{}, X9:SortNextFreshIdCell{}))))))))))), \bottom{SortWasmCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCellFragment{}} (\exists{SortCurFrameCellFragment{}} (X0:SortLocalsCellOpt{}, \exists{SortCurFrameCellFragment{}} (X1:SortCurModIdxCellOpt{}, \exists{SortCurFrameCellFragment{}} (X2:SortLabelDepthCellOpt{}, \exists{SortCurFrameCellFragment{}} (X3:SortLabelIdsCellOpt{}, Lbl'-LT-'curFrame'-GT-'-fragment{}(X0:SortLocalsCellOpt{}, X1:SortCurModIdxCellOpt{}, X2:SortLabelDepthCellOpt{}, X3:SortLabelIdsCellOpt{}))))), \bottom{SortCurFrameCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCell{}} (\exists{SortGlobalsCell{}} (X0:SortGlobalInstCellMap{}, Lbl'-LT-'globals'-GT-'{}(X0:SortGlobalInstCellMap{})), \bottom{SortGlobalsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextMemAddrCellOpt{}} (LblnoNextMemAddrCell{}(), \or{SortNextMemAddrCellOpt{}} (\exists{SortNextMemAddrCellOpt{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}} (Val:SortNextMemAddrCell{})), \bottom{SortNextMemAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabAddrsCellOpt{}} (LblnoTabAddrsCell{}(), \or{SortTabAddrsCellOpt{}} (\exists{SortTabAddrsCellOpt{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortTabAddrsCellOpt{}} (Val:SortTabAddrsCell{})), \bottom{SortTabAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOffset{}} (\exists{SortOffset{}} (X0:SortInstrs{}, Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(X0:SortInstrs{})), \or{SortOffset{}} (\exists{SortOffset{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortOffset{}} (Val:SortEmptyStmts{})), \or{SortOffset{}} (\exists{SortOffset{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortOffset{}} (Val:SortInstrs{})), \bottom{SortOffset{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextModuleIdxCellOpt{}} (LblnoNextModuleIdxCell{}(), \or{SortNextModuleIdxCellOpt{}} (\exists{SortNextModuleIdxCellOpt{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}} (Val:SortNextModuleIdxCell{})), \bottom{SortNextModuleIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalDefn{}} (\exists{SortGlobalDefn{}} (X0:SortOptionalId{}, \exists{SortGlobalDefn{}} (X1:SortGlobalSpec{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}))), \bottom{SortGlobalDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDeterministicMemoryGrowthCell{}} (\exists{SortDeterministicMemoryGrowthCell{}} (X0:SortBool{}, Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(X0:SortBool{})), \bottom{SortDeterministicMemoryGrowthCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(), \or{SortTypeDecls{}} (\exists{SortTypeDecls{}} (X0:SortTypeDecl{}, \exists{SortTypeDecls{}} (X1:SortTypeDecls{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(X0:SortTypeDecl{}, X1:SortTypeDecls{}))), \bottom{SortTypeDecls{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTAddrCell{}} (\exists{SortTAddrCell{}} (X0:SortInt{}, Lbl'-LT-'tAddr'-GT-'{}(X0:SortInt{})), \bottom{SortTAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTestOp{}} (Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}(), \bottom{SortTestOp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLabelIdsCell{}} (\exists{SortLabelIdsCell{}} (X0:SortMap{}, Lbl'-LT-'labelIds'-GT-'{}(X0:SortMap{})), \bottom{SortLabelIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFRelOp{}} (LblfloatEq{}(), \or{SortFRelOp{}} (LblfloatNe{}(), \or{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \or{SortFRelOp{}} (Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \or{SortFRelOp{}} (Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \or{SortFRelOp{}} (Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \bottom{SortFRelOp{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCell{}} (\exists{SortModuleInstancesCell{}} (X0:SortModuleInstCellMap{}, Lbl'-LT-'moduleInstances'-GT-'{}(X0:SortModuleInstCellMap{})), \bottom{SortModuleInstancesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMAddrCellOpt{}} (LblnoMAddrCell{}(), \or{SortMAddrCellOpt{}} (\exists{SortMAddrCellOpt{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortMAddrCellOpt{}} (Val:SortMAddrCell{})), \bottom{SortMAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvti32Op{}, inj{SortCvti32Op{}, SortCvtOp{}} (Val:SortCvti32Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvtf64Op{}, inj{SortCvtf64Op{}, SortCvtOp{}} (Val:SortCvtf64Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvtf32Op{}, inj{SortCvtf32Op{}, SortCvtOp{}} (Val:SortCvtf32Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvti64Op{}, inj{SortCvti64Op{}, SortCvtOp{}} (Val:SortCvti64Op{})), \bottom{SortCvtOp{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortModuleInstancesCellOpt{}} (LblnoModuleInstancesCell{}(), \or{SortModuleInstancesCellOpt{}} (\exists{SortModuleInstancesCellOpt{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}} (Val:SortModuleInstancesCell{})), \bottom{SortModuleInstancesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortInlineExport{}, \exists{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}))), \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortInlineImport{}, \exists{SortGlobalSpec{}} (X1:SortTextFormatGlobalType{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}))), \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortTextFormatGlobalType{}, \exists{SortGlobalSpec{}} (X1:SortInstr{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(X0:SortTextFormatGlobalType{}, X1:SortInstr{}))), \bottom{SortGlobalSpec{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextTypeIdxCell{}} (\exists{SortNextTypeIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextTypeIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextTypeIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefn{}} (\exists{SortFuncDefn{}} (X0:SortOptionalId{}, \exists{SortFuncDefn{}} (X1:SortFuncSpec{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}))), \bottom{SortFuncDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmCellFragment{}} (\exists{SortWasmCellFragment{}} (X0:SortKCellOpt{}, \exists{SortWasmCellFragment{}} (X1:SortValstackCellOpt{}, \exists{SortWasmCellFragment{}} (X2:SortCurFrameCellOpt{}, \exists{SortWasmCellFragment{}} (X3:SortModuleRegistryCellOpt{}, \exists{SortWasmCellFragment{}} (X4:SortModuleIdsCellOpt{}, \exists{SortWasmCellFragment{}} (X5:SortModuleInstancesCellOpt{}, \exists{SortWasmCellFragment{}} (X6:SortNextModuleIdxCellOpt{}, \exists{SortWasmCellFragment{}} (X7:SortMainStoreCellOpt{}, \exists{SortWasmCellFragment{}} (X8:SortDeterministicMemoryGrowthCellOpt{}, \exists{SortWasmCellFragment{}} (X9:SortNextFreshIdCellOpt{}, Lbl'-LT-'wasm'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortValstackCellOpt{}, X2:SortCurFrameCellOpt{}, X3:SortModuleRegistryCellOpt{}, X4:SortModuleIdsCellOpt{}, X5:SortModuleInstancesCellOpt{}, X6:SortNextModuleIdxCellOpt{}, X7:SortMainStoreCellOpt{}, X8:SortDeterministicMemoryGrowthCellOpt{}, X9:SortNextFreshIdCellOpt{}))))))))))), \bottom{SortWasmCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCell{}} (\exists{SortTabInstCell{}} (X0:SortTAddrCell{}, \exists{SortTabInstCell{}} (X1:SortTmaxCell{}, \exists{SortTabInstCell{}} (X2:SortTsizeCell{}, \exists{SortTabInstCell{}} (X3:SortTdataCell{}, Lbl'-LT-'tabInst'-GT-'{}(X0:SortTAddrCell{}, X1:SortTmaxCell{}, X2:SortTsizeCell{}, X3:SortTdataCell{}))))), \bottom{SortTabInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDefn{}} (\exists{SortTypeDefn{}} (X0:SortOptionalId{}, \exists{SortTypeDefn{}} (X1:SortTypeDecls{}, Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}))), \bottom{SortTypeDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload'Unds'WASM'Unds'LoadOp{}(), \bottom{SortLoadOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeUse{}, Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortValStack{}, Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortLoadOp{}, \exists{SortInstr{}} (X2:SortInt{}, Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortStoreOp{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortInt{}, Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeDecls{}, \exists{SortInstr{}} (X1:SortInstrs{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortVecType{}, \exists{SortInstr{}} (X1:SortInstrs{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeDecls{}, \exists{SortInstr{}} (X1:SortInstrs{}, \exists{SortInstr{}} (X2:SortInstrs{}, Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortVal{}, Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortValStack{}, Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortSignedness{}, Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeDecls{}, \exists{SortInstr{}} (X1:SortInstrs{}, Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortNumber{}, Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{})))), \or{SortInstr{}} (Lbltrap'Unds'WASM'Unds'Instr{}(), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortInstr{}} (Val:SortPlainInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortInstr{}} (Val:SortFoldedInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortInstr{}} (Val:SortBlockInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortInstr{}} (Val:SortEmptyStmt{})), \bottom{SortInstr{}}()))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortOffset{}, \exists{SortElemDefn{}} (X1:SortElemSegment{}, Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortIndex{}, \exists{SortElemDefn{}} (X1:SortOffset{}, \exists{SortElemDefn{}} (X2:SortElemSegment{}, Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{})))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortIndex{}, \exists{SortElemDefn{}} (X1:SortElemSegment{}, Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}))), \bottom{SortElemDefn{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFVal{}} (\exists{SortFVal{}} (X0:SortFValType{}, \exists{SortFVal{}} (X1:SortFloat{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(X0:SortFValType{}, X1:SortFloat{}))), \bottom{SortFVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalDecl{}} (\exists{SortLocalDecl{}} (X0:SortValTypes{}, Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{})), \or{SortLocalDecl{}} (\exists{SortLocalDecl{}} (X0:SortIdentifier{}, \exists{SortLocalDecl{}} (X1:SortAValType{}, Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}))), \bottom{SortLocalDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCellMap{}} (\exists{SortMemInstCellMap{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortMemInstCellMap{}} (Val:SortMemInstCell{})), \bottom{SortMemInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTabAddrCellOpt{}} (LblnoNextTabAddrCell{}(), \or{SortNextTabAddrCellOpt{}} (\exists{SortNextTabAddrCellOpt{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}} (Val:SortNextTabAddrCell{})), \bottom{SortNextTabAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemoryDefn{}} (\exists{SortMemoryDefn{}} (X0:SortOptionalId{}, \exists{SortMemoryDefn{}} (X1:SortMemorySpec{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}))), \bottom{SortMemoryDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemArg{}} (\exists{SortMemArg{}} (X0:SortOffsetArg{}, \exists{SortMemArg{}} (X1:SortAlignArg{}, Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(X0:SortOffsetArg{}, X1:SortAlignArg{}))), \or{SortMemArg{}} (\exists{SortMemArg{}} (Val:SortAlignArg{}, inj{SortAlignArg{}, SortMemArg{}} (Val:SortAlignArg{})), \or{SortMemArg{}} (\exists{SortMemArg{}} (Val:SortOffsetArg{}, inj{SortOffsetArg{}, SortMemArg{}} (Val:SortOffsetArg{})), \bottom{SortMemArg{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCell{}} (\exists{SortFuncDefCell{}} (X0:SortFAddrCell{}, \exists{SortFuncDefCell{}} (X1:SortFCodeCell{}, \exists{SortFuncDefCell{}} (X2:SortFTypeCell{}, \exists{SortFuncDefCell{}} (X3:SortFLocalCell{}, \exists{SortFuncDefCell{}} (X4:SortFModInstCell{}, Lbl'-LT-'funcDef'-GT-'{}(X0:SortFAddrCell{}, X1:SortFCodeCell{}, X2:SortFTypeCell{}, X3:SortFLocalCell{}, X4:SortFModInstCell{})))))), \bottom{SortFuncDefCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmString{}} (Lbl'Stop'WasmString'Unds'WASM-DATA'Unds'WasmString{}(), \or{SortWasmString{}} (\exists{SortWasmString{}} (Val:SortWasmStringToken{}, inj{SortWasmStringToken{}, SortWasmString{}} (Val:SortWasmStringToken{})), \bottom{SortWasmString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \or{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \or{SortCvti32Op{}} (Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \or{SortCvti32Op{}} (Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \bottom{SortCvti32Op{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncIdxCellOpt{}} (LblnoNextFuncIdxCell{}(), \or{SortNextFuncIdxCellOpt{}} (\exists{SortNextFuncIdxCellOpt{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}} (Val:SortNextFuncIdxCell{})), \bottom{SortNextFuncIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemAddrsCellOpt{}} (LblnoMemAddrsCell{}(), \or{SortMemAddrsCellOpt{}} (\exists{SortMemAddrsCellOpt{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortMemAddrsCellOpt{}} (Val:SortMemAddrsCell{})), \bottom{SortMemAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMAddrCell{}} (\exists{SortMAddrCell{}} (X0:SortInt{}, Lbl'-LT-'mAddr'-GT-'{}(X0:SortInt{})), \bottom{SortMAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncIdxCell{}} (\exists{SortNextFuncIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextFuncIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextFuncIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurModIdxCell{}} (\exists{SortCurModIdxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'curModIdx'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortCurModIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmInt{}} (\exists{SortWasmInt{}} (Val:SortInt{}, inj{SortInt{}, SortWasmInt{}} (Val:SortInt{})), \bottom{SortWasmInt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleRegistryCellOpt{}} (LblnoModuleRegistryCell{}(), \or{SortModuleRegistryCellOpt{}} (\exists{SortModuleRegistryCellOpt{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}} (Val:SortModuleRegistryCell{})), \bottom{SortModuleRegistryCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleRegistryCell{}} (\exists{SortModuleRegistryCell{}} (X0:SortMap{}, Lbl'-LT-'moduleRegistry'-GT-'{}(X0:SortMap{})), \bottom{SortModuleRegistryCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \bottom{SortIBinOp{}}()))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStartDefn{}} (\exists{SortStartDefn{}} (X0:SortIndex{}, Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(X0:SortIndex{})), \bottom{SortStartDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCellOpt{}} (LblnoFuncsCell{}(), \or{SortFuncsCellOpt{}} (\exists{SortFuncsCellOpt{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortFuncsCellOpt{}} (Val:SortFuncsCell{})), \bottom{SortFuncsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTdataCellOpt{}} (LblnoTdataCell{}(), \or{SortTdataCellOpt{}} (\exists{SortTdataCellOpt{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortTdataCellOpt{}} (Val:SortTdataCell{})), \bottom{SortTdataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCellFragment{}} (\exists{SortTabInstCellFragment{}} (X0:SortTAddrCellOpt{}, \exists{SortTabInstCellFragment{}} (X1:SortTmaxCellOpt{}, \exists{SortTabInstCellFragment{}} (X2:SortTsizeCellOpt{}, \exists{SortTabInstCellFragment{}} (X3:SortTdataCellOpt{}, Lbl'-LT-'tabInst'-GT-'-fragment{}(X0:SortTAddrCellOpt{}, X1:SortTmaxCellOpt{}, X2:SortTsizeCellOpt{}, X3:SortTdataCellOpt{}))))), \bottom{SortTabInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortContext{}} (\exists{SortContext{}} (X0:SortMap{}, Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(X0:SortMap{})), \bottom{SortContext{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreOpM{}} (\exists{SortStoreOpM{}} (X0:SortStoreOp{}, \exists{SortStoreOpM{}} (X1:SortMemArg{}, Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(X0:SortStoreOp{}, X1:SortMemArg{}))), \or{SortStoreOpM{}} (\exists{SortStoreOpM{}} (Val:SortStoreOp{}, inj{SortStoreOp{}, SortStoreOpM{}} (Val:SortStoreOp{})), \bottom{SortStoreOpM{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), \or{SortStoreOp{}} (Lblstore32'Unds'WASM'Unds'StoreOp{}(), \or{SortStoreOp{}} (Lblstore8'Unds'WASM'Unds'StoreOp{}(), \or{SortStoreOp{}} (Lblstore'Unds'WASM'Unds'StoreOp{}(), \bottom{SortStoreOp{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncAddrsCell{}} (\exists{SortFuncAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'funcAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortFuncAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMmaxCellOpt{}} (LblnoMmaxCell{}(), \or{SortMmaxCellOpt{}} (\exists{SortMmaxCellOpt{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortMmaxCellOpt{}} (Val:SortMmaxCell{})), \bottom{SortMmaxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeterministicMemoryGrowthCellOpt{}} (LblnoDeterministicMemoryGrowthCell{}(), \or{SortDeterministicMemoryGrowthCellOpt{}} (\exists{SortDeterministicMemoryGrowthCellOpt{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}} (Val:SortDeterministicMemoryGrowthCell{})), \bottom{SortDeterministicMemoryGrowthCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTmaxCellOpt{}} (LblnoTmaxCell{}(), \or{SortTmaxCellOpt{}} (\exists{SortTmaxCellOpt{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortTmaxCellOpt{}} (Val:SortTmaxCell{})), \bottom{SortTmaxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAlignArg{}} (\exists{SortAlignArg{}} (X0:SortWasmInt{}, Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'WasmInt{}(X0:SortWasmInt{})), \bottom{SortAlignArg{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCell{}} (\exists{SortMemInstCell{}} (X0:SortMAddrCell{}, \exists{SortMemInstCell{}} (X1:SortMmaxCell{}, \exists{SortMemInstCell{}} (X2:SortMsizeCell{}, \exists{SortMemInstCell{}} (X3:SortMdataCell{}, Lbl'-LT-'memInst'-GT-'{}(X0:SortMAddrCell{}, X1:SortMmaxCell{}, X2:SortMsizeCell{}, X3:SortMdataCell{}))))), \bottom{SortMemInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalType{}} (\exists{SortGlobalType{}} (X0:SortMut{}, \exists{SortGlobalType{}} (X1:SortAValType{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(X0:SortMut{}, X1:SortAValType{}))), \bottom{SortGlobalType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortOptionalId{}, \exists{SortModuleDecl{}} (X1:SortDefns{}, Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}))), \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortOptionalId{}, \exists{SortModuleDecl{}} (X1:SortDefns{}, \exists{SortModuleDecl{}} (X2:SortDefns{}, \exists{SortModuleDecl{}} (X3:SortDefns{}, \exists{SortModuleDecl{}} (X4:SortDefns{}, \exists{SortModuleDecl{}} (X5:SortDefns{}, \exists{SortModuleDecl{}} (X6:SortDefns{}, \exists{SortModuleDecl{}} (X7:SortDefns{}, LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}, X2:SortDefns{}, X3:SortDefns{}, X4:SortDefns{}, X5:SortDefns{}, X6:SortDefns{}, X7:SortDefns{}))))))))), \bottom{SortModuleDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFModInstCellOpt{}} (LblnoFModInstCell{}(), \or{SortFModInstCellOpt{}} (\exists{SortFModInstCellOpt{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortFModInstCellOpt{}} (Val:SortFModInstCell{})), \bottom{SortFModInstCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortSignedness{}} (LblsignedBytes{}(), \or{SortSignedness{}} (LblunsignedBytes{}(), \bottom{SortSignedness{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGValueCellOpt{}} (LblnoGValueCell{}(), \or{SortGValueCellOpt{}} (\exists{SortGValueCellOpt{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortGValueCellOpt{}} (Val:SortGValueCell{})), \bottom{SortGValueCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortWasmCellOpt{}} (LblnoWasmCell{}(), \or{SortWasmCellOpt{}} (\exists{SortWasmCellOpt{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortWasmCellOpt{}} (Val:SortWasmCell{})), \bottom{SortWasmCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCellMap{}} (\exists{SortGlobalInstCellMap{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortGlobalInstCellMap{}} (Val:SortGlobalInstCell{})), \bottom{SortGlobalInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValType{}} (\exists{SortValType{}} (Val:SortNValType{}, inj{SortNValType{}, SortValType{}} (Val:SortNValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortFValType{}, inj{SortFValType{}, SortValType{}} (Val:SortFValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortAValType{}, inj{SortAValType{}, SortValType{}} (Val:SortAValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortIValType{}, inj{SortIValType{}, SortValType{}} (Val:SortIValType{})), \bottom{SortValType{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortCell{}} (\exists{SortCell{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortCell{}} (Val:SortTmaxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortCell{}} (Val:SortMsizeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortCell{}} (Val:SortMemAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortCell{}} (Val:SortLocalsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortCell{}} (Val:SortGValueCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortCell{}} (Val:SortGAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortCell{}} (Val:SortCurFrameCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextFreshIdCell{}, inj{SortNextFreshIdCell{}, SortCell{}} (Val:SortNextFreshIdCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortCell{}} (Val:SortGlobIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortCell{}} (Val:SortNextGlobIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortCell{}} (Val:SortWasmCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortCell{}} (Val:SortGlobalsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortCell{}} (Val:SortDeterministicMemoryGrowthCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortCell{}} (Val:SortTAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLabelIdsCell{}, inj{SortLabelIdsCell{}, SortCell{}} (Val:SortLabelIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortCell{}} (Val:SortModuleInstancesCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortCell{}} (Val:SortNextTypeIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortCell{}} (Val:SortTabInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortCell{}} (Val:SortFuncDefCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortCell{}} (Val:SortMAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortCell{}} (Val:SortNextFuncIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortCell{}} (Val:SortCurModIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortCell{}} (Val:SortModuleRegistryCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortCell{}} (Val:SortFuncAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortCell{}} (Val:SortMemInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortCell{}} (Val:SortMemIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortKCell{}, inj{SortKCell{}, SortCell{}} (Val:SortKCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortCell{}} (Val:SortExportsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortCell{}} (Val:SortNextGlobAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortCell{}} (Val:SortTdataCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortCell{}} (Val:SortNextModuleIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortCell{}} (Val:SortNextTabAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortCell{}} (Val:SortFAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortCell{}} (Val:SortNextFuncAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortCell{}} (Val:SortValstackCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortCell{}} (Val:SortGlobalInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortCell{}} (Val:SortFuncsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortCell{}} (Val:SortModuleIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortCell{}} (Val:SortFTypeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortCell{}} (Val:SortMainStoreCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortCell{}} (Val:SortTsizeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortCell{}} (Val:SortFuncIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortCell{}} (Val:SortFLocalCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortCell{}} (Val:SortTabsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortCell{}} (Val:SortNextMemAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortCell{}} (Val:SortMdataCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortCell{}} (Val:SortFCodeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortCell{}} (Val:SortFModInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortCell{}} (Val:SortTabAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortCell{}} (Val:SortTypeIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortCell{}} (Val:SortGMutCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortCell{}} (Val:SortTabIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortCell{}} (Val:SortModIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortCell{}} (Val:SortModuleInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLabelDepthCell{}, inj{SortLabelDepthCell{}, SortCell{}} (Val:SortLabelDepthCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortCell{}} (Val:SortMemsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortCell{}} (Val:SortTypesCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortCell{}} (Val:SortGlobalAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortCell{}} (Val:SortMmaxCell{})), \bottom{SortCell{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortMemIdsCell{}} (\exists{SortMemIdsCell{}} (X0:SortMap{}, Lbl'-LT-'memIds'-GT-'{}(X0:SortMap{})), \bottom{SortMemIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortInt{}, inj{SortInt{}, SortNumber{}} (Val:SortInt{})), \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortFloat{}, inj{SortFloat{}, SortNumber{}} (Val:SortFloat{})), \bottom{SortNumber{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFValType{}} (Lblf32'Unds'WASM-DATA'Unds'FValType{}(), \or{SortFValType{}} (Lblf64'Unds'WASM-DATA'Unds'FValType{}(), \bottom{SortFValType{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortTypeKeyWord{}} (Lblparam'Unds'WASM'Unds'TypeKeyWord{}(), \or{SortTypeKeyWord{}} (Lblresult'Unds'WASM'Unds'TypeKeyWord{}(), \bottom{SortTypeKeyWord{}}())) [constructor{}()] // no junk
  axiom{} \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTypeUse{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTextFormatGlobalType{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortMemType{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTableType{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}))), \bottom{SortImportDesc{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCellFragment{}} (\exists{SortMemInstCellFragment{}} (X0:SortMAddrCellOpt{}, \exists{SortMemInstCellFragment{}} (X1:SortMmaxCellOpt{}, \exists{SortMemInstCellFragment{}} (X2:SortMsizeCellOpt{}, \exists{SortMemInstCellFragment{}} (X3:SortMdataCellOpt{}, Lbl'-LT-'memInst'-GT-'-fragment{}(X0:SortMAddrCellOpt{}, X1:SortMmaxCellOpt{}, X2:SortMsizeCellOpt{}, X3:SortMdataCellOpt{}))))), \bottom{SortMemInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportsCell{}} (\exists{SortExportsCell{}} (X0:SortMap{}, Lbl'-LT-'exports'-GT-'{}(X0:SortMap{})), \bottom{SortExportsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobAddrCellOpt{}} (LblnoNextGlobAddrCell{}(), \or{SortNextGlobAddrCellOpt{}} (\exists{SortNextGlobAddrCellOpt{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}} (Val:SortNextGlobAddrCell{})), \bottom{SortNextGlobAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortMInt{}}() [constructor{}()] // no junk
  axiom{} \or{SortNextGlobAddrCell{}} (\exists{SortNextGlobAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextGlobAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextGlobAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTdataCell{}} (\exists{SortTdataCell{}} (X0:SortMap{}, Lbl'-LT-'tdata'-GT-'{}(X0:SortMap{})), \bottom{SortTdataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCellMap{}} (\exists{SortFuncDefCellMap{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortFuncDefCellMap{}} (Val:SortFuncDefCell{})), \bottom{SortFuncDefCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextModuleIdxCell{}} (\exists{SortNextModuleIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextModuleIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextModuleIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), \or{SortStmts{}} (\exists{SortStmts{}} (X0:SortStmt{}, \exists{SortStmts{}} (X1:SortStmts{}, Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(X0:SortStmt{}, X1:SortStmts{}))), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortStmts{}} (Val:SortEmptyStmts{})), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortStmts{}} (Val:SortInstrs{})), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortDefns{}, inj{SortDefns{}, SortStmts{}} (Val:SortDefns{})), \bottom{SortStmts{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortGAddrCellOpt{}} (LblnoGAddrCell{}(), \or{SortGAddrCellOpt{}} (\exists{SortGAddrCellOpt{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortGAddrCellOpt{}} (Val:SortGAddrCell{})), \bottom{SortGAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextTabAddrCell{}} (\exists{SortNextTabAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextTabAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextTabAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEndianness{}} (LblbigEndianBytes{}(), \or{SortEndianness{}} (LbllittleEndianBytes{}(), \bottom{SortEndianness{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFAddrCell{}} (\exists{SortFAddrCell{}} (X0:SortInt{}, Lbl'-LT-'fAddr'-GT-'{}(X0:SortInt{})), \bottom{SortFAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortNextFuncAddrCell{}} (\exists{SortNextFuncAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextFuncAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextFuncAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \bottom{SortIRelOp{}}())))))))))) [constructor{}()] // no junk
  axiom{} \or{SortCvtf64Op{}} (Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), \or{SortCvtf64Op{}} (Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), \or{SortCvtf64Op{}} (Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), \bottom{SortCvtf64Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortTabsCellFragment{}} (\exists{SortTabsCellFragment{}} (X0:SortTabInstCellMap{}, Lbl'-LT-'tabs'-GT-'-fragment{}(X0:SortTabInstCellMap{})), \bottom{SortTabsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValstackCell{}} (\exists{SortValstackCell{}} (X0:SortValStack{}, Lbl'-LT-'valstack'-GT-'{}(X0:SortValStack{})), \bottom{SortValstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortLimits{}, inj{SortLimits{}, SortMemType{}} (Val:SortLimits{})), \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortInt{}, inj{SortInt{}, SortMemType{}} (Val:SortInt{})), \bottom{SortMemType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLabel{}} (\exists{SortLabel{}} (X0:SortVecType{}, \exists{SortLabel{}} (X1:SortInstrs{}, \exists{SortLabel{}} (X2:SortValStack{}, Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortValStack{})))), \bottom{SortLabel{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeIdsCellOpt{}} (LblnoTypeIdsCell{}(), \or{SortTypeIdsCellOpt{}} (\exists{SortTypeIdsCellOpt{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortTypeIdsCellOpt{}} (Val:SortTypeIdsCell{})), \bottom{SortTypeIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLabelDepthCellOpt{}} (LblnoLabelDepthCell{}(), \or{SortLabelDepthCellOpt{}} (\exists{SortLabelDepthCellOpt{}} (Val:SortLabelDepthCell{}, inj{SortLabelDepthCell{}, SortLabelDepthCellOpt{}} (Val:SortLabelDepthCell{})), \bottom{SortLabelDepthCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCellMap{}} (\exists{SortModuleInstCellMap{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortModuleInstCellMap{}} (Val:SortModuleInstCell{})), \bottom{SortModuleInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeUse{}} (\exists{SortTypeUse{}} (X0:SortIndex{}, Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(X0:SortIndex{})), \or{SortTypeUse{}} (\exists{SortTypeUse{}} (X0:SortIndex{}, \exists{SortTypeUse{}} (X1:SortTypeDecls{}, Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(X0:SortIndex{}, X1:SortTypeDecls{}))), \or{SortTypeUse{}} (\exists{SortTypeUse{}} (Val:SortTypeDecls{}, inj{SortTypeDecls{}, SortTypeUse{}} (Val:SortTypeDecls{})), \bottom{SortTypeUse{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCellFragment{}} (\exists{SortGlobalsCellFragment{}} (X0:SortGlobalInstCellMap{}, Lbl'-LT-'globals'-GT-'-fragment{}(X0:SortGlobalInstCellMap{})), \bottom{SortGlobalsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabIdsCellOpt{}} (LblnoTabIdsCell{}(), \or{SortTabIdsCellOpt{}} (\exists{SortTabIdsCellOpt{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortTabIdsCellOpt{}} (Val:SortTabIdsCell{})), \bottom{SortTabIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLoadOpM{}} (\exists{SortLoadOpM{}} (X0:SortLoadOp{}, \exists{SortLoadOpM{}} (X1:SortMemArg{}, Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(X0:SortLoadOp{}, X1:SortMemArg{}))), \or{SortLoadOpM{}} (\exists{SortLoadOpM{}} (Val:SortLoadOp{}, inj{SortLoadOp{}, SortLoadOpM{}} (Val:SortLoadOp{})), \bottom{SortLoadOpM{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAValType{}} (\exists{SortAValType{}} (Val:SortFValType{}, inj{SortFValType{}, SortAValType{}} (Val:SortFValType{})), \or{SortAValType{}} (\exists{SortAValType{}} (Val:SortIValType{}, inj{SortIValType{}, SortAValType{}} (Val:SortIValType{})), \bottom{SortAValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCell{}} (\exists{SortGlobalInstCell{}} (X0:SortGAddrCell{}, \exists{SortGlobalInstCell{}} (X1:SortGValueCell{}, \exists{SortGlobalInstCell{}} (X2:SortGMutCell{}, Lbl'-LT-'globalInst'-GT-'{}(X0:SortGAddrCell{}, X1:SortGValueCell{}, X2:SortGMutCell{})))), \bottom{SortGlobalInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortAValType{}, \exists{SortPlainInstr{}} (X1:SortCvtOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFBinOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFRelOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFUnOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortStoreOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIBinOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIRelOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIUnOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortStoreOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortTestOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortNumber{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortWasmInt{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(X0:SortIValType{}, X1:SortWasmInt{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortElemSegment{}, Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortTypeUse{}, Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{})), \or{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblreturn'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblselect'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblunreachable'Unds'WASM'Unds'PlainInstr{}(), \bottom{SortPlainInstr{}}()))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortCurModIdxCellOpt{}} (LblnoCurModIdxCell{}(), \or{SortCurModIdxCellOpt{}} (\exists{SortCurModIdxCellOpt{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortCurModIdxCellOpt{}} (Val:SortCurModIdxCell{})), \bottom{SortCurModIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCell{}} (\exists{SortFuncsCell{}} (X0:SortFuncDefCellMap{}, Lbl'-LT-'funcs'-GT-'{}(X0:SortFuncDefCellMap{})), \bottom{SortFuncsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFTypeCellOpt{}} (LblnoFTypeCell{}(), \or{SortFTypeCellOpt{}} (\exists{SortFTypeCellOpt{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortFTypeCellOpt{}} (Val:SortFTypeCell{})), \bottom{SortFTypeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortInt{}, \exists{SortStmt{}} (X1:SortInt{}, \exists{SortStmt{}} (X2:SortMap{}, \exists{SortStmt{}} (X3:SortMap{}, \exists{SortStmt{}} (X4:SortElemSegment{}, Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(X0:SortInt{}, X1:SortInt{}, X2:SortMap{}, X3:SortMap{}, X4:SortElemSegment{})))))), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortStmt{}} (Val:SortTableDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortStmt{}} (Val:SortImportDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortStmt{}} (Val:SortGlobalDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortStmt{}} (Val:SortFuncDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortStmt{}} (Val:SortTypeDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortInstr{}, inj{SortInstr{}, SortStmt{}} (Val:SortInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortStmt{}} (Val:SortElemDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortStmt{}} (Val:SortMemoryDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortStmt{}} (Val:SortStartDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortModuleDecl{}, inj{SortModuleDecl{}, SortStmt{}} (Val:SortModuleDecl{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortStmt{}} (Val:SortPlainInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDefn{}, inj{SortDefn{}, SortStmt{}} (Val:SortDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortStmt{}} (Val:SortFoldedInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortStmt{}} (Val:SortDataDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortStmt{}} (Val:SortBlockInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortStmt{}} (Val:SortEmptyStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortStmt{}} (Val:SortExportDefn{})), \bottom{SortStmt{}}())))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortLimits{}} (\exists{SortLimits{}} (X0:SortInt{}, \exists{SortLimits{}} (X1:SortInt{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}))), \or{SortLimits{}} (\exists{SortLimits{}} (Val:SortInt{}, inj{SortInt{}, SortLimits{}} (Val:SortInt{})), \bottom{SortLimits{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTAddrCellOpt{}} (LblnoTAddrCell{}(), \or{SortTAddrCellOpt{}} (\exists{SortTAddrCellOpt{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortTAddrCellOpt{}} (Val:SortTAddrCell{})), \bottom{SortTAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCellFragment{}} (\exists{SortModuleInstCellFragment{}} (X0:SortModIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X1:SortExportsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X2:SortTypeIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X3:SortTypesCellOpt{}, \exists{SortModuleInstCellFragment{}} (X4:SortNextTypeIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X5:SortFuncIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X6:SortFuncAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X7:SortNextFuncIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X8:SortTabIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X9:SortTabAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X10:SortMemIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X11:SortMemAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X12:SortGlobIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X13:SortGlobalAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X14:SortNextGlobIdxCellOpt{}, Lbl'-LT-'moduleInst'-GT-'-fragment{}(X0:SortModIdxCellOpt{}, X1:SortExportsCellOpt{}, X2:SortTypeIdsCellOpt{}, X3:SortTypesCellOpt{}, X4:SortNextTypeIdxCellOpt{}, X5:SortFuncIdsCellOpt{}, X6:SortFuncAddrsCellOpt{}, X7:SortNextFuncIdxCellOpt{}, X8:SortTabIdsCellOpt{}, X9:SortTabAddrsCellOpt{}, X10:SortMemIdsCellOpt{}, X11:SortMemAddrsCellOpt{}, X12:SortGlobIdsCellOpt{}, X13:SortGlobalAddrsCellOpt{}, X14:SortNextGlobIdxCellOpt{})))))))))))))))), \bottom{SortModuleInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCellFragment{}} (\exists{SortModuleInstancesCellFragment{}} (X0:SortModuleInstCellMap{}, Lbl'-LT-'moduleInstances'-GT-'-fragment{}(X0:SortModuleInstCellMap{})), \bottom{SortModuleInstancesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdsCell{}} (\exists{SortModuleIdsCell{}} (X0:SortMap{}, Lbl'-LT-'moduleIds'-GT-'{}(X0:SortMap{})), \bottom{SortModuleIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFTypeCell{}} (\exists{SortFTypeCell{}} (X0:SortType{}, Lbl'-LT-'fType'-GT-'{}(X0:SortType{})), \bottom{SortFTypeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCell{}} (\exists{SortMainStoreCell{}} (X0:SortFuncsCell{}, \exists{SortMainStoreCell{}} (X1:SortNextFuncAddrCell{}, \exists{SortMainStoreCell{}} (X2:SortTabsCell{}, \exists{SortMainStoreCell{}} (X3:SortNextTabAddrCell{}, \exists{SortMainStoreCell{}} (X4:SortMemsCell{}, \exists{SortMainStoreCell{}} (X5:SortNextMemAddrCell{}, \exists{SortMainStoreCell{}} (X6:SortGlobalsCell{}, \exists{SortMainStoreCell{}} (X7:SortNextGlobAddrCell{}, Lbl'-LT-'mainStore'-GT-'{}(X0:SortFuncsCell{}, X1:SortNextFuncAddrCell{}, X2:SortTabsCell{}, X3:SortNextTabAddrCell{}, X4:SortMemsCell{}, X5:SortNextMemAddrCell{}, X6:SortGlobalsCell{}, X7:SortNextGlobAddrCell{}))))))))), \bottom{SortMainStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTsizeCell{}} (\exists{SortTsizeCell{}} (X0:SortInt{}, Lbl'-LT-'tsize'-GT-'{}(X0:SortInt{})), \bottom{SortTsizeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCellFragment{}} (\exists{SortMainStoreCellFragment{}} (X0:SortFuncsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X1:SortNextFuncAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X2:SortTabsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X3:SortNextTabAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X4:SortMemsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X5:SortNextMemAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X6:SortGlobalsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X7:SortNextGlobAddrCellOpt{}, Lbl'-LT-'mainStore'-GT-'-fragment{}(X0:SortFuncsCellOpt{}, X1:SortNextFuncAddrCellOpt{}, X2:SortTabsCellOpt{}, X3:SortNextTabAddrCellOpt{}, X4:SortMemsCellOpt{}, X5:SortNextMemAddrCellOpt{}, X6:SortGlobalsCellOpt{}, X7:SortNextGlobAddrCellOpt{}))))))))), \bottom{SortMainStoreCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdsCell{}} (\exists{SortFuncIdsCell{}} (X0:SortMap{}, Lbl'-LT-'funcIds'-GT-'{}(X0:SortMap{})), \bottom{SortFuncIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{Sort'Hash'Layout{}} (\top{Sort'Hash'Layout{}}(), \bottom{Sort'Hash'Layout{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFLocalCell{}} (\exists{SortFLocalCell{}} (X0:SortType{}, Lbl'-LT-'fLocal'-GT-'{}(X0:SortType{})), \bottom{SortFLocalCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabsCell{}} (\exists{SortTabsCell{}} (X0:SortTabInstCellMap{}, Lbl'-LT-'tabs'-GT-'{}(X0:SortTabInstCellMap{})), \bottom{SortTabsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmStringToken{}} (\top{SortWasmStringToken{}}(), \bottom{SortWasmStringToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortNextMemAddrCell{}} (\exists{SortNextMemAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextMemAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextMemAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIValType{}} (Lbli32'Unds'WASM-DATA'Unds'IValType{}(), \or{SortIValType{}} (Lbli64'Unds'WASM-DATA'Unds'IValType{}(), \bottom{SortIValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortMemsCellOpt{}} (LblnoMemsCell{}(), \or{SortMemsCellOpt{}} (\exists{SortMemsCellOpt{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortMemsCellOpt{}} (Val:SortMemsCell{})), \bottom{SortMemsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobIdsCellOpt{}} (LblnoGlobIdsCell{}(), \or{SortGlobIdsCellOpt{}} (\exists{SortGlobIdsCellOpt{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortGlobIdsCellOpt{}} (Val:SortGlobIdsCell{})), \bottom{SortGlobIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMdataCell{}} (\exists{SortMdataCell{}} (X0:SortByteMap{}, Lbl'-LT-'mdata'-GT-'{}(X0:SortByteMap{})), \bottom{SortMdataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortTableElemType{}, \exists{SortTableSpec{}} (X1:SortElemSegment{}, Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortInlineExport{}, \exists{SortTableSpec{}} (X1:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortInlineImport{}, \exists{SortTableSpec{}} (X1:SortTableType{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(X0:SortInlineImport{}, X1:SortTableType{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (Val:SortTableType{}, inj{SortTableType{}, SortTableSpec{}} (Val:SortTableType{})), \bottom{SortTableSpec{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortFCodeCell{}} (\exists{SortFCodeCell{}} (X0:SortInstrs{}, Lbl'-LT-'fCode'-GT-'{}(X0:SortInstrs{})), \bottom{SortFCodeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCellOpt{}} (LblnoCurFrameCell{}(), \or{SortCurFrameCellOpt{}} (\exists{SortCurFrameCellOpt{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortCurFrameCellOpt{}} (Val:SortCurFrameCell{})), \bottom{SortCurFrameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFModInstCell{}} (\exists{SortFModInstCell{}} (X0:SortInt{}, Lbl'-LT-'fModInst'-GT-'{}(X0:SortInt{})), \bottom{SortFModInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabAddrsCell{}} (\exists{SortTabAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'tabAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortTabAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortDefn{}} (Val:SortTableDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortDefn{}} (Val:SortImportDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortDefn{}} (Val:SortGlobalDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortDefn{}} (Val:SortFuncDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortDefn{}} (Val:SortTypeDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortDefn{}} (Val:SortElemDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortDefn{}} (Val:SortMemoryDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortDefn{}} (Val:SortStartDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortDefn{}} (Val:SortDataDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortDefn{}} (Val:SortEmptyStmt{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortDefn{}} (Val:SortExportDefn{})), \bottom{SortDefn{}}()))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortPlainInstr{}, Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{})), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortPlainInstr{}, \exists{SortFoldedInstr{}} (X1:SortInstrs{}, Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{})))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, \exists{SortFoldedInstr{}} (X3:SortInstrs{}, \exists{SortFoldedInstr{}} (X4:SortInstrs{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{})))))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, \exists{SortFoldedInstr{}} (X3:SortInstrs{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}))))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{})))), \bottom{SortFoldedInstr{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortNextFreshIdCellOpt{}} (LblnoNextFreshIdCell{}(), \or{SortNextFreshIdCellOpt{}} (\exists{SortNextFreshIdCellOpt{}} (Val:SortNextFreshIdCell{}, inj{SortNextFreshIdCell{}, SortNextFreshIdCellOpt{}} (Val:SortNextFreshIdCell{})), \bottom{SortNextFreshIdCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInlineImport{}} (\exists{SortInlineImport{}} (X0:SortWasmString{}, \exists{SortInlineImport{}} (X1:SortWasmString{}, Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(X0:SortWasmString{}, X1:SortWasmString{}))), \bottom{SortInlineImport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValstackCellOpt{}} (LblnoValstackCell{}(), \or{SortValstackCellOpt{}} (\exists{SortValstackCellOpt{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortValstackCellOpt{}} (Val:SortValstackCell{})), \bottom{SortValstackCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdsCellOpt{}} (LblnoFuncIdsCell{}(), \or{SortFuncIdsCellOpt{}} (\exists{SortFuncIdsCellOpt{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortFuncIdsCellOpt{}} (Val:SortFuncIdsCell{})), \bottom{SortFuncIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}(), \bottom{SortAllocatedKind{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortEmptyStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}(), \or{SortEmptyStmts{}} (\exists{SortEmptyStmts{}} (X0:SortEmptyStmt{}, \exists{SortEmptyStmts{}} (X1:SortEmptyStmts{}, Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(X0:SortEmptyStmt{}, X1:SortEmptyStmts{}))), \bottom{SortEmptyStmts{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemsCellFragment{}} (\exists{SortMemsCellFragment{}} (X0:SortMemInstCellMap{}, Lbl'-LT-'mems'-GT-'-fragment{}(X0:SortMemInstCellMap{})), \bottom{SortMemsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \or{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \or{SortFBinOp{}} (LblfloatAdd{}(), \or{SortFBinOp{}} (LblfloatMul{}(), \or{SortFBinOp{}} (LblfloatSub{}(), \or{SortFBinOp{}} (Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \or{SortFBinOp{}} (Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \bottom{SortFBinOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}(), \or{SortType{}} (\exists{SortType{}} (Val:SortNValType{}, inj{SortNValType{}, SortType{}} (Val:SortNValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortValType{}, inj{SortValType{}, SortType{}} (Val:SortValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortFValType{}, inj{SortFValType{}, SortType{}} (Val:SortFValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortAValType{}, inj{SortAValType{}, SortType{}} (Val:SortAValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortIValType{}, inj{SortIValType{}, SortType{}} (Val:SortIValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortFuncType{}, inj{SortFuncType{}, SortType{}} (Val:SortFuncType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortVecType{}, inj{SortVecType{}, SortType{}} (Val:SortVecType{})), \bottom{SortType{}}())))))))) [constructor{}()] // no junk
  axiom{} \or{SortLocalsCellOpt{}} (LblnoLocalsCell{}(), \or{SortLocalsCellOpt{}} (\exists{SortLocalsCellOpt{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortLocalsCellOpt{}} (Val:SortLocalsCell{})), \bottom{SortLocalsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortWasmCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortWasmCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortOffset{}, \exists{SortDataDefn{}} (X1:SortDataString{}, Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortIndex{}, \exists{SortDataDefn{}} (X1:SortOffset{}, \exists{SortDataDefn{}} (X2:SortDataString{}, Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{})))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortIndex{}, \exists{SortDataDefn{}} (X1:SortBytes{}, Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(X0:SortIndex{}, X1:SortBytes{}))), \bottom{SortDataDefn{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFuncType{}} (\exists{SortFuncType{}} (X0:SortVecType{}, \exists{SortFuncType{}} (X1:SortVecType{}, Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(X0:SortVecType{}, X1:SortVecType{}))), \bottom{SortFuncType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeIdsCell{}} (\exists{SortTypeIdsCell{}} (X0:SortMap{}, Lbl'-LT-'typeIds'-GT-'{}(X0:SortMap{})), \bottom{SortTypeIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortAValType{}, \exists{SortVal{}} (X1:SortNumber{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(X0:SortAValType{}, X1:SortNumber{}))), \or{SortVal{}} (Lblundefined'Unds'WASM-DATA'Unds'Val{}(), \or{SortVal{}} (\exists{SortVal{}} (Val:SortIVal{}, inj{SortIVal{}, SortVal{}} (Val:SortIVal{})), \or{SortVal{}} (\exists{SortVal{}} (Val:SortFVal{}, inj{SortFVal{}, SortVal{}} (Val:SortFVal{})), \bottom{SortVal{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortTabsCellOpt{}} (LblnoTabsCell{}(), \or{SortTabsCellOpt{}} (\exists{SortTabsCellOpt{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortTabsCellOpt{}} (Val:SortTabsCell{})), \bottom{SortTabsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGMutCell{}} (\exists{SortGMutCell{}} (X0:SortMut{}, Lbl'-LT-'gMut'-GT-'{}(X0:SortMut{})), \bottom{SortGMutCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabIdsCell{}} (\exists{SortTabIdsCell{}} (X0:SortMap{}, Lbl'-LT-'tabIds'-GT-'{}(X0:SortMap{})), \bottom{SortTabIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortFrame{}} (\exists{SortFrame{}} (X0:SortInt{}, \exists{SortFrame{}} (X1:SortValTypes{}, \exists{SortFrame{}} (X2:SortValStack{}, \exists{SortFrame{}} (X3:SortMap{}, \exists{SortFrame{}} (X4:SortInt{}, \exists{SortFrame{}} (X5:SortMap{}, Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(X0:SortInt{}, X1:SortValTypes{}, X2:SortValStack{}, X3:SortMap{}, X4:SortInt{}, X5:SortMap{}))))))), \bottom{SortFrame{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), \or{SortInstrs{}} (\exists{SortInstrs{}} (X0:SortInstr{}, \exists{SortInstrs{}} (X1:SortInstrs{}, Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(X0:SortInstr{}, X1:SortInstrs{}))), \or{SortInstrs{}} (\exists{SortInstrs{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortInstrs{}} (Val:SortEmptyStmts{})), \bottom{SortInstrs{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortModIdxCell{}} (\exists{SortModIdxCell{}} (X0:SortInt{}, Lbl'-LT-'modIdx'-GT-'{}(X0:SortInt{})), \bottom{SortModIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFAddrCellOpt{}} (LblnoFAddrCell{}(), \or{SortFAddrCellOpt{}} (\exists{SortFAddrCellOpt{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortFAddrCellOpt{}} (Val:SortFAddrCell{})), \bottom{SortFAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortIdentifier{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortIdentifier{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, \exists{SortBlockInstr{}} (X4:SortInstrs{}, \exists{SortBlockInstr{}} (X5:SortOptionalId{}, Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}))))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortOptionalId{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortIdentifier{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \bottom{SortBlockInstr{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortGlobalAddrsCellOpt{}} (LblnoGlobalAddrsCell{}(), \or{SortGlobalAddrsCellOpt{}} (\exists{SortGlobalAddrsCellOpt{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}} (Val:SortGlobalAddrsCell{})), \bottom{SortGlobalAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortVecType{}} (\exists{SortVecType{}} (X0:SortValTypes{}, Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(X0:SortValTypes{})), \bottom{SortVecType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdentifierToken{}} (\top{SortIdentifierToken{}}(), \bottom{SortIdentifierToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortNextGlobIdxCellOpt{}} (LblnoNextGlobIdxCell{}(), \or{SortNextGlobIdxCellOpt{}} (\exists{SortNextGlobIdxCellOpt{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}} (Val:SortNextGlobIdxCell{})), \bottom{SortNextGlobIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortValStack{}} (Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(), \or{SortValStack{}} (\exists{SortValStack{}} (X0:SortVal{}, \exists{SortValStack{}} (X1:SortValStack{}, Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(X0:SortVal{}, X1:SortValStack{}))), \bottom{SortValStack{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), \or{SortMut{}} (Lblconst'Unds'WASM-DATA'Unds'Mut{}(), \or{SortMut{}} (Lblvar'Unds'WASM-DATA'Unds'Mut{}(), \bottom{SortMut{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCell{}} (\exists{SortModuleInstCell{}} (X0:SortModIdxCell{}, \exists{SortModuleInstCell{}} (X1:SortExportsCell{}, \exists{SortModuleInstCell{}} (X2:SortTypeIdsCell{}, \exists{SortModuleInstCell{}} (X3:SortTypesCell{}, \exists{SortModuleInstCell{}} (X4:SortNextTypeIdxCell{}, \exists{SortModuleInstCell{}} (X5:SortFuncIdsCell{}, \exists{SortModuleInstCell{}} (X6:SortFuncAddrsCell{}, \exists{SortModuleInstCell{}} (X7:SortNextFuncIdxCell{}, \exists{SortModuleInstCell{}} (X8:SortTabIdsCell{}, \exists{SortModuleInstCell{}} (X9:SortTabAddrsCell{}, \exists{SortModuleInstCell{}} (X10:SortMemIdsCell{}, \exists{SortModuleInstCell{}} (X11:SortMemAddrsCell{}, \exists{SortModuleInstCell{}} (X12:SortGlobIdsCell{}, \exists{SortModuleInstCell{}} (X13:SortGlobalAddrsCell{}, \exists{SortModuleInstCell{}} (X14:SortNextGlobIdxCell{}, Lbl'-LT-'moduleInst'-GT-'{}(X0:SortModIdxCell{}, X1:SortExportsCell{}, X2:SortTypeIdsCell{}, X3:SortTypesCell{}, X4:SortNextTypeIdxCell{}, X5:SortFuncIdsCell{}, X6:SortFuncAddrsCell{}, X7:SortNextFuncIdxCell{}, X8:SortTabIdsCell{}, X9:SortTabAddrsCell{}, X10:SortMemIdsCell{}, X11:SortMemAddrsCell{}, X12:SortGlobIdsCell{}, X13:SortGlobalAddrsCell{}, X14:SortNextGlobIdxCell{})))))))))))))))), \bottom{SortModuleInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmIntToken{}} (\top{SortWasmIntToken{}}(), \bottom{SortWasmIntToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFuncDefCellFragment{}} (\exists{SortFuncDefCellFragment{}} (X0:SortFAddrCellOpt{}, \exists{SortFuncDefCellFragment{}} (X1:SortFCodeCellOpt{}, \exists{SortFuncDefCellFragment{}} (X2:SortFTypeCellOpt{}, \exists{SortFuncDefCellFragment{}} (X3:SortFLocalCellOpt{}, \exists{SortFuncDefCellFragment{}} (X4:SortFModInstCellOpt{}, Lbl'-LT-'funcDef'-GT-'-fragment{}(X0:SortFAddrCellOpt{}, X1:SortFCodeCellOpt{}, X2:SortFTypeCellOpt{}, X3:SortFLocalCellOpt{}, X4:SortFModInstCellOpt{})))))), \bottom{SortFuncDefCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOffsetArg{}} (\exists{SortOffsetArg{}} (X0:SortWasmInt{}, Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(X0:SortWasmInt{})), \bottom{SortOffsetArg{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTsizeCellOpt{}} (LblnoTsizeCell{}(), \or{SortTsizeCellOpt{}} (\exists{SortTsizeCellOpt{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortTsizeCellOpt{}} (Val:SortTsizeCell{})), \bottom{SortTsizeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCellFragment{}} (\exists{SortGlobalInstCellFragment{}} (X0:SortGAddrCellOpt{}, \exists{SortGlobalInstCellFragment{}} (X1:SortGValueCellOpt{}, \exists{SortGlobalInstCellFragment{}} (X2:SortGMutCellOpt{}, Lbl'-LT-'globalInst'-GT-'-fragment{}(X0:SortGAddrCellOpt{}, X1:SortGValueCellOpt{}, X2:SortGMutCellOpt{})))), \bottom{SortGlobalInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDecl{}} (\exists{SortTypeDecl{}} (X0:SortTypeKeyWord{}, \exists{SortTypeDecl{}} (X1:SortValTypes{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}))), \or{SortTypeDecl{}} (\exists{SortTypeDecl{}} (X0:SortIdentifier{}, \exists{SortTypeDecl{}} (X1:SortAValType{}, Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}))), \bottom{SortTypeDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvtf32Op{}} (Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), \or{SortCvtf32Op{}} (Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), \or{SortCvtf32Op{}} (Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), \bottom{SortCvtf32Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), \or{SortDefns{}} (\exists{SortDefns{}} (X0:SortDefn{}, \exists{SortDefns{}} (X1:SortDefns{}, Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(X0:SortDefn{}, X1:SortDefns{}))), \or{SortDefns{}} (\exists{SortDefns{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortDefns{}} (Val:SortEmptyStmts{})), \bottom{SortDefns{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortLabelDepthCell{}} (\exists{SortLabelDepthCell{}} (X0:SortInt{}, Lbl'-LT-'labelDepth'-GT-'{}(X0:SortInt{})), \bottom{SortLabelDepthCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMsizeCellOpt{}} (LblnoMsizeCell{}(), \or{SortMsizeCellOpt{}} (\exists{SortMsizeCellOpt{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortMsizeCellOpt{}} (Val:SortMsizeCell{})), \bottom{SortMsizeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemsCell{}} (\exists{SortMemsCell{}} (X0:SortMemInstCellMap{}, Lbl'-LT-'mems'-GT-'{}(X0:SortMemInstCellMap{})), \bottom{SortMemsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \bottom{SortFUnOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortInlineExport{}} (\exists{SortInlineExport{}} (X0:SortWasmString{}, Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(X0:SortWasmString{})), \bottom{SortInlineExport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValTypes{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(), \or{SortValTypes{}} (\exists{SortValTypes{}} (X0:SortValType{}, \exists{SortValTypes{}} (X1:SortValTypes{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(X0:SortValType{}, X1:SortValTypes{}))), \bottom{SortValTypes{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortWasmCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortWasmCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypesCell{}} (\exists{SortTypesCell{}} (X0:SortMap{}, Lbl'-LT-'types'-GT-'{}(X0:SortMap{})), \bottom{SortTypesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalAddrsCell{}} (\exists{SortGlobalAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'globalAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortGlobalAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBytes{}} (\top{SortBytes{}}(), \bottom{SortBytes{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortMdataCellOpt{}} (LblnoMdataCell{}(), \or{SortMdataCellOpt{}} (\exists{SortMdataCellOpt{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortMdataCellOpt{}} (Val:SortMdataCell{})), \bottom{SortMdataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortEmptyStmt{}}() [constructor{}()] // no junk
  axiom{} \or{SortExportDefn{}} (\exists{SortExportDefn{}} (X0:SortWasmString{}, \exists{SortExportDefn{}} (X1:SortExternval{}, Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}))), \bottom{SortExportDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdsCellOpt{}} (LblnoModuleIdsCell{}(), \or{SortModuleIdsCellOpt{}} (\exists{SortModuleIdsCellOpt{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortModuleIdsCellOpt{}} (Val:SortModuleIdsCell{})), \bottom{SortModuleIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCellOpt{}} (LblnoGlobalsCell{}(), \or{SortGlobalsCellOpt{}} (\exists{SortGlobalsCellOpt{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortGlobalsCellOpt{}} (Val:SortGlobalsCell{})), \bottom{SortGlobalsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncAddrCellOpt{}} (LblnoNextFuncAddrCell{}(), \or{SortNextFuncAddrCellOpt{}} (\exists{SortNextFuncAddrCellOpt{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}} (Val:SortNextFuncAddrCell{})), \bottom{SortNextFuncAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTableType{}} (\exists{SortTableType{}} (X0:SortLimits{}, \exists{SortTableType{}} (X1:SortTableElemType{}, Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(X0:SortLimits{}, X1:SortTableElemType{}))), \bottom{SortTableType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOptionalInt{}} (Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}(), \or{SortOptionalInt{}} (\exists{SortOptionalInt{}} (Val:SortInt{}, inj{SortInt{}, SortOptionalInt{}} (Val:SortInt{})), \bottom{SortOptionalInt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortByteMap{}} (\exists{SortByteMap{}} (X0:SortMap{}, LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(X0:SortMap{})), \bottom{SortByteMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypesCellOpt{}} (LblnoTypesCell{}(), \or{SortTypesCellOpt{}} (\exists{SortTypesCellOpt{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortTypesCellOpt{}} (Val:SortTypesCell{})), \bottom{SortTypesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), \or{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), \or{SortCvti64Op{}} (Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), \bottom{SortCvti64Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMmaxCell{}} (\exists{SortMmaxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'mmax'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortMmaxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (X0:SortAValType{}, Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(X0:SortAValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortFValType{}, inj{SortFValType{}, SortTextFormatGlobalType{}} (Val:SortFValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortAValType{}, inj{SortAValType{}, SortTextFormatGlobalType{}} (Val:SortAValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortIValType{}, inj{SortIValType{}, SortTextFormatGlobalType{}} (Val:SortIValType{})), \bottom{SortTextFormatGlobalType{}}())))) [constructor{}()] // no junk
  axiom{R} \equals{SortVal{}, R} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortFValType{}, SortAValType{}} (K0:SortFValType{}),inj{SortFloat{}, SortNumber{}} (K1:SortFloat{})), inj{SortFVal{}, SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(K0:SortFValType{},K1:SortFloat{}))) [overload{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortEmptyStmt{}, SortStmt{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortStmts{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortDefns{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortEmptyStmt{}, SortDefn{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortDefns{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortDefns{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortInstrs{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortEmptyStmt{}, SortInstr{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortInstrs{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortInstrs{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortDefn{}, SortStmt{}} (K0:SortDefn{}),inj{SortDefns{}, SortStmts{}} (K1:SortDefns{})), inj{SortDefns{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(K0:SortDefn{},K1:SortDefns{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortInstrs{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())] // overloaded production
  axiom{R} \equals{SortVal{}, R} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}} (K0:SortIValType{}),inj{SortInt{}, SortNumber{}} (K1:SortInt{})), inj{SortIVal{}, SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(K0:SortIValType{},K1:SortInt{}))) [overload{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortEmptyStmts{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortInstrs{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), inj{SortEmptyStmts{}, SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortDefns{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), inj{SortEmptyStmts{}, SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortInstr{}, SortStmt{}} (K0:SortInstr{}),inj{SortInstrs{}, SortStmts{}} (K1:SortInstrs{})), inj{SortInstrs{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(K0:SortInstr{},K1:SortInstrs{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortDefns{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())] // overloaded production

// rules
// rule #Ceil{Int,#SortParam}(`_%Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(277564ad2537209fd698729ceaa01973f97125176cf1078f98e2edb7cc190f34), anywhere, contentStartColumn(5), contentStartLine(458), org.kframework.attributes.Location(Location(458,5,460,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'UndsPerc'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), sortParams{}("[Q0]"), contentStartLine{}("458"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(458,5,460,66)"), simplification{}(), UNIQUE'Unds'ID{}("277564ad2537209fd698729ceaa01973f97125176cf1078f98e2edb7cc190f34")]

// rule #Ceil{Int,#SortParam}(`_/Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1eefe48360417c30b8e5f115a539adbc38e337fa903d6c589811e7b619f8d1cd), anywhere, contentStartColumn(5), contentStartLine(452), org.kframework.attributes.Location(Location(452,5,454,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'UndsSlsh'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), sortParams{}("[Q0]"), contentStartLine{}("452"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(452,5,454,66)"), simplification{}(), UNIQUE'Unds'ID{}("1eefe48360417c30b8e5f115a539adbc38e337fa903d6c589811e7b619f8d1cd")]

// rule #Ceil{Int,#SortParam}(`_<<Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b052005b3756fb7082a3e365e1de3b170b4b0d828aab504a9ec2cfd19666528), anywhere, contentStartColumn(5), contentStartLine(476), org.kframework.attributes.Location(Location(476,5,478,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds-LT--LT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), sortParams{}("[Q0]"), contentStartLine{}("476"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,5,478,65)"), simplification{}(), UNIQUE'Unds'ID{}("0b052005b3756fb7082a3e365e1de3b170b4b0d828aab504a9ec2cfd19666528")]

// rule #Ceil{Int,#SortParam}(`_>>Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8504798d0c71a9c32788426e50147e59ac302592e16aa6bae4511370fd436af8), anywhere, contentStartColumn(5), contentStartLine(470), org.kframework.attributes.Location(Location(470,5,472,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds-GT--GT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), sortParams{}("[Q0]"), contentStartLine{}("470"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(470,5,472,65)"), simplification{}(), UNIQUE'Unds'ID{}("8504798d0c71a9c32788426e50147e59ac302592e16aa6bae4511370fd436af8")]

// rule #Ceil{Int,#SortParam}(`_modInt_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f864cd1e17e48500bc78b5fa83b901031cdbfd8f0575388667ce1475a2a7f532), anywhere, contentStartColumn(5), contentStartLine(464), org.kframework.attributes.Location(Location(464,5,466,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds'modInt'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), sortParams{}("[Q0]"), contentStartLine{}("464"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(464,5,466,66)"), simplification{}(), UNIQUE'Unds'ID{}("f864cd1e17e48500bc78b5fa83b901031cdbfd8f0575388667ce1475a2a7f532")]

// rule `#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,inj{Int,Index}(I))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc05657ff92cc6b66df3ee5d5c5bc50853b3f587c0b8ca1e005f9aa76f6b37be), contentStartColumn(10), contentStartLine(75), org.kframework.attributes.Location(Location(75,10,75,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},inj{SortInt{}, SortIndex{}}(VarI:SortInt{})),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("75"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,10,75,45)"), UNIQUE'Unds'ID{}("bc05657ff92cc6b66df3ee5d5c5bc50853b3f587c0b8ca1e005f9aa76f6b37be")]

// rule `#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,inj{Identifier,Index}(ID))=>`project:Int`(`Map:lookup`(IDS,inj{Identifier,KItem}(ID))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),IDS) ensures #token("true","Bool") [UNIQUE_ID(fe974a5febf8c8a9cbe3fda608f423fbb6279d1ec26d7059387d402414901ea7), contentStartColumn(10), contentStartLine(169), org.kframework.attributes.Location(Location(169,10,170,31)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarIDS:SortMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})),
        Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("169"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,10,170,31)"), UNIQUE'Unds'ID{}("fe974a5febf8c8a9cbe3fda608f423fbb6279d1ec26d7059387d402414901ea7")]

// rule `#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS)=>`String2Bytes(_)_BYTES-HOOKED_Bytes_String`(`#concatDS(_)_WASM-DATA_String_DataString`(DS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b127959d1ceb0fec17e112d36b1e801fb80c1b619a973385f0f0ad7bac349699), contentStartColumn(10), contentStartLine(493), org.kframework.attributes.Location(Location(493,10,493,54)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarDS:SortDataString{}),
        LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(VarDS:SortDataString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("493"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(493,10,493,54)"), UNIQUE'Unds'ID{}("b127959d1ceb0fec17e112d36b1e801fb80c1b619a973385f0f0ad7bac349699")]

// rule `#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList),VTYPES)=>`[_]_WASM-DATA_VecType_ValTypes`(VTYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(883e27ec6788f9fd021237c54c8fc11540f3690bd4d4ff1d0c11f934efe864cc), contentStartColumn(10), contentStartLine(632), org.kframework.attributes.Location(Location(632,10,632,101)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(),VarVTYPES:SortValTypes{}),
        Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarVTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("632"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,10,632,101)"), UNIQUE'Unds'ID{}("883e27ec6788f9fd021237c54c8fc11540f3690bd4d4ff1d0c11f934efe864cc")]

// rule `#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local__WASM_LocalDecl_ValTypes`(VTYPES'),LDECLS),VTYPES)=>`#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(LDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,VTYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d139b6116369e037649b19f2ab6d82caa39cbc83e31007c8968488ff1bfcc74c), contentStartColumn(10), contentStartLine(633), org.kframework.attributes.Location(Location(633,10,633,130)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(VarVTYPES'Apos':SortValTypes{}),VarLDECLS:SortLocalDecls{}),VarVTYPES:SortValTypes{}),
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},VarVTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("633"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(633,10,633,130)"), UNIQUE'Unds'ID{}("d139b6116369e037649b19f2ab6d82caa39cbc83e31007c8968488ff1bfcc74c")]

// rule `#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local___WASM_LocalDecl_Identifier_AValType`(ID,VTYPE),LDECLS),VTYPES)=>`#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(LDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,VTYPE)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aed299db931814c4f893e9c4e6b2accaaa00f057e972afb4cda11b08850ad2d0), contentStartColumn(10), contentStartLine(634), org.kframework.attributes.Location(Location(634,10,634,145)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{}),VarLDECLS:SortLocalDecls{}),VarVTYPES:SortValTypes{}),
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{})),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("634"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,10,634,145)"), UNIQUE'Unds'ID{}("aed299db931814c4f893e9c4e6b2accaaa00f057e972afb4cda11b08850ad2d0")]

// rule `#bool(_)_WASM-DATA_Int_Bool`(B)=>#token("0","Int") requires `notBool_`(B) ensures #token("true","Bool") [UNIQUE_ID(8256ae36fcfaf4fad38ae83cb8e2fda0ea98291a25b6cad4b02538a261e206c9), contentStartColumn(10), contentStartLine(329), org.kframework.attributes.Location(Location(329,10,329,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarB:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarB:SortBool{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("329"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(329,10,329,49)"), UNIQUE'Unds'ID{}("8256ae36fcfaf4fad38ae83cb8e2fda0ea98291a25b6cad4b02538a261e206c9")]

// rule `#bool(_)_WASM-DATA_Int_Bool`(B)=>#token("1","Int") requires B ensures #token("true","Bool") [UNIQUE_ID(3f2c49e94fe97d6c8d1dbf4a4906fde1219e009e925b498bf34cd2e48d3f7a7b), contentStartColumn(10), contentStartLine(328), org.kframework.attributes.Location(Location(328,10,328,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarB:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarB:SortBool{}),
        \dv{SortInt{}}("1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("328"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,10,328,49)"), UNIQUE'Unds'ID{}("3f2c49e94fe97d6c8d1dbf4a4906fde1219e009e925b498bf34cd2e48d3f7a7b")]

// rule `#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,N))=>`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_modInt_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ac5f46092f344ae11ac12e5cf4dca222de05b17eaaa41d74034cc04421a515b), contentStartColumn(10), contentStartLine(275), org.kframework.attributes.Location(Location(275,10,275,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIVal{},R} (
        Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("275"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(275,10,275,64)"), UNIQUE'Unds'ID{}("2ac5f46092f344ae11ac12e5cf4dca222de05b17eaaa41d74034cc04421a515b")]

// rule `#concatDS(_)_WASM-DATA_String_DataString`(DS)=>`#concatDS(_,_)_WASM-DATA_String_DataString_String`(DS,#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5d6d0a82ef4efa834ceb5ba7a5ced4c5b18a95c1eddc228afc265c59532d42a), contentStartColumn(10), contentStartLine(483), org.kframework.attributes.Location(Location(483,10,483,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(VarDS:SortDataString{}),
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(VarDS:SortDataString{},\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("483"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,10,483,50)"), UNIQUE'Unds'ID{}("a5d6d0a82ef4efa834ceb5ba7a5ced4c5b18a95c1eddc228afc265c59532d42a")]

// rule `#concatDS(_,_)_WASM-DATA_String_DataString_String`(`.List{"___WASM-DATA_DataString_WasmString_DataString"}_DataString`(.KList),S)=>S requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(89378e8e88766f6708bd343322e9f30785d30177c38be6c615f7a6b2a3341561), contentStartColumn(10), contentStartLine(484), org.kframework.attributes.Location(Location(484,10,484,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(),VarS:SortString{}),
        VarS:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("484"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(484,10,484,55)"), UNIQUE'Unds'ID{}("89378e8e88766f6708bd343322e9f30785d30177c38be6c615f7a6b2a3341561")]

// rule `#concatDS(_,_)_WASM-DATA_String_DataString_String`(`___WASM-DATA_DataString_WasmString_DataString`(inj{WasmStringToken,WasmString}(WS),DS),S)=>`#concatDS(_,_)_WASM-DATA_String_DataString_String`(DS,`_+String__STRING-COMMON_String_String_String`(S,`unescape(_)_WASM-DATA_String_String`(`#parseWasmString(_)_WASM-DATA_String_WasmStringToken`(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5bc5c8b88a27691a6b602119265328855795dae2c897de428e1cfe374f2739ca), contentStartColumn(10), contentStartLine(485), org.kframework.attributes.Location(Location(485,10,485,113)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(inj{SortWasmStringToken{}, SortWasmString{}}(VarWS:SortWasmStringToken{}),VarDS:SortDataString{}),VarS:SortString{}),
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(VarDS:SortDataString{},Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmStringToken{}(VarWS:SortWasmStringToken{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("485"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(485,10,485,113)"), UNIQUE'Unds'ID{}("5bc5c8b88a27691a6b602119265328855795dae2c897de428e1cfe374f2739ca")]

// rule `#ctz(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa89ff8167d9b27e9f2929243b40651d00202c433d2bd578a8231ea48ff495f9), contentStartColumn(10), contentStartLine(50), org.kframework.attributes.Location(Location(50,10,50,22)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{})),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("50"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,10,50,22)"), UNIQUE'Unds'ID{}("aa89ff8167d9b27e9f2929243b40651d00202c433d2bd578a8231ea48ff495f9")]

// rule `#ctz(_)_WASM-NUMERIC_Int_Int`(N)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`_modInt_`(N,#token("2","Int")),#token("1","Int")),#token("0","Int"),`_+Int_`(#token("1","Int"),`#ctz(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int"))))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2cbf87f2c95e110e241d76d0e65c4bb59b6de6f42a57b4ba26b3ccc6b97700df), contentStartColumn(10), contentStartLine(51), org.kframework.attributes.Location(Location(51,10,51,105)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarN:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1")),\dv{SortInt{}}("0"),Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("51"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,10,51,105)"), UNIQUE'Unds'ID{}("2cbf87f2c95e110e241d76d0e65c4bb59b6de6f42a57b4ba26b3ccc6b97700df")]

// rule `#distinctBits(_,_)_KWASM-LEMMAS_Bool_Int_Int`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_0,_1,WIDTH),`_<<Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_2,_3,_4),SHIFT))=>#token("true","Bool") requires `_<=Int_`(`_*Int_`(WIDTH,#token("8","Int")),SHIFT) ensures #token("true","Bool") [UNIQUE_ID(cd6473f6e3b92d1bd4bdf8116a33d41456ee6297ca82bfcfe43b5fcaf6ac6679), contentStartColumn(10), contentStartLine(326), org.kframework.attributes.Location(Location(326,10,326,121)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("8")),VarSHIFT:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'distinctBits'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'Int'Unds'Int{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'0:SortByteMap{},Var'Unds'1:SortInt{},VarWIDTH:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'2:SortByteMap{},Var'Unds'3:SortInt{},Var'Unds'4:SortInt{}),VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("326"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,10,326,121)"), simplification{}(), UNIQUE'Unds'ID{}("cd6473f6e3b92d1bd4bdf8116a33d41456ee6297ca82bfcfe43b5fcaf6ac6679")]

// rule `#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`.ValStack_WASM-DATA_ValStack`(.KList) #as _0)=>_0 requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(042dd97aac4f1bfd219be78582b61a03554486c002056f0739f1f3fa6c44771b), contentStartColumn(10), contentStartLine(372), org.kframework.attributes.Location(Location(372,10,372,78)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(VarN:SortInt{},\and{SortValStack{}}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),Var'Unds'0:SortValStack{})),
        Var'Unds'0:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("372"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,10,372,78)"), UNIQUE'Unds'ID{}("042dd97aac4f1bfd219be78582b61a03554486c002056f0739f1f3fa6c44771b")]

// rule `#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,VS)=>VS requires `notBool_`(`_>Int_`(N,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(1663d5fa9ac3aac508bb8eab1a6e90bb1b5103fc716ae3040b70346764ba0852), contentStartColumn(10), contentStartLine(371), org.kframework.attributes.Location(Location(371,10,371,78)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(VarN:SortInt{},VarVS:SortValStack{}),
        VarVS:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("371"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,10,371,78)"), UNIQUE'Unds'ID{}("1663d5fa9ac3aac508bb8eab1a6e90bb1b5103fc716ae3040b70346764ba0852")]

// rule `#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(_0,VS))=>`#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(`_-Int_`(N,#token("1","Int")),VS) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(5242a5d132cf16a9b4a1b60f1f59a6ca089d708760acc25e1000982d45a2e90d), contentStartColumn(10), contentStartLine(373), org.kframework.attributes.Location(Location(373,10,373,78)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(VarN:SortInt{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Var'Unds'0:SortVal{},VarVS:SortValStack{})),
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVS:SortValStack{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("373"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,10,373,78)"), UNIQUE'Unds'ID{}("5242a5d132cf16a9b4a1b60f1f59a6ca089d708760acc25e1000982d45a2e90d")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_<=Int_`(I,#token("127","Int")) ensures #token("true","Bool") [UNIQUE_ID(85a70ef5a05f14c4e89d5f88b0181eea2fcfa77b9619c5bc77a228ca86586d70), contentStartColumn(10), contentStartLine(447), org.kframework.attributes.Location(Location(447,10,447,79)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("127")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("447"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(447,10,447,79)"), UNIQUE'Unds'ID{}("85a70ef5a05f14c4e89d5f88b0181eea2fcfa77b9619c5bc77a228ca86586d70")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_+Int_`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("1835008","Int")),#token("18","Int")),#token("240","Int")),#token("24","Int")),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("258048","Int")),#token("12","Int")),#token("128","Int")),#token("16","Int"))),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("4032","Int")),#token("6","Int")),#token("128","Int")),#token("8","Int"))),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("65536","Int")),`_<=Int_`(I,#token("1114111","Int"))) ensures #token("true","Bool") [UNIQUE_ID(c4b50633dff9ef8266c9a7973aec9c86e4182f499392b3c68890d35058553baa), contentStartColumn(10), contentStartLine(452), org.kframework.attributes.Location(Location(452,10,453,53)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("65536")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1114111"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1835008")),\dv{SortInt{}}("18")),\dv{SortInt{}}("240")),\dv{SortInt{}}("24")),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("258048")),\dv{SortInt{}}("12")),\dv{SortInt{}}("128")),\dv{SortInt{}}("16"))),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("4032")),\dv{SortInt{}}("6")),\dv{SortInt{}}("128")),\dv{SortInt{}}("8"))),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("452"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(452,10,453,53)"), UNIQUE'Unds'ID{}("c4b50633dff9ef8266c9a7973aec9c86e4182f499392b3c68890d35058553baa")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("61440","Int")),#token("12","Int")),#token("224","Int")),#token("16","Int")),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("4032","Int")),#token("6","Int")),#token("128","Int")),#token("8","Int"))),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("2048","Int")),`_<=Int_`(I,#token("65535","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7f1a24acfa640772153a3ff53e982d2d196c0379bb38fb67ff98fab8784058fa), contentStartColumn(10), contentStartLine(450), org.kframework.attributes.Location(Location(450,10,451,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("2048")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("65535"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("61440")),\dv{SortInt{}}("12")),\dv{SortInt{}}("224")),\dv{SortInt{}}("16")),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("4032")),\dv{SortInt{}}("6")),\dv{SortInt{}}("128")),\dv{SortInt{}}("8"))),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("450"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(450,10,451,51)"), UNIQUE'Unds'ID{}("7f1a24acfa640772153a3ff53e982d2d196c0379bb38fb67ff98fab8784058fa")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("1984","Int")),#token("6","Int")),#token("192","Int")),#token("8","Int")),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("128","Int")),`_<=Int_`(I,#token("2047","Int"))) ensures #token("true","Bool") [UNIQUE_ID(c781ac366d4c88e9353fb805672b5b75158700abb77bb2bf0bf7001db478754f), contentStartColumn(10), contentStartLine(448), org.kframework.attributes.Location(Location(448,10,449,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("128")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("2047"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1984")),\dv{SortInt{}}("6")),\dv{SortInt{}}("192")),\dv{SortInt{}}("8")),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("448"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(448,10,449,50)"), UNIQUE'Unds'ID{}("c781ac366d4c88e9353fb805672b5b75158700abb77bb2bf0bf7001db478754f")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(`param_WASM_TypeKeyWord`(.KList) #as _0,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`param___WASM_TypeDecl_Identifier_AValType`(ID,VTYPE),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_0,TDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TYPES,`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,VTYPE)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(11d72b7bb61ebb1306d6ac964425a3d014084ec7ef31bee4b0767353dee36092), contentStartColumn(10), contentStartLine(566), org.kframework.attributes.Location(Location(566,10,566,158)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(\and{SortTypeKeyWord{}}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'0:SortTypeKeyWord{}),Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'0:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTYPES:SortValTypes{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{})),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("566"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,10,566,158)"), UNIQUE'Unds'ID{}("11d72b7bb61ebb1306d6ac964425a3d014084ec7ef31bee4b0767353dee36092")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(`result_WASM_TypeKeyWord`(.KList) #as _1,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`param___WASM_TypeDecl_Identifier_AValType`(ID,_0),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_1,TDECLS,TYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(606f66b75834d64fb1052b344da9cb892ccd3df077c60f278d316d31762671b7), contentStartColumn(10), contentStartLine(565), org.kframework.attributes.Location(Location(565,10,565,133)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(\and{SortTypeKeyWord{}}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'1:SortTypeKeyWord{}),Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},Var'Unds'0:SortAValType{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'1:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("565"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(565,10,565,133)"), UNIQUE'Unds'ID{}("606f66b75834d64fb1052b344da9cb892ccd3df077c60f278d316d31762671b7")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(TKW,TYPES'),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TYPES,TYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6fde491469cbcc0540f118f41b8ad292247738dcf645bab11b3989f45bf47024), contentStartColumn(10), contentStartLine(563), org.kframework.attributes.Location(Location(563,10,564,91)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTYPES'Apos':SortValTypes{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTYPES:SortValTypes{},VarTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("563"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,10,564,91)"), UNIQUE'Unds'ID{}("6fde491469cbcc0540f118f41b8ad292247738dcf645bab11b3989f45bf47024")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(TKW',_0),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,TYPES) requires `_=/=K_`(inj{TypeKeyWord,KItem}(TKW),inj{TypeKeyWord,KItem}(TKW')) ensures #token("true","Bool") [UNIQUE_ID(70b61351085f3edf7cf6c5d26f7e7647a515676bbdbbcbf6900af4be4b5f9135), contentStartColumn(10), contentStartLine(562), org.kframework.attributes.Location(Location(562,10,562,141)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTKW:SortTypeKeyWord{}),dotk{}()),kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTKW'Apos':SortTypeKeyWord{}),dotk{}())),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(VarTKW'Apos':SortTypeKeyWord{},Var'Unds'0:SortValTypes{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("562"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(562,10,562,141)"), UNIQUE'Unds'ID{}("70b61351085f3edf7cf6c5d26f7e7647a515676bbdbbcbf6900af4be4b5f9135")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_0,`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),TYPES)=>`[_]_WASM-DATA_VecType_ValTypes`(TYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6cade93a4d90c5bec8c53a178227ea0c0e2d6c7370fc99e14c6bc9bba43a518f), contentStartColumn(10), contentStartLine(561), org.kframework.attributes.Location(Location(561,10,561,95)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'0:SortTypeKeyWord{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(),VarTYPES:SortValTypes{}),
        Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("561"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,10,561,95)"), UNIQUE'Unds'ID{}("6cade93a4d90c5bec8c53a178227ea0c0e2d6c7370fc99e14c6bc9bba43a518f")]

// rule `#get(_,_)_WASM-DATA_Int_ByteMap_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M) #as _0,KEY)=>`project:Int`(`Map:lookup`(M,inj{Int,KItem}(KEY))) requires `_inBytes__WASM-DATA_Bool_Int_ByteMap`(KEY,_0) ensures #token("true","Bool") [UNIQUE_ID(fb6fba340f7157ccc412185ac59e14a891fb413c395d27fb4ff996dda47a53ec), concrete, contentStartColumn(10), contentStartLine(538), org.kframework.attributes.Location(Location(538,10,538,101)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(VarKEY:SortInt{},Var'Unds'0:SortByteMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(\and{SortByteMap{}}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),Var'Unds'0:SortByteMap{}),VarKEY:SortInt{}),
        Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{})),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), concrete{}(), contentStartLine{}("538"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(538,10,538,101)"), UNIQUE'Unds'ID{}("fb6fba340f7157ccc412185ac59e14a891fb413c395d27fb4ff996dda47a53ec")]

// rule `#get(_,_)_WASM-DATA_Int_ByteMap_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M) #as _0,KEY)=>#token("0","Int") requires `notBool_`(`_inBytes__WASM-DATA_Bool_Int_ByteMap`(KEY,_0)) ensures #token("true","Bool") [UNIQUE_ID(6901222c4e488d1a9544249d5ed7dfcd29c1ef7fb8ba53a178257e3652eecdc2), contentStartColumn(10), contentStartLine(539), org.kframework.attributes.Location(Location(539,10,539,101)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(VarKEY:SortInt{},Var'Unds'0:SortByteMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(\and{SortByteMap{}}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),Var'Unds'0:SortByteMap{}),VarKEY:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("539"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,10,539,101)"), UNIQUE'Unds'ID{}("6901222c4e488d1a9544249d5ed7dfcd29c1ef7fb8ba53a178257e3652eecdc2")]

// rule `#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(`___WASM-DATA_ElemSegment_Index_ElemSegment`(E,ES),I)=>`#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(ES,`_-Int_`(I,#token("1","Int"))) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(20fdb47e5c1c25ab07ab5d4fbd1f7b244ef95286c87f9be8afe73e30d996b2a7), contentStartColumn(10), contentStartLine(94), org.kframework.attributes.Location(Location(94,10,94,85)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortIndex{},R} (
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{}),VarI:SortInt{}),
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(VarES:SortElemSegment{},Lbl'Unds'-Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("94"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,10,94,85)"), UNIQUE'Unds'ID{}("20fdb47e5c1c25ab07ab5d4fbd1f7b244ef95286c87f9be8afe73e30d996b2a7")]

// rule `#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(`___WASM-DATA_ElemSegment_Index_ElemSegment`(E,ES),#token("0","Int"))=>E requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f074f73f8f4911b1b261d56927d92631315fdf37ade7afd3de99516061b3214), contentStartColumn(10), contentStartLine(93), org.kframework.attributes.Location(Location(93,10,93,39)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIndex{},R} (
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{}),\dv{SortInt{}}("0")),
        VarE:SortIndex{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("93"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,10,93,39)"), UNIQUE'Unds'ID{}("1f074f73f8f4911b1b261d56927d92631315fdf37ade7afd3de99516061b3214")]

// rule `#getOffset(_)_WASM_Int_MemArg`(`___WASM_MemArg_OffsetArg_AlignArg`(`offset=__WASM_OffsetArg_WasmInt`(inj{Int,WasmInt}(OS)),_0))=>OS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b1a8d1aacde2a03dedb4ff396d8b5b0baf410b17551966f94d0f645232c57243), contentStartColumn(10), contentStartLine(1085), org.kframework.attributes.Location(Location(1085,10,1085,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(inj{SortInt{}, SortWasmInt{}}(VarOS:SortInt{})),Var'Unds'0:SortAlignArg{})),
        VarOS:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1085"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1085,10,1085,49)"), UNIQUE'Unds'ID{}("b1a8d1aacde2a03dedb4ff396d8b5b0baf410b17551966f94d0f645232c57243")]

// rule `#getOffset(_)_WASM_Int_MemArg`(inj{AlignArg,MemArg}(_0))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f2c2e5d588e526eb3dbfa63255c70564449303e22629456e92a8fb89e7511b1), contentStartColumn(10), contentStartLine(1083), org.kframework.attributes.Location(Location(1083,10,1083,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(inj{SortAlignArg{}, SortMemArg{}}(Var'Unds'0:SortAlignArg{})),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1083"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1083,10,1083,48)"), UNIQUE'Unds'ID{}("1f2c2e5d588e526eb3dbfa63255c70564449303e22629456e92a8fb89e7511b1")]

// rule `#getOffset(_)_WASM_Int_MemArg`(inj{OffsetArg,MemArg}(`offset=__WASM_OffsetArg_WasmInt`(inj{Int,WasmInt}(OS))))=>OS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e9a2ff610882f49aec9490cc77fe85d6e7a602552d57281a42f760406bf6170), contentStartColumn(10), contentStartLine(1084), org.kframework.attributes.Location(Location(1084,10,1084,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(inj{SortOffsetArg{}, SortMemArg{}}(Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'WasmInt{}(inj{SortInt{}, SortWasmInt{}}(VarOS:SortInt{})))),
        VarOS:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1084"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1084,10,1084,49)"), UNIQUE'Unds'ID{}("3e9a2ff610882f49aec9490cc77fe85d6e7a602552d57281a42f760406bf6170")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH)=>`_+Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR),`_*Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,`_+Int_`(ADDR,#token("1","Int")),`_-Int_`(WIDTH,#token("1","Int"))),#token("256","Int"))) requires `_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),ADDR)) ensures #token("true","Bool") [UNIQUE_ID(8c6930c60aa94b92129de55c0f99631b594aa64cdd375636182ecb5bd73ba6fe), concrete, contentStartColumn(10), contentStartLine(527), org.kframework.attributes.Location(Location(527,10,527,163)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{}),Lbl'UndsStar'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("1")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),\dv{SortInt{}}("256")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), concrete{}(), contentStartLine{}("527"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(527,10,527,163)"), UNIQUE'Unds'ID{}("8c6930c60aa94b92129de55c0f99631b594aa64cdd375636182ecb5bd73ba6fe")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_0,ADDR,WIDTH)=>#token("0","Int") requires `notBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),ADDR))) ensures #token("true","Bool") [UNIQUE_ID(68f4f63b7decd2604d7a6c4faaa70ef62b9b89861c099c35bfd23e33fdb906bb), contentStartColumn(10), contentStartLine(526), org.kframework.attributes.Location(Location(526,10,526,164)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'0:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("526"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,10,526,164)"), UNIQUE'Unds'ID{}("68f4f63b7decd2604d7a6c4faaa70ef62b9b89861c099c35bfd23e33fdb906bb")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,VAL,WIDTH),ADDR',WIDTH')=>VAL requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),ADDR),`_<Int_`(#token("0","Int"),WIDTH)),`_<=Int_`(#token("0","Int"),VAL)),`_<Int_`(VAL,`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),WIDTH)))),`_==Int_`(ADDR',ADDR)),`_==Int_`(WIDTH',WIDTH)) ensures #token("true","Bool") [UNIQUE_ID(3eca69a8d7232a9b6be317a51be3de9ead725396891b315799e35ba81379a680), contentStartColumn(10), contentStartLine(359), org.kframework.attributes.Location(Location(359,10,364,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarVAL:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),VarWIDTH:SortInt{})))),Lbl'UndsEqlsEqls'Int'Unds'{}(VarADDR'Apos':SortInt{},VarADDR:SortInt{})),Lbl'UndsEqlsEqls'Int'Unds'{}(VarWIDTH'Apos':SortInt{},VarWIDTH:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),
        VarVAL:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("359"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,10,364,34)"), simplification{}(), UNIQUE'Unds'ID{}("3eca69a8d7232a9b6be317a51be3de9ead725396891b315799e35ba81379a680")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,VAL,WIDTH),ADDR',WIDTH')=>`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR',WIDTH') requires `_<=Int_`(`_+Int_`(ADDR',WIDTH'),ADDR) ensures #token("true","Bool") [UNIQUE_ID(a88ece94d344bc7e3725140c7a5a82d468a7c93c9f1c5da790b70a64e14f9851), contentStartColumn(10), contentStartLine(357), org.kframework.attributes.Location(Location(357,10,357,137)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),VarADDR:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("357"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,10,357,137)"), simplification{}(), UNIQUE'Unds'ID{}("a88ece94d344bc7e3725140c7a5a82d468a7c93c9f1c5da790b70a64e14f9851")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,VAL,WIDTH),ADDR',WIDTH')=>`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR',WIDTH') requires `_<=Int_`(`_+Int_`(ADDR,WIDTH),ADDR') ensures #token("true","Bool") [UNIQUE_ID(6bfe49385f40b3de09dcd714528e8d3b0176fa2c216b0d37672727dc46aad5b5), contentStartColumn(10), contentStartLine(358), org.kframework.attributes.Location(Location(358,10,358,138)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("358"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,10,358,138)"), simplification{}(), UNIQUE'Unds'ID{}("6bfe49385f40b3de09dcd714528e8d3b0176fa2c216b0d37672727dc46aad5b5")]

// rule `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,`.Int_WASM-DATA_OptionalInt`(.KList))=>`_<=Int_`(SIZE,`#maxMemorySize()_WASM_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b43060194e57cd43e073ee33e92088710724fdfd6cf882aeb534ac164e714413), contentStartColumn(10), contentStartLine(1156), org.kframework.attributes.Location(Location(1156,10,1156,68)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1156"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1156,10,1156,68)"), UNIQUE'Unds'ID{}("b43060194e57cd43e073ee33e92088710724fdfd6cf882aeb534ac164e714413")]

// rule `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,inj{Int,OptionalInt}(I))=>`_andBool_`(`#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,`.Int_WASM-DATA_OptionalInt`(.KList)),`_<=Int_`(SIZE,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dc62ed0511054cff828dd705fc8d0745c2f0c2301e97cf3962d938c20c6306c7), contentStartColumn(10), contentStartLine(1157), org.kframework.attributes.Location(Location(1157,10,1157,88)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarI:SortInt{})),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarSIZE:SortInt{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1157"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1157,10,1157,88)"), UNIQUE'Unds'ID{}("dc62ed0511054cff828dd705fc8d0745c2f0c2301e97cf3962d938c20c6306c7")]

// rule `#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(TU,LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(#token("0","Int"),TU,LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(047bacdeef9cdff3cbd45c18d516a3e1e533d2bbd746c582431f5f9bd0c6b131), contentStartColumn(10), contentStartLine(581), org.kframework.attributes.Location(Location(581,10,581,53)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(VarTU:SortTypeUse{},VarLDS:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(\dv{SortInt{}}("0"),VarTU:SortTypeUse{},VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("581"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,10,581,53)"), UNIQUE'Unds'ID{}("047bacdeef9cdff3cbd45c18d516a3e1e533d2bbd746c582431f5f9bd0c6b131")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)) #as _0,`___WASM_LocalDecls_LocalDecl_LocalDecls`(LD,LDS))=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),_0,LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51d6eb6950590e208a967a39a38a2f388a9efd82103686836d16c6fde3a091b3), contentStartColumn(10), contentStartLine(594), org.kframework.attributes.Location(Location(594,10,594,92)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'11:SortLocalDecls{},
          \exists{R} (Var'Unds'10:SortIndex{},
          \exists{R} (Var'Unds'9:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'9:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),
                    Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(Var'Unds'10:SortIndex{})
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{}),
                    Var'Unds'11:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'13:SortValTypes{},
          \exists{R} (Var'Unds'12:SortInt{},
          \exists{R} (Var'Unds'15:SortLocalDecls{},
          \exists{R} (Var'Unds'14:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'12:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'13:SortValTypes{}),Var'Unds'14:SortTypeDecls{}))
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{}),
                    Var'Unds'15:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortTypeDecls{},
          \exists{R} (Var'Unds'17:SortIndex{},
          \exists{R} (Var'Unds'16:SortInt{},
          \exists{R} (Var'Unds'19:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'16:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),
                    Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'17:SortIndex{},Var'Unds'18:SortTypeDecls{})
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{}),
                    Var'Unds'19:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortLocalDecls{},
          \exists{R} (Var'Unds'22:SortIdentifier{},
          \exists{R} (Var'Unds'23:SortAValType{},
          \exists{R} (Var'Unds'21:SortTypeUse{},
          \exists{R} (Var'Unds'20:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'20:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'21:SortTypeUse{})
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{}),
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Var'Unds'22:SortIdentifier{},Var'Unds'23:SortAValType{}),Var'Unds'24:SortLocalDecls{})
                )),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortLocalDecls{},
          \exists{R} (Var'Unds'28:SortTypeDecls{},
          \exists{R} (Var'Unds'26:SortIdentifier{},
          \exists{R} (Var'Unds'27:SortAValType{},
          \exists{R} (Var'Unds'25:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'25:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Var'Unds'26:SortIdentifier{},Var'Unds'27:SortAValType{}),Var'Unds'28:SortTypeDecls{}))
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{}),
                    Var'Unds'29:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'30:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'30:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{}),
                    Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()
                )),
                \top{R} ()
              )))
          )),
          \bottom{R}()
        ))))))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},\and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{}),Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{})),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),Var'Unds'0:SortTypeUse{},VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("594"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(594,10,594,92)"), owise{}(), UNIQUE'Unds'ID{}("51d6eb6950590e208a967a39a38a2f388a9efd82103686836d16c6fde3a091b3")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)) #as _1,`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local___WASM_LocalDecl_Identifier_AValType`(ID,_0),LDS))=>`_Map_`(`_|->_`(inj{Identifier,KItem}(ID),inj{Int,KItem}(N)),`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),_1,LDS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c51153794fe84a19eeb0d5712a80d0717c9ea7490f81911ffd7d278c7147b9f), contentStartColumn(10), contentStartLine(592), org.kframework.attributes.Location(Location(592,10,593,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},\and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'1:SortTypeUse{}),Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},Var'Unds'0:SortAValType{}),VarLDS:SortLocalDecls{})),
        Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),Var'Unds'1:SortTypeUse{},VarLDS:SortLocalDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("592"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,10,593,57)"), UNIQUE'Unds'ID{}("0c51153794fe84a19eeb0d5712a80d0717c9ea7490f81911ffd7d278c7147b9f")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,`(type_)_WASM_TypeUse_Index`(_0),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4eb5f637d1d637ffe13027c23ef033f18823e32e004cb023e00e2897c0dfffd), contentStartColumn(10), contentStartLine(584), org.kframework.attributes.Location(Location(584,10,584,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(Var'Unds'0:SortIndex{}),VarLDS:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("584"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(584,10,584,74)"), UNIQUE'Unds'ID{}("c4eb5f637d1d637ffe13027c23ef033f18823e32e004cb023e00e2897c0dfffd")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,`(type_)__WASM_TypeUse_Index_TypeDecls`(_0,TDS),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(TDS),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4e8d455e3c229020fc706db25ed99e0debd2537a21827001448a86bc254df9c), contentStartColumn(10), contentStartLine(585), org.kframework.attributes.Location(Location(585,10,585,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'0:SortIndex{},VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("585"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,10,585,74)"), UNIQUE'Unds'ID{}("d4e8d455e3c229020fc706db25ed99e0debd2537a21827001448a86bc254df9c")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(TD,TDS)),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(TDS),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6cb6f6e6cf5f32d1e58b724564578934fafa0df4569bd4c66f79f9a3b5bc915), contentStartColumn(10), contentStartLine(590), org.kframework.attributes.Location(Location(590,10,590,77)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'8:SortInt{},
          \exists{R} (Var'Unds'10:SortLocalDecls{},
          \exists{R} (Var'Unds'9:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'8:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),
                    Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(Var'Unds'9:SortIndex{})
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    VarLDS:SortLocalDecls{},
                    Var'Unds'10:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'13:SortTypeDecls{},
          \exists{R} (Var'Unds'11:SortInt{},
          \exists{R} (Var'Unds'12:SortValTypes{},
          \exists{R} (Var'Unds'14:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'11:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'12:SortValTypes{}),Var'Unds'13:SortTypeDecls{}))
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    VarLDS:SortLocalDecls{},
                    Var'Unds'14:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortLocalDecls{},
          \exists{R} (Var'Unds'17:SortTypeDecls{},
          \exists{R} (Var'Unds'15:SortInt{},
          \exists{R} (Var'Unds'16:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'15:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),
                    Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'16:SortIndex{},Var'Unds'17:SortTypeDecls{})
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    VarLDS:SortLocalDecls{},
                    Var'Unds'18:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'22:SortAValType{},
          \exists{R} (Var'Unds'23:SortLocalDecls{},
          \exists{R} (Var'Unds'21:SortIdentifier{},
          \exists{R} (Var'Unds'19:SortInt{},
          \exists{R} (Var'Unds'20:SortTypeUse{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'19:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),
                    \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'20:SortTypeUse{})
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    VarLDS:SortLocalDecls{},
                    Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Var'Unds'21:SortIdentifier{},Var'Unds'22:SortAValType{}),Var'Unds'23:SortLocalDecls{})
                )),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortInt{},
          \exists{R} (Var'Unds'28:SortLocalDecls{},
          \exists{R} (Var'Unds'26:SortAValType{},
          \exists{R} (Var'Unds'27:SortTypeDecls{},
          \exists{R} (Var'Unds'25:SortIdentifier{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'24:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Var'Unds'25:SortIdentifier{},Var'Unds'26:SortAValType{}),Var'Unds'27:SortTypeDecls{}))
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    VarLDS:SortLocalDecls{},
                    Var'Unds'28:SortLocalDecls{}
                )),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortInt{}, R} (
                  \and{SortInt{}} (
                    VarN:SortInt{},
                    Var'Unds'29:SortInt{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())
                )),\and{R} (
                \ceil{SortLocalDecls{}, R} (
                  \and{SortLocalDecls{}} (
                    VarLDS:SortLocalDecls{},
                    Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()
                )),
                \top{R} ()
              )))
          )),
          \bottom{R}()
        ))))))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(VarTD:SortTypeDecl{},VarTDS:SortTypeDecls{})),VarLDS:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("590"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(590,10,590,77)"), owise{}(), UNIQUE'Unds'ID{}("f6cb6f6e6cf5f32d1e58b724564578934fafa0df4569bd4c66f79f9a3b5bc915")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),_0),TDS)),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),inj{TypeDecls,TypeUse}(TDS),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96b5de324f8f83dfc10e654592421b0b4f88ac275ac1df15185c3e98fc1c443f), contentStartColumn(10), contentStartLine(589), org.kframework.attributes.Location(Location(589,10,589,77)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'0:SortValTypes{}),VarTDS:SortTypeDecls{})),VarLDS:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("589"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,10,589,77)"), UNIQUE'Unds'ID{}("96b5de324f8f83dfc10e654592421b0b4f88ac275ac1df15185c3e98fc1c443f")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`param___WASM_TypeDecl_Identifier_AValType`(ID,_0),TDS)),LDS)=>`_Map_`(`_|->_`(inj{Identifier,KItem}(ID),inj{Int,KItem}(N)),`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),inj{TypeDecls,TypeUse}(TDS),LDS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d27ad07f86773a68e7f2a7cdf50bf2deb24a9478f514e6ece5f16d0f6055c2ff), contentStartColumn(10), contentStartLine(587), org.kframework.attributes.Location(Location(587,10,588,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},Var'Unds'0:SortAValType{}),VarTDS:SortTypeDecls{})),VarLDS:SortLocalDecls{}),
        Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("587"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,10,588,50)"), UNIQUE'Unds'ID{}("d27ad07f86773a68e7f2a7cdf50bf2deb24a9478f514e6ece5f16d0f6055c2ff")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(_0,inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList))=>`.Map`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d63193b0cbbc98b7c939499c904ae0f3d258eda0a24431300c528aa8073c49b), contentStartColumn(10), contentStartLine(583), org.kframework.attributes.Location(Location(583,10,583,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Var'Unds'0:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()),
        Lbl'Stop'Map{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("583"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,10,583,55)"), UNIQUE'Unds'ID{}("5d63193b0cbbc98b7c939499c904ae0f3d258eda0a24431300c528aa8073c49b")]

// rule `#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,I)=>I requires `_==String__STRING-COMMON_Bool_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,I,`_+Int_`(I,#token("1","Int"))),#token("\"}\"","String")) ensures #token("true","Bool") [UNIQUE_ID(7ab0c1eb36cd5e2456f0ada6601d968698138ca68b7ecfe463223032b6459884), contentStartColumn(10), contentStartLine(442), org.kframework.attributes.Location(Location(442,10,442,123)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarI:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),\dv{SortString{}}("}")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("442"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(442,10,442,123)"), UNIQUE'Unds'ID{}("7ab0c1eb36cd5e2456f0ada6601d968698138ca68b7ecfe463223032b6459884")]

// rule `#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,I)=>`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,`_+Int_`(I,#token("1","Int"))) requires `_=/=String__STRING-COMMON_Bool_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,I,`_+Int_`(I,#token("1","Int"))),#token("\"}\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9fc844fae97159e46d663076bf81f9c15bddddffa1709b2894adfcfbbea66208), contentStartColumn(10), contentStartLine(443), org.kframework.attributes.Location(Location(443,10,443,123)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarI:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),\dv{SortString{}}("}")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarI:SortInt{}),
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("443"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(443,10,443,123)"), UNIQUE'Unds'ID{}("9fc844fae97159e46d663076bf81f9c15bddddffa1709b2894adfcfbbea66208")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), contentStartColumn(8), contentStartLine(957), org.kframework.attributes.Location(Location(957,8,957,59)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},VarB1:SortK{},Var'Unds'0:SortK{}),
        VarB1:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("957"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,8,957,59)"), UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), contentStartColumn(8), contentStartLine(958), org.kframework.attributes.Location(Location(958,8,958,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},Var'Unds'0:SortK{},VarB2:SortK{}),
        VarB2:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("958"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,8,958,67)"), UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa")]

// rule `#inSignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,I)=>`_andBool_`(`_<=Int_`(`#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE),I),`_<Int_`(I,`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d42ffac912803327e530613d01103ba0d59c5c18fc8938894e41232a628ec9df), contentStartColumn(10), contentStartLine(274), org.kframework.attributes.Location(Location(274,10,274,94)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("274"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,10,274,94)"), UNIQUE'Unds'ID{}("d42ffac912803327e530613d01103ba0d59c5c18fc8938894e41232a628ec9df")]

// rule `#inUnsignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,I)=>`_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<Int_`(I,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1114c3d053c76da6136d4a0b573238f69faf7668a6b8abd6495137963cdd5816), contentStartColumn(10), contentStartLine(273), org.kframework.attributes.Location(Location(273,10,273,94)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("273"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(273,10,273,94)"), UNIQUE'Unds'ID{}("1114c3d053c76da6136d4a0b573238f69faf7668a6b8abd6495137963cdd5816")]

// rule `#isByte(_)_KWASM-LEMMAS_Bool_KItem`(I)=>#token("false","Bool") requires `notBool_`(isInt(I)) ensures #token("true","Bool") [UNIQUE_ID(3f3cd2eab1a70afcbfbe00a5479922f64b55763411425ee15e43f27ef92aa172), contentStartColumn(10), contentStartLine(309), org.kframework.attributes.Location(Location(309,10,310,32)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisInt{}(kseq{}(VarI:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(VarI:SortKItem{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("309"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,10,310,32)"), UNIQUE'Unds'ID{}("3f3cd2eab1a70afcbfbe00a5479922f64b55763411425ee15e43f27ef92aa172")]

// rule `#isByte(_)_KWASM-LEMMAS_Bool_KItem`(inj{Int,KItem}(I))=>#token("false","Bool") requires `notBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<=Int_`(I,#token("255","Int")))) ensures #token("true","Bool") [UNIQUE_ID(9e3fa91348e2d7355d87686058808893208b02254b82f9e19b3f5b334c0f7a0b), contentStartColumn(10), contentStartLine(306), org.kframework.attributes.Location(Location(306,10,308,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("255")))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("306"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(306,10,308,45)"), UNIQUE'Unds'ID{}("9e3fa91348e2d7355d87686058808893208b02254b82f9e19b3f5b334c0f7a0b")]

// rule `#isByte(_)_KWASM-LEMMAS_Bool_KItem`(inj{Int,KItem}(I))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<=Int_`(I,#token("255","Int"))) ensures #token("true","Bool") [UNIQUE_ID(a439f4510a3d32b3c8b3314e3ddddca8a655a98981f70dafd4044b64278a2bf7), contentStartColumn(10), contentStartLine(303), org.kframework.attributes.Location(Location(303,10,305,27)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("255"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("303"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,10,305,27)"), UNIQUE'Unds'ID{}("a439f4510a3d32b3c8b3314e3ddddca8a655a98981f70dafd4044b64278a2bf7")]

// rule `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`.Map`(.KList)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98b6044d5e71eb900cd9beb72e2cbf36115bfc706e8af6d728f2360a21cc8fd8), contentStartColumn(10), contentStartLine(299), org.kframework.attributes.Location(Location(299,10,299,56)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'Stop'Map{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("299"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,10,299,56)"), UNIQUE'Unds'ID{}("98b6044d5e71eb900cd9beb72e2cbf36115bfc706e8af6d728f2360a21cc8fd8")]

// rule `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`Map:update`(M,_0,V)))=>`_andBool_`(`#isByte(_)_KWASM-LEMMAS_Bool_KItem`(V),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ffdd7f5a643ba0ad1428605b7b18f18bf56df14855933c281f9e1f08480897e7), contentStartColumn(10), contentStartLine(301), org.kframework.attributes.Location(Location(301,10,301,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(LblMap'Coln'update{}(VarM:SortMap{},Var'Unds'0:SortKItem{},VarV:SortKItem{}))),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(VarV:SortKItem{}),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("301"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,10,301,98)"), simplification{}(), UNIQUE'Unds'ID{}("ffdd7f5a643ba0ad1428605b7b18f18bf56df14855933c281f9e1f08480897e7")]

// rule `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`_Map_`(`_|->_`(_0,V),M)))=>`_andBool_`(`#isByte(_)_KWASM-LEMMAS_Bool_KItem`(V),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1529bb10d4caccde7fe4374f9eb30b2eacba4cf69f3d4bcd92e7b9dca7edd095), contentStartColumn(10), contentStartLine(300), org.kframework.attributes.Location(Location(300,10,300,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(Var'Unds'0:SortKItem{},VarV:SortKItem{}),VarM:SortMap{}))),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(VarV:SortKItem{}),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("300"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(300,10,300,98)"), UNIQUE'Unds'ID{}("1529bb10d4caccde7fe4374f9eb30b2eacba4cf69f3d4bcd92e7b9dca7edd095")]

// rule `#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)=>`_orBool__BOOL_Bool_Bool_Bool`(`isNaN(_)_FLOAT_Bool_Float`(F),`isInfinite(_)_FLOAT_Bool_Float`(F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b9ba6fa22363f9fc4eb3f5276a73a7b25d4a167a3db36cdd1c62e06e415c9c93), contentStartColumn(10), contentStartLine(65), org.kframework.attributes.Location(Location(65,10,65,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("65"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,10,65,67)"), UNIQUE'Unds'ID{}("b9ba6fa22363f9fc4eb3f5276a73a7b25d4a167a3db36cdd1c62e06e415c9c93")]

// rule `#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(`.List{"___WASM-DATA_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d63173af8d6da2dc2409c02c807f210233eaf03fe3cad4c96a15e7f87326286d), contentStartColumn(10), contentStartLine(90), org.kframework.attributes.Location(Location(90,10,90,44)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}()),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("90"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,10,90,44)"), UNIQUE'Unds'ID{}("d63173af8d6da2dc2409c02c807f210233eaf03fe3cad4c96a15e7f87326286d")]

// rule `#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(`___WASM-DATA_ElemSegment_Index_ElemSegment`(TFIDX,ES))=>`_+Int_`(#token("1","Int"),`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7fc132261803e84c09df72d00852981653b81facd488b79cbdcb75e37f928bbe), contentStartColumn(10), contentStartLine(91), org.kframework.attributes.Location(Location(91,10,91,69)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarTFIDX:SortIndex{},VarES:SortElemSegment{})),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("91"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,10,91,69)"), UNIQUE'Unds'ID{}("7fc132261803e84c09df72d00852981653b81facd488b79cbdcb75e37f928bbe")]

// rule `#lengthDataPages(_)_WASM_Int_DataString`(DS)=>`_up/Int__WASM_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS)),`#pageSize()_WASM_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8eb4fd2ba3fc1c1a0440009e5bd8e32415bde9a7546d89cbed2c291735df4b5), contentStartColumn(10), contentStartLine(1262), org.kframework.attributes.Location(Location(1262,10,1262,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{}),
        Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarDS:SortDataString{})),Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1262"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1262,10,1262,90)"), UNIQUE'Unds'ID{}("a8eb4fd2ba3fc1c1a0440009e5bd8e32415bde9a7546d89cbed2c291735df4b5")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(L1,_0,inj{Int,Limits}(L2))=>`_>=Int_`(L1,L2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(179aff1ff2808fe0c7c4f8317628504d600f44c24b7b1840f33cac057166bc00), contentStartColumn(10), contentStartLine(1429), org.kframework.attributes.Location(Location(1429,10,1429,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarL1:SortInt{},Var'Unds'0:SortOptionalInt{},inj{SortInt{}, SortLimits{}}(VarL2:SortInt{})),
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarL1:SortInt{},VarL2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1429"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1429,10,1429,66)"), UNIQUE'Unds'ID{}("179aff1ff2808fe0c7c4f8317628504d600f44c24b7b1840f33cac057166bc00")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(L1,inj{Int,OptionalInt}(U1),`___WASM-DATA_Limits_Int_Int`(L2,U2))=>`_andBool_`(`_>=Int_`(L1,L2),`_<=Int_`(U1,U2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85fc8deef178e9169c650680e4e637888a1f5318d9d5cff97eebcfc8fe22938d), contentStartColumn(10), contentStartLine(1431), org.kframework.attributes.Location(Location(1431,10,1431,86)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarL1:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarU1:SortInt{}),Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(VarL2:SortInt{},VarU2:SortInt{})),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarL1:SortInt{},VarL2:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarU1:SortInt{},VarU2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1431"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1431,10,1431,86)"), UNIQUE'Unds'ID{}("85fc8deef178e9169c650680e4e637888a1f5318d9d5cff97eebcfc8fe22938d")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(_0,`.Int_WASM-DATA_OptionalInt`(.KList),`___WASM-DATA_Limits_Int_Int`(_1,_2))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ff13a7e41246df96ab8b6672b9dde63ca1ee0b9c88b20a8cddda0d28f0db28d), contentStartColumn(10), contentStartLine(1430), org.kframework.attributes.Location(Location(1430,10,1430,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(Var'Unds'0:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}(),Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(Var'Unds'1:SortInt{},Var'Unds'2:SortInt{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1430"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1430,10,1430,60)"), UNIQUE'Unds'ID{}("2ff13a7e41246df96ab8b6672b9dde63ca1ee0b9c88b20a8cddda0d28f0db28d")]

// rule `#maxMemorySize()_WASM_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b91ae87095d69cd1d5abbd27a0c7843a7cd98057ea1c4c765431bf1293e5e2b), contentStartColumn(10), contentStartLine(1170), org.kframework.attributes.Location(Location(1170,10,1170,35)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("65536")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1170"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1170,10,1170,35)"), UNIQUE'Unds'ID{}("6b91ae87095d69cd1d5abbd27a0c7843a7cd98057ea1c4c765431bf1293e5e2b")]

// rule `#maxTableSize()_WASM_Int`(.KList)=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(45c58f540f19a98507a411ad47b53292d13c14ce3786d4a77b46f2bb7f979c23), contentStartColumn(10), contentStartLine(1171), org.kframework.attributes.Location(Location(1171,10,1171,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("4294967296")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1171"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1171,10,1171,40)"), UNIQUE'Unds'ID{}("45c58f540f19a98507a411ad47b53292d13c14ce3786d4a77b46f2bb7f979c23")]

// rule `#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE)=>`_-Int_`(#token("0","Int"),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8932ec8d83e2e064bcf4e6fc7b9be28317940d9a5b6bd3ee092c7b7f15ffc37d), contentStartColumn(10), contentStartLine(278), org.kframework.attributes.Location(Location(278,10,278,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),
        Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("278"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,10,278,50)"), UNIQUE'Unds'ID{}("8932ec8d83e2e064bcf4e6fc7b9be28317940d9a5b6bd3ee092c7b7f15ffc37d")]

// rule `#minWidth(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e4a432fa6aaa815c372221d1a5c76b1bd3d02b7d8fb9186927f5471c9003571b), contentStartColumn(10), contentStartLine(47), org.kframework.attributes.Location(Location(47,10,47,27)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{})),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("47"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,10,47,27)"), UNIQUE'Unds'ID{}("e4a432fa6aaa815c372221d1a5c76b1bd3d02b7d8fb9186927f5471c9003571b")]

// rule `#minWidth(_)_WASM-NUMERIC_Int_Int`(N)=>`_+Int_`(#token("1","Int"),`#minWidth(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int")))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(98163c1b4f71192f6f42211d2b40125766801ac091b1a19f2169d4e34669b984), contentStartColumn(10), contentStartLine(48), org.kframework.attributes.Location(Location(48,10,48,105)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("48"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,10,48,105)"), UNIQUE'Unds'ID{}("98163c1b4f71192f6f42211d2b40125766801ac091b1a19f2169d4e34669b984")]

// rule `#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE)=>`_/Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(491154a33933aa3f8654a2be3e9c02c1901a3ea44d4fe047dab561d746fb0ce7), concrete, contentStartColumn(10), contentStartLine(199), org.kframework.attributes.Location(Location(199,10,199,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),\dv{SortInt{}}("8"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), contentStartLine{}("199"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,10,199,50)"), UNIQUE'Unds'ID{}("491154a33933aa3f8654a2be3e9c02c1901a3ea44d4fe047dab561d746fb0ce7")]

// rule `#pageSize()_WASM_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(957bfcffc695616324ac2aa1a0c472f57e0039cc6594f3753322db7f3cc0da18), contentStartColumn(10), contentStartLine(1169), org.kframework.attributes.Location(Location(1169,10,1169,35)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("65536")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1169"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1169,10,1169,35)"), UNIQUE'Unds'ID{}("957bfcffc695616324ac2aa1a0c472f57e0039cc6594f3753322db7f3cc0da18")]

// rule `#popcnt(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e83f5d4e6584ac4a5927b57c621b78894717de55a6a415497fde7a7b7681b1a6), contentStartColumn(10), contentStartLine(53), org.kframework.attributes.Location(Location(53,10,53,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{})),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("53"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,10,53,25)"), UNIQUE'Unds'ID{}("e83f5d4e6584ac4a5927b57c621b78894717de55a6a415497fde7a7b7681b1a6")]

// rule `#popcnt(_)_WASM-NUMERIC_Int_Int`(N)=>`_+Int_`(`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(`_modInt_`(N,#token("2","Int")),#token("1","Int"))),`#popcnt(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int")))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(6ef73496a108fd8b3fa6f39c89e78ed35bf41e456aaeff99f9d1a12e13a5be31), contentStartColumn(10), contentStartLine(54), org.kframework.attributes.Location(Location(54,10,54,105)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1"))),Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("54"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,10,54,105)"), UNIQUE'Unds'ID{}("6ef73496a108fd8b3fa6f39c89e78ed35bf41e456aaeff99f9d1a12e13a5be31")]

// rule `#pow(_)_WASM-DATA_Int_IValType`(`i32_WASM-DATA_IValType`(.KList))=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b02fb749493bba55f731c5e6d7a3cae26f27fb6e085635de510216b333502b5), contentStartColumn(10), contentStartLine(209), org.kframework.attributes.Location(Location(209,10,209,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("4294967296")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("209"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,10,209,34)"), UNIQUE'Unds'ID{}("0b02fb749493bba55f731c5e6d7a3cae26f27fb6e085635de510216b333502b5")]

// rule `#pow(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))=>#token("18446744073709551616","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41233f4f6afe09bb1b8d64788d0cd189ca9641cf31c99576760964790a801678), contentStartColumn(10), contentStartLine(211), org.kframework.attributes.Location(Location(211,10,211,44)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("18446744073709551616")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("211"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,10,211,44)"), UNIQUE'Unds'ID{}("41233f4f6afe09bb1b8d64788d0cd189ca9641cf31c99576760964790a801678")]

// rule `#pow1(_)_WASM-DATA_Int_IValType`(`i32_WASM-DATA_IValType`(.KList))=>#token("2147483648","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d9b80fd2a93df727161a0adf7ff6d89f7e07f9887c0e902c598939a26fbebee), contentStartColumn(10), contentStartLine(208), org.kframework.attributes.Location(Location(208,10,208,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("2147483648")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("208"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,10,208,34)"), UNIQUE'Unds'ID{}("5d9b80fd2a93df727161a0adf7ff6d89f7e07f9887c0e902c598939a26fbebee")]

// rule `#pow1(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))=>#token("9223372036854775808","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab51ea2857bfa07d81874e8d7743c06f542ff18eee8bc5e883dc62e40f87b04b), contentStartColumn(10), contentStartLine(210), org.kframework.attributes.Location(Location(210,10,210,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("9223372036854775808")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("210"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,10,210,43)"), UNIQUE'Unds'ID{}("ab51ea2857bfa07d81874e8d7743c06f542ff18eee8bc5e883dc62e40f87b04b")]

// rule `#reverse(_,_)_WASM_Defns_Defns_Defns`(`___WASM_Defns_Defn_Defns`(D,DS),ACC)=>`#reverse(_,_)_WASM_Defns_Defns_Defns`(DS,`___WASM_Defns_Defn_Defns`(D,ACC)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b257776176be43e9eb16f57aeedcdd9243e9c600ef308d336c6716c32f5ae528), contentStartColumn(10), contentStartLine(1482), org.kframework.attributes.Location(Location(1482,10,1482,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{}),VarACC:SortDefns{}),
        Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDS:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarACC:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1482"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1482,10,1482,63)"), UNIQUE'Unds'ID{}("b257776176be43e9eb16f57aeedcdd9243e9c600ef308d336c6716c32f5ae528")]

// rule `#reverse(_,_)_WASM_Defns_Defns_Defns`(inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(148c3fc12f915e6b1bb6a6bcc174a0b0cf8ca93f1c1e65e18f5b7c1e2312f524), contentStartColumn(10), contentStartLine(1481), org.kframework.attributes.Location(Location(1481,10,1481,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarACC:SortDefns{}),
        VarACC:SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1481"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1481,10,1481,47)"), UNIQUE'Unds'ID{}("148c3fc12f915e6b1bb6a6bcc174a0b0cf8ca93f1c1e65e18f5b7c1e2312f524")]

// rule `#revs(_)_WASM-DATA_ValStack_ValStack`(VS)=>`#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(VS,`.ValStack_WASM-DATA_ValStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a30378342e9f8b09b12518899b48eb43ad77df94bbbb3fce9328565cc246f3e), contentStartColumn(10), contentStartLine(375), org.kframework.attributes.Location(Location(375,10,375,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{}),
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{},Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("375"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,10,375,43)"), UNIQUE'Unds'ID{}("0a30378342e9f8b09b12518899b48eb43ad77df94bbbb3fce9328565cc246f3e")]

// rule `#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(`.ValStack_WASM-DATA_ValStack`(.KList),VS')=>VS' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e356365d37d6e227a2ee2957e1ff1ee478cec69f010d0c2fcaa54c493bd0431), contentStartColumn(10), contentStartLine(377), org.kframework.attributes.Location(Location(377,10,377,38)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),VarVS'Apos':SortValStack{}),
        VarVS'Apos':SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("377"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,10,377,38)"), UNIQUE'Unds'ID{}("0e356365d37d6e227a2ee2957e1ff1ee478cec69f010d0c2fcaa54c493bd0431")]

// rule `#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS),VS')=>`#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(VS,`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a236a0d77df65e28fc52e27aed3c21b765b9acd09693d097d4be1c722533e69b), contentStartColumn(10), contentStartLine(378), org.kframework.attributes.Location(Location(378,10,378,53)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS:SortValStack{}),VarVS'Apos':SortValStack{}),
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS'Apos':SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("378"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,10,378,53)"), UNIQUE'Unds'ID{}("a236a0d77df65e28fc52e27aed3c21b765b9acd09693d097d4be1c722533e69b")]

// rule `#revt(_)_WASM-DATA_ValTypes_ValTypes`(VT)=>`#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(VT,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe4acf9c6d3c6d42c896a6dd265d5dab881d617b8f1a0d85aad5325da140f002), contentStartColumn(10), contentStartLine(182), org.kframework.attributes.Location(Location(182,10,182,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{}),
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("182"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,10,182,43)"), UNIQUE'Unds'ID{}("fe4acf9c6d3c6d42c896a6dd265d5dab881d617b8f1a0d85aad5325da140f002")]

// rule `#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList),VT')=>VT' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09c6d734e9b658129e86e9408d53bbde5b9ba8e8bf6eeac4cb2ec0f1f7c4ed15), contentStartColumn(10), contentStartLine(184), org.kframework.attributes.Location(Location(184,10,184,38)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),VarVT'Apos':SortValTypes{}),
        VarVT'Apos':SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("184"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,10,184,38)"), UNIQUE'Unds'ID{}("09c6d734e9b658129e86e9408d53bbde5b9ba8e8bf6eeac4cb2ec0f1f7c4ed15")]

// rule `#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(V,VT),VT')=>`#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(VT,`___WASM-DATA_ValTypes_ValType_ValTypes`(V,VT')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f121c40fdef79ef89746830357d641858f9fe8c99634c67bf856de786df481c1), contentStartColumn(10), contentStartLine(185), org.kframework.attributes.Location(Location(185,10,185,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarV:SortValType{},VarVT:SortValTypes{}),VarVT'Apos':SortValTypes{}),
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarV:SortValType{},VarVT'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("185"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,10,185,51)"), UNIQUE'Unds'ID{}("f121c40fdef79ef89746830357d641858f9fe8c99634c67bf856de786df481c1")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f32_WASM-DATA_FValType`(.KList) #as _0,inj{Int,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`Int2Float(_,_,_)_FLOAT_Float_Int_Int_Int`(N,#token("24","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d7eb0b117022529deffa2efb2434786e06b1572a836f4cf41dbc423138ea108), concrete, contentStartColumn(10), contentStartLine(294), org.kframework.attributes.Location(Location(294,10,294,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'0:SortFValType{}),inj{SortInt{}, SortNumber{}}(VarN:SortInt{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\dv{SortInt{}}("24"),\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), contentStartLine{}("294"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,10,294,63)"), UNIQUE'Unds'ID{}("8d7eb0b117022529deffa2efb2434786e06b1572a836f4cf41dbc423138ea108")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f32_WASM-DATA_FValType`(.KList) #as _0,inj{Float,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`roundFloat(_,_,_)_FLOAT_Float_Float_Int_Int`(N,#token("24","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(26a86bbbc11ff4ed72be2c985988611ca34cca1bc7758ece848d5a74cdff2324), concrete, contentStartColumn(10), contentStartLine(292), org.kframework.attributes.Location(Location(292,10,292,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'0:SortFValType{}),inj{SortFloat{}, SortNumber{}}(VarN:SortFloat{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(VarN:SortFloat{},\dv{SortInt{}}("24"),\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), contentStartLine{}("292"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,10,292,63)"), UNIQUE'Unds'ID{}("26a86bbbc11ff4ed72be2c985988611ca34cca1bc7758ece848d5a74cdff2324")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f64_WASM-DATA_FValType`(.KList) #as _0,inj{Int,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`Int2Float(_,_,_)_FLOAT_Float_Int_Int_Int`(N,#token("53","Int"),#token("11","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c3c297abbf96d7a6702a7cad625e6a812c3f6a7c2adff608e2cea0ec04b70094), concrete, contentStartColumn(10), contentStartLine(293), org.kframework.attributes.Location(Location(293,10,293,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'0:SortFValType{}),inj{SortInt{}, SortNumber{}}(VarN:SortInt{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\dv{SortInt{}}("53"),\dv{SortInt{}}("11")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), contentStartLine{}("293"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,10,293,64)"), UNIQUE'Unds'ID{}("c3c297abbf96d7a6702a7cad625e6a812c3f6a7c2adff608e2cea0ec04b70094")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f64_WASM-DATA_FValType`(.KList) #as _0,inj{Float,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`roundFloat(_,_,_)_FLOAT_Float_Float_Int_Int`(N,#token("53","Int"),#token("11","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cee3b58291c90ece9825b8cfeca758027a5f86a94fe9cf223de91e470e63ea4f), concrete, contentStartColumn(10), contentStartLine(291), org.kframework.attributes.Location(Location(291,10,291,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'0:SortFValType{}),inj{SortFloat{}, SortNumber{}}(VarN:SortFloat{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(VarN:SortFloat{},\dv{SortInt{}}("53"),\dv{SortInt{}}("11")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,291,64)"), UNIQUE'Unds'ID{}("cee3b58291c90ece9825b8cfeca758027a5f86a94fe9cf223de91e470e63ea4f")]

// rule `#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(MAP,ID,_0)=>MAP requires `notBool_`(isIdentifier(inj{OptionalId,KItem}(ID))) ensures #token("true","Bool") [UNIQUE_ID(f636b822e05b1a92a6379a8cd725810fe3319f92e3ca2547d29b5ed558409fe2), contentStartColumn(10), contentStartLine(50), org.kframework.attributes.Location(Location(50,10,50,96)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarID:SortOptionalId{}),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarMAP:SortMap{},VarID:SortOptionalId{},Var'Unds'0:SortInt{}),
        VarMAP:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("50"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,10,50,96)"), UNIQUE'Unds'ID{}("f636b822e05b1a92a6379a8cd725810fe3319f92e3ca2547d29b5ed558409fe2")]

// rule `#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(MAP,inj{Identifier,OptionalId}(ID),IDX)=>`Map:update`(MAP,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2dd5d97ef671cc72755eda4985634081d72d014b02db2b97f3d30972f8c45d71), contentStartColumn(10), contentStartLine(51), org.kframework.attributes.Location(Location(51,10,51,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarMAP:SortMap{},inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarIDX:SortInt{}),
        LblMap'Coln'update{}(VarMAP:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("51"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,10,51,62)"), UNIQUE'Unds'ID{}("2dd5d97ef671cc72755eda4985634081d72d014b02db2b97f3d30972f8c45d71")]

// rule `#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M),KEY,VAL)=>`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`Map:update`(M,inj{Int,KItem}(KEY),inj{Int,KItem}(VAL))) requires `_andBool_`(`_=/=Int_`(VAL,#token("0","Int")),`isByte(_)_WASM-DATA_Bool_Int`(VAL)) ensures #token("true","Bool") [UNIQUE_ID(de913ca016dc68b85b36a2200f5a3918d4347f583cb968134319a64d78ab66b8), concrete, contentStartColumn(10), contentStartLine(542), org.kframework.attributes.Location(Location(542,10,542,128)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(VarVAL:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),VarKEY:SortInt{},VarVAL:SortInt{}),
        LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(LblMap'Coln'update{}(VarM:SortMap{},inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{}),inj{SortInt{}, SortKItem{}}(VarVAL:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), concrete{}(), contentStartLine{}("542"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(542,10,542,128)"), UNIQUE'Unds'ID{}("de913ca016dc68b85b36a2200f5a3918d4347f583cb968134319a64d78ab66b8")]

// rule `#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M),KEY,VAL)=>`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`_[_<-undef]`(M,inj{Int,KItem}(KEY))) requires `notBool_`(`_andBool_`(`_=/=Int_`(VAL,#token("0","Int")),`isByte(_)_WASM-DATA_Bool_Int`(VAL))) ensures #token("true","Bool") [UNIQUE_ID(9255c03c3f2738cae05016b57ef5a80957f0c9e62c7879e13516982672fac577), contentStartColumn(10), contentStartLine(541), org.kframework.attributes.Location(Location(541,10,541,129)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(VarVAL:SortInt{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),VarKEY:SortInt{},VarVAL:SortInt{}),
        LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(VarM:SortMap{},inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("541"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,10,541,129)"), UNIQUE'Unds'ID{}("9255c03c3f2738cae05016b57ef5a80957f0c9e62c7879e13516982672fac577")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,VAL,WIDTH)=>BM requires `notBool_`(`_andBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),VAL)),`_<=Int_`(#token("0","Int"),ADDR))) ensures #token("true","Bool") [UNIQUE_ID(c678ba4cbd08c73662bb7bada5d16d8c9a839d3aee1b0a85f37feb8b63216d44), contentStartColumn(10), contentStartLine(515), org.kframework.attributes.Location(Location(515,10,515,200)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),
        VarBM:SortByteMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("515"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(515,10,515,200)"), UNIQUE'Unds'ID{}("c678ba4cbd08c73662bb7bada5d16d8c9a839d3aee1b0a85f37feb8b63216d44")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,VAL,WIDTH)=>`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(`#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(BM,ADDR,`_modInt_`(VAL,#token("256","Int"))),`_+Int_`(ADDR,#token("1","Int")),`_/Int_`(VAL,#token("256","Int")),`_-Int_`(WIDTH,#token("1","Int"))) requires `_andBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),VAL)),`_<=Int_`(#token("0","Int"),ADDR)) ensures #token("true","Bool") [UNIQUE_ID(f76b9aa1171559f7a8edace542a848d6621e748c6399c67e64ce8b9e07abeda2), concrete, contentStartColumn(10), contentStartLine(516), org.kframework.attributes.Location(Location(516,10,516,199)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},Lbl'Unds'modInt'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("256"))),Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsSlsh'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("256")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), concrete{}(), contentStartLine{}("516"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(516,10,516,199)"), UNIQUE'Unds'ID{}("f76b9aa1171559f7a8edace542a848d6621e748c6399c67e64ce8b9e07abeda2")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH),WIDTH)=>BM requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60b75079f18a594f005da8a8b2bac6557fdd157f6b19d911cef244023655c54c), contentStartColumn(10), contentStartLine(371), org.kframework.attributes.Location(Location(371,10,371,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),VarWIDTH:SortInt{}),
        VarBM:SortByteMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("371"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,10,371,70)"), simplification{}(), UNIQUE'Unds'ID{}("60b75079f18a594f005da8a8b2bac6557fdd157f6b19d911cef244023655c54c")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,`_+Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_0,_1,WIDTH1) #as VAL1,`_<<Int_`(VAL2,SHIFT)),WIDTH)=>`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,ADDR,VAL1,`minInt(_,_)_INT-COMMON_Int_Int_Int`(WIDTH1,WIDTH)),`_+Int_`(ADDR,WIDTH1),VAL2,`_-Int_`(WIDTH,WIDTH1)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),ADDR),`_<Int_`(#token("0","Int"),WIDTH)),`_==Int_`(`_*Int_`(WIDTH1,#token("8","Int")),SHIFT)) ensures #token("true","Bool") [UNIQUE_ID(0e0f6821d0d658d2454cbcdb7a752caf062a705886a1319c1af0b3ac9bd5f746), contentStartColumn(10), contentStartLine(372), org.kframework.attributes.Location(Location(372,10,376,41)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarWIDTH1:SortInt{},\dv{SortInt{}}("8")),VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},Lbl'UndsPlus'Int'Unds'{}(\and{SortInt{}}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'0:SortByteMap{},Var'Unds'1:SortInt{},VarWIDTH1:SortInt{}),VarVAL1:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(VarVAL2:SortInt{},VarSHIFT:SortInt{})),VarWIDTH:SortInt{}),
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarVAL1:SortInt{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH1:SortInt{},VarWIDTH:SortInt{})),Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},VarWIDTH1:SortInt{}),VarVAL2:SortInt{},Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},VarWIDTH1:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("372"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,10,376,41)"), simplification{}(), UNIQUE'Unds'ID{}("0e0f6821d0d658d2454cbcdb7a752caf062a705886a1319c1af0b3ac9bd5f746")]

// rule `#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(fcd754901d21572c095257d17c04fd1be6b48ec66fe41b2470cae48eab7f9f83), contentStartColumn(10), contentStartLine(308), org.kframework.attributes.Location(Location(308,10,308,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("308"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(308,10,308,107)"), UNIQUE'Unds'ID{}("fcd754901d21572c095257d17c04fd1be6b48ec66fe41b2470cae48eab7f9f83")]

// rule `#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>`_-Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)) requires `_andBool_`(`_<=Int_`(`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE),N),`_<Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(43c77f66a3f0413b4f3d8a51a45a8e2233ef160825974c8893d01f10fa2d81c8), contentStartColumn(10), contentStartLine(309), org.kframework.attributes.Location(Location(309,10,309,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("309"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,10,309,107)"), UNIQUE'Unds'ID{}("43c77f66a3f0413b4f3d8a51a45a8e2233ef160825974c8893d01f10fa2d81c8")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,#token("128","Int"))) ensures #token("true","Bool") [UNIQUE_ID(57f788c50d5140a9af386057beb052977beea091e75725550abda8c2d760e4a5), contentStartColumn(10), contentStartLine(314), org.kframework.attributes.Location(Location(314,10,314,86)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("128"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("314"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,10,314,86)"), UNIQUE'Unds'ID{}("57f788c50d5140a9af386057beb052977beea091e75725550abda8c2d760e4a5")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),N)=>`_-Int_`(N,#token("256","Int")) requires `_andBool_`(`_<=Int_`(#token("128","Int"),N),`_<Int_`(N,#token("256","Int"))) ensures #token("true","Bool") [UNIQUE_ID(b7018aa713fa6769053dc615b818c0e2b7de374c1aea8768ff47581164389efd), contentStartColumn(10), contentStartLine(315), org.kframework.attributes.Location(Location(315,10,315,86)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("128"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("256"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("256"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("315"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,10,315,86)"), UNIQUE'Unds'ID{}("b7018aa713fa6769053dc615b818c0e2b7de374c1aea8768ff47581164389efd")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,#token("32768","Int"))) ensures #token("true","Bool") [UNIQUE_ID(6270306b711adcde17b4cc1de545b5ace9ada7161a7acb9de0653f3395788ab1), contentStartColumn(10), contentStartLine(316), org.kframework.attributes.Location(Location(316,10,316,88)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("32768"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("2"),VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("316"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,10,316,88)"), UNIQUE'Unds'ID{}("6270306b711adcde17b4cc1de545b5ace9ada7161a7acb9de0653f3395788ab1")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),N)=>`_-Int_`(N,#token("65536","Int")) requires `_andBool_`(`_<=Int_`(#token("32768","Int"),N),`_<Int_`(N,#token("65536","Int"))) ensures #token("true","Bool") [UNIQUE_ID(b89fc59c30b0a67f8cb86209a3c3397a44eb91ffdf8ca7c5b43d2fbe43e4c5c3), contentStartColumn(10), contentStartLine(317), org.kframework.attributes.Location(Location(317,10,317,88)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("32768"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("65536"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("2"),VarN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("65536"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("317"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,10,317,88)"), UNIQUE'Unds'ID{}("b89fc59c30b0a67f8cb86209a3c3397a44eb91ffdf8ca7c5b43d2fbe43e4c5c3")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("4","Int"),N)=>`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),N) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ede8b857342c84e65823fc34106fc1377b73dc8cb62cd9f7c38ca7a6010cca1), contentStartColumn(10), contentStartLine(318), org.kframework.attributes.Location(Location(318,10,318,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("4"),VarN:SortInt{}),
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("318"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,10,318,47)"), UNIQUE'Unds'ID{}("9ede8b857342c84e65823fc34106fc1377b73dc8cb62cd9f7c38ca7a6010cca1")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(A) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,AS,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,`___WASM_Defns_Defn_Defns`(_8,AS),_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df0d71bc4a959cc7639822965abe63fb3c2d52b48d9e0325d909e7b57fe2f1a4), contentStartColumn(10), contentStartLine(1470), org.kframework.attributes.Location(Location(1470,10,1470,96)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortMemoryDefn{}, SortDefn{}}(VarA:SortMemoryDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},VarAS:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarAS:SortDefns{}),Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1470"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1470,10,1470,96)"), UNIQUE'Unds'ID{}("df0d71bc4a959cc7639822965abe63fb3c2d52b48d9e0325d909e7b57fe2f1a4")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{TableDefn,Defn}(A) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,AS,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,`___WASM_Defns_Defn_Defns`(_8,AS),_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c277a5254e4da884dbd23478e68c6f5363a399e330f4adf884964089ee26aa48), contentStartColumn(10), contentStartLine(1469), org.kframework.attributes.Location(Location(1469,10,1469,96)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortTableDefn{}, SortDefn{}}(VarA:SortTableDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},VarAS:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarAS:SortDefns{}),Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1469"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1469,10,1469,96)"), UNIQUE'Unds'ID{}("c277a5254e4da884dbd23478e68c6f5363a399e330f4adf884964089ee26aa48")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{ExportDefn,Defn}(E) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,ES,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,`___WASM_Defns_Defn_Defns`(_8,ES),_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7f1851b015b92e8a0c058a8cd6fdffcab930c7db920e97734e2b68bbed5f6f25), contentStartColumn(10), contentStartLine(1472), org.kframework.attributes.Location(Location(1472,10,1472,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortExportDefn{}, SortDefn{}}(VarE:SortExportDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},VarES:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarES:SortDefns{}),Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1472"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1472,10,1472,93)"), UNIQUE'Unds'ID{}("7f1851b015b92e8a0c058a8cd6fdffcab930c7db920e97734e2b68bbed5f6f25")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{ImportDefn,Defn}(I) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,IS,_2,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,`___WASM_Defns_Defn_Defns`(_8,IS),_2,_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7200e610979f2f90329bb03ed5a8fea7b0b20d7163043bfe78a2eb1e5c609a5), contentStartColumn(10), contentStartLine(1464), org.kframework.attributes.Location(Location(1464,10,1464,97)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortImportDefn{}, SortDefn{}}(VarI:SortImportDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},VarIS:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarIS:SortDefns{}),Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1464"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1464,10,1464,97)"), UNIQUE'Unds'ID{}("a7200e610979f2f90329bb03ed5a8fea7b0b20d7163043bfe78a2eb1e5c609a5")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{ElemDefn,Defn}(I) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,IS,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,`___WASM_Defns_Defn_Defns`(_8,IS),_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(efc7fda5647ace94f51154f204b06aaefb34a9fce94a0c1527b7cd713e87b829), contentStartColumn(10), contentStartLine(1475), org.kframework.attributes.Location(Location(1475,10,1475,91)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortElemDefn{}, SortDefn{}}(VarI:SortElemDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},VarIS:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarIS:SortDefns{}),Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1475"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1475,10,1475,91)"), UNIQUE'Unds'ID{}("efc7fda5647ace94f51154f204b06aaefb34a9fce94a0c1527b7cd713e87b829")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{DataDefn,Defn}(I) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,IS,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,`___WASM_Defns_Defn_Defns`(_8,IS),_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f164ea7960a3502588803b1f7f12af97c519c56e859f282c79897276a24ebdbc), contentStartColumn(10), contentStartLine(1474), org.kframework.attributes.Location(Location(1474,10,1474,91)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortDataDefn{}, SortDefn{}}(VarI:SortDataDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},VarIS:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarIS:SortDefns{}),Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1474"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1474,10,1474,91)"), UNIQUE'Unds'ID{}("f164ea7960a3502588803b1f7f12af97c519c56e859f282c79897276a24ebdbc")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{StartDefn,Defn}(S) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,_6,_7))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,_6,`___WASM_Defns_Defn_Defns`(_9,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(36cf990e84f468abd1b797f4bc3dd2b9ab3e227a15b5b3ae1d94acedb6406df7), contentStartColumn(10), contentStartLine(1477), org.kframework.attributes.Location(Location(1477,10,1477,94)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortStartDefn{}, SortDefn{}}(VarS:SortStartDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{},Var'Unds'7:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1477"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1477,10,1477,94)"), UNIQUE'Unds'ID{}("36cf990e84f468abd1b797f4bc3dd2b9ab3e227a15b5b3ae1d94acedb6406df7")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{TypeDefn,Defn}(T) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,TS,_1,_2,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,`___WASM_Defns_Defn_Defns`(_8,TS),_1,_2,_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(65989b62f20d57bd789e743526946a74d5a939149efbf7707feefab4a21ee84d), contentStartColumn(10), contentStartLine(1462), org.kframework.attributes.Location(Location(1462,10,1462,91)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortTypeDefn{}, SortDefn{}}(VarT:SortTypeDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},VarTS:SortDefns{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarTS:SortDefns{}),Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1462"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1462,10,1462,91)"), UNIQUE'Unds'ID{}("65989b62f20d57bd789e743526946a74d5a939149efbf7707feefab4a21ee84d")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(X) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,FGS,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,`___WASM_Defns_Defn_Defns`(_8,FGS),_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa4ce49282bcc1c0dece76dc08c8fbd012b3382dfd6dd8e1985d67ab0a9ce5c2), contentStartColumn(10), contentStartLine(1467), org.kframework.attributes.Location(Location(1467,10,1467,100)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortGlobalDefn{}, SortDefn{}}(VarX:SortGlobalDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},VarFGS:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarFGS:SortDefns{}),Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1467"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1467,10,1467,100)"), UNIQUE'Unds'ID{}("aa4ce49282bcc1c0dece76dc08c8fbd012b3382dfd6dd8e1985d67ab0a9ce5c2")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(X) #as _8,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,FGS,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,`___WASM_Defns_Defn_Defns`(_8,FGS),_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2c8cc65209fad6763c935a3e17109c464cff2cd89202eb02f1bf9aafdeb318b), contentStartColumn(10), contentStartLine(1466), org.kframework.attributes.Location(Location(1466,10,1466,100)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortFuncDefn{}, SortDefn{}}(VarX:SortFuncDefn{}),Var'Unds'8:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},VarFGS:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'8:SortDefn{},VarFGS:SortDefns{}),Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1466"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1466,10,1466,100)"), UNIQUE'Unds'ID{}("d2c8cc65209fad6763c935a3e17109c464cff2cd89202eb02f1bf9aafdeb318b")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),SORTED_MODULE)=>SORTED_MODULE requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(12a36bbec75955d10917e01826a0398f6977903b0ceeebab3b567b1845afe2c5), contentStartColumn(10), contentStartLine(1460), org.kframework.attributes.Location(Location(1460,10,1460,61)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarSORTED'Unds'MODULE:SortModuleDecl{}),
        VarSORTED'Unds'MODULE:SortModuleDecl{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1460"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1460,10,1460,61)"), UNIQUE'Unds'ID{}("12a36bbec75955d10917e01826a0398f6977903b0ceeebab3b567b1845afe2c5")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,D)=>D requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bf646d735a4636ff835225271ca2092788b3916ccd816e4924af785ef5ecaf4), contentStartColumn(10), contentStartLine(422), org.kframework.attributes.Location(Location(422,10,422,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortFuncSpec{},
          \exists{R} (Var'Unds'1:SortOptionalId{},
          \exists{R} (Var'Unds'0:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    VarC:SortContext{},
                    Var'Unds'0:SortContext{}
                )),\and{R} (
                \ceil{SortDefn{}, R} (
                  \and{SortDefn{}} (
                    VarD:SortDefn{},
                    inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'1:SortOptionalId{},Var'Unds'2:SortFuncSpec{}))
                )),
                \top{R} ()
              ))
          )))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(VarC:SortContext{},VarD:SortDefn{}),
        VarD:SortDefn{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("422"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(422,10,422,34)"), owise{}(), UNIQUE'Unds'ID{}("6bf646d735a4636ff835225271ca2092788b3916ccd816e4924af785ef5ecaf4")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(OID,FS)))=>inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(OID,`#t2aFuncSpec<_>(_)_WASM-TEXT_FuncSpec_Context_FuncSpec`(C,FS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(06567d4077c4e4404a9ff569f56d60064d279ad1e0b2ec16e70e936754fa327e), contentStartColumn(10), contentStartLine(421), org.kframework.attributes.Location(Location(421,10,421,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(VarC:SortContext{},inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},VarFS:SortFuncSpec{}))),
        inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'Hash't2aFuncSpec'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'FuncSpec'Unds'Context'Unds'FuncSpec{}(VarC:SortContext{},VarFS:SortFuncSpec{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("421"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(421,10,421,93)"), UNIQUE'Unds'ID{}("06567d4077c4e4404a9ff569f56d60064d279ad1e0b2ec16e70e936754fa327e")]

// rule `#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,`___WASM_Defns_Defn_Defns`(D,DS))=>`___WASM_Defns_Defn_Defns`(`#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,D),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,DS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7207221b108aa7b90ab86249db03c432084efcaa66f5db988f96a2c159f4351), contentStartColumn(10), contentStartLine(563), org.kframework.attributes.Location(Location(563,10,563,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{})),
        Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(VarC:SortContext{},VarD:SortDefn{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarDS:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("563"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,10,563,74)"), UNIQUE'Unds'ID{}("c7207221b108aa7b90ab86249db03c432084efcaa66f5db988f96a2c159f4351")]

// rule `#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(_0,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e254d1ac18370e1d9a5caf8ad078d5962994251c59679d5e5957288265886615), contentStartColumn(10), contentStartLine(564), org.kframework.attributes.Location(Location(564,10,564,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(Var'Unds'0:SortContext{},\and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortDefns{})),
        Var'Unds'1:SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("564"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(564,10,564,40)"), UNIQUE'Unds'ID{}("e254d1ac18370e1d9a5caf8ad078d5962994251c59679d5e5957288265886615")]

// rule `#t2aFuncSpec<_>(_)_WASM-TEXT_FuncSpec_Context_FuncSpec`(C,`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(WS) #as _1,FS))=>`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(_1,`#t2aFuncSpec<_>(_)_WASM-TEXT_FuncSpec_Context_FuncSpec`(C,FS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f0aa2876bd30e09527b8b49e01d897ef3f335c68f3224aa08353ae2aab7e4864), contentStartColumn(10), contentStartLine(424), org.kframework.attributes.Location(Location(424,10,424,91)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncSpec{},R} (
        Lbl'Hash't2aFuncSpec'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'FuncSpec'Unds'Context'Unds'FuncSpec{}(VarC:SortContext{},Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(\and{SortInlineExport{}}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarWS:SortWasmString{}),Var'Unds'1:SortInlineExport{}),VarFS:SortFuncSpec{})),
        Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Var'Unds'1:SortInlineExport{},Lbl'Hash't2aFuncSpec'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'FuncSpec'Unds'Context'Unds'FuncSpec{}(VarC:SortContext{},VarFS:SortFuncSpec{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("424"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(424,10,424,91)"), UNIQUE'Unds'ID{}("f0aa2876bd30e09527b8b49e01d897ef3f335c68f3224aa08353ae2aab7e4864")]

// rule `#t2aFuncSpec<_>(_)_WASM-TEXT_FuncSpec_Context_FuncSpec`(C,`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(T,LS,IS))=>`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(`#t2aTypeUse<_>(_)_WASM-TEXT_TypeUse_Context_TypeUse`(`#updateLocalIds(_,_)_WASM-TEXT_Context_Context_Map`(C,`#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(T,LS)),T),`#t2aLocalDecls<_>(_)_WASM-TEXT_LocalDecls_Context_LocalDecls`(`#updateLocalIds(_,_)_WASM-TEXT_Context_Context_Map`(C,`#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(T,LS)),LS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(`#updateLocalIds(_,_)_WASM-TEXT_Context_Context_Map`(C,`#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(T,LS)),IS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30207dc5f519fee9863fb2544e7b1f9a5040c62550f98517d0b223579797d672), contentStartColumn(10), contentStartLine(425), org.kframework.attributes.Location(Location(425,10,428,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncSpec{},R} (
        Lbl'Hash't2aFuncSpec'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'FuncSpec'Unds'Context'Unds'FuncSpec{}(VarC:SortContext{},Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{},VarIS:SortInstrs{})),
        Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Lbl'Hash't2aTypeUse'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'TypeUse'Unds'Context'Unds'TypeUse{}(Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(VarC:SortContext{},Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{})),VarT:SortTypeUse{}),Lbl'Hash't2aLocalDecls'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecls'Unds'Context'Unds'LocalDecls{}(Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(VarC:SortContext{},Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{})),VarLS:SortLocalDecls{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(VarC:SortContext{},Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{})),VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("425"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(425,10,428,66)"), UNIQUE'Unds'ID{}("30207dc5f519fee9863fb2544e7b1f9a5040c62550f98517d0b223579797d672")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,`trap_WASM_Instr`(.KList) #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58687e1f429c349bb4edd92f2e840e21e3749796af064aee3ecc070436ea1bdb), contentStartColumn(10), contentStartLine(541), org.kframework.attributes.Location(Location(541,10,541,36)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},\and{SortInstr{}}(Lbltrap'Unds'WASM'Unds'Instr{}(),Var'Unds'0:SortInstr{})),
        Var'Unds'0:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("541"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,10,541,36)"), UNIQUE'Unds'ID{}("58687e1f429c349bb4edd92f2e840e21e3749796af064aee3ecc070436ea1bdb")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,`block__end_WASM_Instr_TypeDecls_Instrs`(TDS,IS))=>`block__end_WASM_Instr_TypeDecls_Instrs`(TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(937b4caf62c9ab0d647e34409b5882e4b4a9bb5d17cd64364d6a10f71414a60e), contentStartColumn(10), contentStartLine(520), org.kframework.attributes.Location(Location(520,10,520,110)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDS:SortTypeDecls{},VarIS:SortInstrs{})),
        Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("520"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(520,10,520,110)"), UNIQUE'Unds'ID{}("937b4caf62c9ab0d647e34409b5882e4b4a9bb5d17cd64364d6a10f71414a60e")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,`block__end_WASM_Instr_VecType_Instrs`(VT,IS))=>`block__end_WASM_Instr_VecType_Instrs`(VT,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b538ce53336defcb20c948f148f52f03d09e8845290fc5410df8004e816b2f5), contentStartColumn(10), contentStartLine(543), org.kframework.attributes.Location(Location(543,10,543,88)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(VarVT:SortVecType{},VarIS:SortInstrs{})),
        Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(VarVT:SortVecType{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("543"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(543,10,543,88)"), UNIQUE'Unds'ID{}("6b538ce53336defcb20c948f148f52f03d09e8845290fc5410df8004e816b2f5")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDS,IS,IS'))=>`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea03564a69a4b6b1f97d67925a9250a9714fac9c71a6bd051298b4a7be3b88c5), contentStartColumn(10), contentStartLine(528), org.kframework.attributes.Location(Location(528,10,528,150)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),
        Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS'Apos':SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("528"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(528,10,528,150)"), UNIQUE'Unds'ID{}("ea03564a69a4b6b1f97d67925a9250a9714fac9c71a6bd051298b4a7be3b88c5")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(PI)))=>`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{PlainInstr,Instr}(PI)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a05059b565619b491875b4e8f3093a10755e504bebb12d4bd3416a482e1940c0), contentStartColumn(10), contentStartLine(447), org.kframework.attributes.Location(Location(447,10,447,85)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(VarPI:SortPlainInstr{}))),
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortPlainInstr{}, SortInstr{}}(VarPI:SortPlainInstr{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("447"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(447,10,447,85)"), UNIQUE'Unds'ID{}("a05059b565619b491875b4e8f3093a10755e504bebb12d4bd3416a482e1940c0")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(__)_WASM-TEXT_FoldedInstr_PlainInstr_Instrs`(PI,IS)))=>inj{FoldedInstr,Instr}(`(__)_WASM-TEXT_FoldedInstr_PlainInstr_Instrs`(`project:PlainInstr`(inj{Instr,KItem}(`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{PlainInstr,Instr}(PI)))),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72da62cb4c4e15bb810348e4d923b7ac2480ed4f70f2c55e50f44e035ae0e3c9), contentStartColumn(10), contentStartLine(446), org.kframework.attributes.Location(Location(446,10,446,118)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(VarPI:SortPlainInstr{},VarIS:SortInstrs{}))),
        inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Lblproject'Coln'PlainInstr{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortPlainInstr{}, SortInstr{}}(VarPI:SortPlainInstr{}))),dotk{}())),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("446"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(446,10,446,118)"), UNIQUE'Unds'ID{}("72da62cb4c4e15bb810348e4d923b7ac2480ed4f70f2c55e50f44e035ae0e3c9")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(block___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(OID,TDS,IS)))=>inj{FoldedInstr,Instr}(`(block___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(OID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2601b6da913ae457c68e742a68944fc40f4372bbe716b81e2aa76be8f76c7350), contentStartColumn(10), contentStartLine(522), org.kframework.attributes.Location(Location(522,10,522,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{}))),
        inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("522"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(522,10,522,107)"), UNIQUE'Unds'ID{}("2601b6da913ae457c68e742a68944fc40f4372bbe716b81e2aa76be8f76c7350")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(if___(then_)(else_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(OID,TDS,COND,IS,IS')))=>inj{FoldedInstr,Instr}(`(if___(then_)(else_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(OID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,COND),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS'))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b21f35491d1b3598e1d1a683742eedf393d66e912e68128feece08b9a01416cd), contentStartColumn(10), contentStartLine(532), org.kframework.attributes.Location(Location(532,10,532,171)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarCOND:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{}))),
        inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarCOND:SortInstrs{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS'Apos':SortInstrs{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("532"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,10,532,171)"), UNIQUE'Unds'ID{}("b21f35491d1b3598e1d1a683742eedf393d66e912e68128feece08b9a01416cd")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(if___(then_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs`(OID,TDS,COND,IS)))=>inj{FoldedInstr,Instr}(`(if___(then_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs`(OID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,COND),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(438086b2265f2137fc9939cf6c49dc617058662bbcf0b32b6efd6e2c352367ec), contentStartColumn(10), contentStartLine(531), org.kframework.attributes.Location(Location(531,10,531,145)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarCOND:SortInstrs{},VarIS:SortInstrs{}))),
        inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarCOND:SortInstrs{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("531"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,10,531,145)"), UNIQUE'Unds'ID{}("438086b2265f2137fc9939cf6c49dc617058662bbcf0b32b6efd6e2c352367ec")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(loop___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(OID,TDS,IS)))=>inj{FoldedInstr,Instr}(`(loop___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(OID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4f9501d87c8303b973f9f34f8881664cbbe77c4feec3650074a6ff67d8c33dd), contentStartColumn(10), contentStartLine(526), org.kframework.attributes.Location(Location(526,10,526,97)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{}))),
        inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("526"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,10,526,97)"), UNIQUE'Unds'ID{}("f4f9501d87c8303b973f9f34f8881664cbbe77c4feec3650074a6ff67d8c33dd")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`block___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDS,IS,OID)))=>inj{BlockInstr,Instr}(`block___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),OID)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(033df5c89202c7bcac8182d84fd1e033e2a2b3a58d2295b138af469075774df6), contentStartColumn(10), contentStartLine(521), org.kframework.attributes.Location(Location(521,10,521,114)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},VarOID:SortOptionalId{}))),
        inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),VarOID:SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("521"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,10,521,114)"), UNIQUE'Unds'ID{}("033df5c89202c7bcac8182d84fd1e033e2a2b3a58d2295b138af469075774df6")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDS,IS,OID',IS',OID'')))=>inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),OID',`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS'),OID'')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(351489acfb7bab898a33b05915030906d2c1e75fcf0fa8dab2db07666db0e93a), contentStartColumn(10), contentStartLine(529), org.kframework.attributes.Location(Location(529,10,529,156)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarIS'Apos':SortInstrs{},VarOID'AposApos':SortOptionalId{}))),
        inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),VarOID'Apos':SortOptionalId{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS'Apos':SortInstrs{}),VarOID'AposApos':SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("529"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(529,10,529,156)"), UNIQUE'Unds'ID{}("351489acfb7bab898a33b05915030906d2c1e75fcf0fa8dab2db07666db0e93a")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(OID,TDS,IS,OID'')))=>inj{BlockInstr,Instr}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(OID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),OID'')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2f23ccfc623b21ef35fce7449ba022221fd3f494c8dc5a9c85ecb864bae2aaa), contentStartColumn(10), contentStartLine(530), org.kframework.attributes.Location(Location(530,10,530,156)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'AposApos':SortOptionalId{}))),
        inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),VarOID'AposApos':SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("530"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,10,530,156)"), UNIQUE'Unds'ID{}("d2f23ccfc623b21ef35fce7449ba022221fd3f494c8dc5a9c85ecb864bae2aaa")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`loop___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDS,IS,OID')))=>inj{BlockInstr,Instr}(`loop___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),OID')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2479bc26e3eb99e638eee1716ad1b8cba25ac6795c6ee5ccd635d7c9ae210cde), contentStartColumn(10), contentStartLine(525), org.kframework.attributes.Location(Location(525,10,525,105)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{}))),
        inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),VarOID'Apos':SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("525"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(525,10,525,105)"), UNIQUE'Unds'ID{}("2479bc26e3eb99e638eee1716ad1b8cba25ac6795c6ee5ccd635d7c9ae210cde")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,`loop__end_WASM_Instr_TypeDecls_Instrs`(TDS,IS))=>`loop__end_WASM_Instr_TypeDecls_Instrs`(TDS,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b8c1cf215546fd67026ac37b2ee89e08852b30324b7b501076bf3907db000609), contentStartColumn(10), contentStartLine(524), org.kframework.attributes.Location(Location(524,10,524,100)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDS:SortTypeDecls{},VarIS:SortInstrs{})),
        Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDS:SortTypeDecls{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("524"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,10,524,100)"), UNIQUE'Unds'ID{}("b8c1cf215546fd67026ac37b2ee89e08852b30324b7b501076bf3907db000609")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,`init_local___WASM_Instr_Int_Val`(I,V) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(223265d6293ee64d575ed0b086cd178b6aa767d2ab2c9eac71eefced9eccd435), contentStartColumn(10), contentStartLine(545), org.kframework.attributes.Location(Location(545,10,545,56)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarI:SortInt{},VarV:SortVal{}),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("545"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(545,10,545,56)"), UNIQUE'Unds'ID{}("223265d6293ee64d575ed0b086cd178b6aa767d2ab2c9eac71eefced9eccd435")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,`init_locals__WASM_Instr_ValStack`(VS) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(abac7768bd7c876ec44874d522d8168ea5709b3384fb3271e20bab9d6ea15249), contentStartColumn(10), contentStartLine(546), org.kframework.attributes.Location(Location(546,10,546,56)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(VarVS:SortValStack{}),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("546"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,10,546,56)"), UNIQUE'Unds'ID{}("abac7768bd7c876ec44874d522d8168ea5709b3384fb3271e20bab9d6ea15249")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60400557b78ec5c2587ac7350469deb91f1d39f83b6327559cc2f85738330961), contentStartColumn(10), contentStartLine(507), org.kframework.attributes.Location(Location(507,10,507,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},VarOP:SortCvtOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("507"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(507,10,507,58)"), UNIQUE'Unds'ID{}("60400557b78ec5c2587ac7350469deb91f1d39f83b6327559cc2f85738330961")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_FValType_FBinOp`(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea678f0ab5b3d54f3e15d68e1413373be6fa8be44a7e9e140d1a1b22fad62b7a), contentStartColumn(10), contentStartLine(503), org.kframework.attributes.Location(Location(503,10,503,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(VarFTYPE:SortFValType{},VarOP:SortFBinOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("503"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(503,10,503,58)"), UNIQUE'Unds'ID{}("ea678f0ab5b3d54f3e15d68e1413373be6fa8be44a7e9e140d1a1b22fad62b7a")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_FValType_FRelOp`(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85952eb6a7938213837e60f1e37797fb032b88f7c5d5f1dc9cf1f3ebd29f2842), contentStartColumn(10), contentStartLine(506), org.kframework.attributes.Location(Location(506,10,506,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(VarFTYPE:SortFValType{},VarOP:SortFRelOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("506"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,10,506,58)"), UNIQUE'Unds'ID{}("85952eb6a7938213837e60f1e37797fb032b88f7c5d5f1dc9cf1f3ebd29f2842")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_FValType_FUnOp`(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f42f8cb54283e601914df7de104da86940d2603bd68856d2c922b48ac67e31a6), contentStartColumn(10), contentStartLine(501), org.kframework.attributes.Location(Location(501,10,501,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(VarFTYPE:SortFValType{},VarOP:SortFUnOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("501"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(501,10,501,58)"), UNIQUE'Unds'ID{}("f42f8cb54283e601914df7de104da86940d2603bd68856d2c922b48ac67e31a6")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_FValType_LoadOpM`(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1512fe64db87f7434b08b957fd5a363ce565f5837f4682fdefd55c2d1200c4b), contentStartColumn(10), contentStartLine(490), org.kframework.attributes.Location(Location(490,10,490,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(VarFTYPE:SortFValType{},VarOP:SortLoadOpM{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("490"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(490,10,490,62)"), UNIQUE'Unds'ID{}("d1512fe64db87f7434b08b957fd5a363ce565f5837f4682fdefd55c2d1200c4b")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_FValType_StoreOpM`(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a81161b5470cd87fdae03803350c6cbb74c89cd35ce7680fefe0af1d82dc22e), contentStartColumn(10), contentStartLine(488), org.kframework.attributes.Location(Location(488,10,488,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(VarFTYPE:SortFValType{},VarOP:SortStoreOpM{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("488"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(488,10,488,62)"), UNIQUE'Unds'ID{}("2a81161b5470cd87fdae03803350c6cbb74c89cd35ce7680fefe0af1d82dc22e")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(492f309ed768fd20508066d056503c4f7325889a482f7d8ea492b3b0f19cc3be), contentStartColumn(10), contentStartLine(502), org.kframework.attributes.Location(Location(502,10,502,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(VarITYPE:SortIValType{},VarOP:SortIBinOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("502"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(502,10,502,58)"), UNIQUE'Unds'ID{}("492f309ed768fd20508066d056503c4f7325889a482f7d8ea492b3b0f19cc3be")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73d0b7533c85944eb83111ae36ed6da9ce5969f465b76954494762f5b2e0cb7d), contentStartColumn(10), contentStartLine(505), org.kframework.attributes.Location(Location(505,10,505,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(VarITYPE:SortIValType{},VarOP:SortIRelOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("505"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,10,505,58)"), UNIQUE'Unds'ID{}("73d0b7533c85944eb83111ae36ed6da9ce5969f465b76954494762f5b2e0cb7d")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IUnOp`(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(978e2bd380fe57d1005a32b1a5ec760c335a4b9621a6b3ad4456bb0706733a7b), contentStartColumn(10), contentStartLine(500), org.kframework.attributes.Location(Location(500,10,500,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(VarITYPE:SortIValType{},VarOP:SortIUnOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("500"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(500,10,500,58)"), UNIQUE'Unds'ID{}("978e2bd380fe57d1005a32b1a5ec760c335a4b9621a6b3ad4456bb0706733a7b")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0123992e2b53362419d3d8ace10480b6e32ad920ee0ab3727767c5eeaabf1bc), contentStartColumn(10), contentStartLine(489), org.kframework.attributes.Location(Location(489,10,489,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},VarOP:SortLoadOpM{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("489"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(489,10,489,62)"), UNIQUE'Unds'ID{}("b0123992e2b53362419d3d8ace10480b6e32ad920ee0ab3727767c5eeaabf1bc")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_StoreOpM`(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(059c328fab5b3f3fdfca508bf47b23bbc819b3e55061a1f0e44ada5e28afe73a), contentStartColumn(10), contentStartLine(487), org.kframework.attributes.Location(Location(487,10,487,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},VarOP:SortStoreOpM{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("487"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(487,10,487,62)"), UNIQUE'Unds'ID{}("059c328fab5b3f3fdfca508bf47b23bbc819b3e55061a1f0e44ada5e28afe73a")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_TestOp`(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db840efb2a5b35d0033dcd46ba5fe0bd4bfa0433331d057e5cc8e4bb2ecad717), contentStartColumn(10), contentStartLine(504), org.kframework.attributes.Location(Location(504,10,504,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(VarITYPE:SortIValType{},VarOP:SortTestOp{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("504"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(504,10,504,58)"), UNIQUE'Unds'ID{}("db840efb2a5b35d0033dcd46ba5fe0bd4bfa0433331d057e5cc8e4bb2ecad717")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_FValType_Number`(FTYPE,N)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1fcaddebb24c4f14766db40112a91a624e43cbe8ca197facdb7135d3e515394), contentStartColumn(10), contentStartLine(499), org.kframework.attributes.Location(Location(499,10,499,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},VarN:SortNumber{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("499"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(499,10,499,63)"), UNIQUE'Unds'ID{}("d1fcaddebb24c4f14766db40112a91a624e43cbe8ca197facdb7135d3e515394")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_WasmInt`(ITYPE,I)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b067f81df1cfb49585b8115c93a5d90c8e25a122edf5af5afd6440986e5643a3), contentStartColumn(10), contentStartLine(498), org.kframework.attributes.Location(Location(498,10,498,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(VarITYPE:SortIValType{},VarI:SortWasmInt{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("498"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(498,10,498,63)"), UNIQUE'Unds'ID{}("b067f81df1cfb49585b8115c93a5d90c8e25a122edf5af5afd6440986e5643a3")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(L)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73d296e64247584fe1bc03df4d664ea3a109edf2cfabdb68f3deebc1dbd13729), contentStartColumn(10), contentStartLine(455), org.kframework.attributes.Location(Location(455,10,455,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarL:SortIndex{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("455"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(455,10,455,48)"), UNIQUE'Unds'ID{}("73d296e64247584fe1bc03df4d664ea3a109edf2cfabdb68f3deebc1dbd13729")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(L)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40fb36854e5c11fd9b53808f40f8b1ccb508e3717dafaebd524bde813bc31db4), contentStartColumn(10), contentStartLine(456), org.kframework.attributes.Location(Location(456,10,456,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarL:SortIndex{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("456"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(456,10,456,51)"), UNIQUE'Unds'ID{}("40fb36854e5c11fd9b53808f40f8b1ccb508e3717dafaebd524bde813bc31db4")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`br_table__WASM_PlainInstr_ElemSegment`(ES)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7411edf6b4082e8b6c4a009ce624e0c2d0dbdd8b1a55c445c747a75382fc823), contentStartColumn(10), contentStartLine(457), org.kframework.attributes.Location(Location(457,10,457,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(VarES:SortElemSegment{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("457"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(457,10,457,55)"), UNIQUE'Unds'ID{}("f7411edf6b4082e8b6c4a009ce624e0c2d0dbdd8b1a55c445c747a75382fc823")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(F)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72d16290412370b836338eea40990da488fa76667c5a7f60e9cd43250e5003a7), contentStartColumn(10), contentStartLine(459), org.kframework.attributes.Location(Location(459,10,459,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarF:SortIndex{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("459"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(459,10,459,50)"), UNIQUE'Unds'ID{}("72d16290412370b836338eea40990da488fa76667c5a7f60e9cd43250e5003a7")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`call_indirect__WASM_PlainInstr_TypeUse`(TU)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dba344ef2c6c9cc21a0e03a4feefe2e4cddab83ebf01b1e30e6bcd2e523eceaf), contentStartColumn(10), contentStartLine(460), org.kframework.attributes.Location(Location(460,10,460,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTU:SortTypeUse{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("460"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(460,10,460,60)"), UNIQUE'Unds'ID{}("dba344ef2c6c9cc21a0e03a4feefe2e4cddab83ebf01b1e30e6bcd2e523eceaf")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`drop_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d93e3f5976109d17801a1efb035a6822b6ae00967714287eef959855f29aefcc), contentStartColumn(10), contentStartLine(466), org.kframework.attributes.Location(Location(466,10,466,38)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbldrop'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("466"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(466,10,466,38)"), UNIQUE'Unds'ID{}("d93e3f5976109d17801a1efb035a6822b6ae00967714287eef959855f29aefcc")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`global.get__WASM_PlainInstr_Index`(I)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1ac6dc564189ee8ded973e6f0f05ac30d6f307fd5ba541173fb902270f0737c), contentStartColumn(10), contentStartLine(480), org.kframework.attributes.Location(Location(480,10,480,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarI:SortIndex{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("480"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,10,480,55)"), UNIQUE'Unds'ID{}("f1ac6dc564189ee8ded973e6f0f05ac30d6f307fd5ba541173fb902270f0737c")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`global.set__WASM_PlainInstr_Index`(I)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a91a1cedff605b15b935dbcb05e76bac9d48305db52f04470ca55e17f757d6), contentStartColumn(10), contentStartLine(481), org.kframework.attributes.Location(Location(481,10,481,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarI:SortIndex{})),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("481"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(481,10,481,55)"), UNIQUE'Unds'ID{}("e9a91a1cedff605b15b935dbcb05e76bac9d48305db52f04470ca55e17f757d6")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(I))) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1e2e1231f84546942720e1f58256df2b4ec4ab1177687ea7ced46fa6aeaed9a1), contentStartColumn(10), contentStartLine(477), org.kframework.attributes.Location(Location(477,10,477,54)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("477"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(477,10,477,54)"), UNIQUE'Unds'ID{}("1e2e1231f84546942720e1f58256df2b4ec4ab1177687ea7ced46fa6aeaed9a1")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(I))) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5991f105ea511890efc349d7f60909884bf2cc441db8605f7a48fa0d2655be79), contentStartColumn(10), contentStartLine(478), org.kframework.attributes.Location(Location(478,10,478,54)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("478"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(478,10,478,54)"), UNIQUE'Unds'ID{}("5991f105ea511890efc349d7f60909884bf2cc441db8605f7a48fa0d2655be79")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`local.tee__WASM_PlainInstr_Index`(inj{Int,Index}(I))) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bbdc0948807038d8012c8cab02bb7d1ff1cc0103db360f256366ce3ecfde7430), contentStartColumn(10), contentStartLine(479), org.kframework.attributes.Location(Location(479,10,479,54)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("479"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(479,10,479,54)"), UNIQUE'Unds'ID{}("bbdc0948807038d8012c8cab02bb7d1ff1cc0103db360f256366ce3ecfde7430")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`memory.grow_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(450d478ee606ebda30c9eb7bcada7234627c5e5d98e50bec9cc3a4a175444604), contentStartColumn(10), contentStartLine(492), org.kframework.attributes.Location(Location(492,10,492,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("492"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(492,10,492,65)"), UNIQUE'Unds'ID{}("450d478ee606ebda30c9eb7bcada7234627c5e5d98e50bec9cc3a4a175444604")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`memory.size_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb972d4d2a356922e923b46c0aaa06c61c1008d516e69d970f7387819ce86bf9), contentStartColumn(10), contentStartLine(491), org.kframework.attributes.Location(Location(491,10,491,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("491"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(491,10,491,65)"), UNIQUE'Unds'ID{}("bb972d4d2a356922e923b46c0aaa06c61c1008d516e69d970f7387819ce86bf9")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`nop_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b748887908eb8b585e9f6c3afa6bc4d047f91918d0d8b0964800f8f5558f539d), contentStartColumn(10), contentStartLine(454), org.kframework.attributes.Location(Location(454,10,454,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblnop'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("454"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(454,10,454,47)"), UNIQUE'Unds'ID{}("b748887908eb8b585e9f6c3afa6bc4d047f91918d0d8b0964800f8f5558f539d")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`return_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6adcc6befd7e6d7b434017f59b3b09a391796ae7df42c0646a143d8e27fcaa84), contentStartColumn(10), contentStartLine(458), org.kframework.attributes.Location(Location(458,10,458,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("458"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(458,10,458,50)"), UNIQUE'Unds'ID{}("6adcc6befd7e6d7b434017f59b3b09a391796ae7df42c0646a143d8e27fcaa84")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`select_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fbde71542ff48cebe4da38913b1f4e60c5fb45d30dbaeefc890bbeb348c57494), contentStartColumn(10), contentStartLine(467), org.kframework.attributes.Location(Location(467,10,467,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblselect'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("467"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,10,467,40)"), UNIQUE'Unds'ID{}("fbde71542ff48cebe4da38913b1f4e60c5fb45d30dbaeefc890bbeb348c57494")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`unreachable_WASM_PlainInstr`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b8c53f2bce9a788321599ca2ece1a8155426d2da7738735fdb7b6b9665d09e4), contentStartColumn(10), contentStartLine(453), org.kframework.attributes.Location(Location(453,10,453,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Var'Unds'0:SortContext{},\and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblunreachable'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'1:SortInstr{})),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("453"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(453,10,453,55)"), UNIQUE'Unds'ID{}("3b8c53f2bce9a788321599ca2ece1a8155426d2da7738735fdb7b6b9665d09e4")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_)_WASM-TEXT_Context_Map`(LIDS),inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(`project:Int`(`Map:lookup`(LIDS,inj{Identifier,KItem}(ID)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(65ac28f20bb358ae87c77f1dc6752e8324b93156ad96ab37f1b55442f18c6384), contentStartColumn(10), contentStartLine(473), org.kframework.attributes.Location(Location(473,10,473,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(VarLIDS:SortMap{}),inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),
        inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarLIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("473"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(473,10,473,98)"), UNIQUE'Unds'ID{}("65ac28f20bb358ae87c77f1dc6752e8324b93156ad96ab37f1b55442f18c6384")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_)_WASM-TEXT_Context_Map`(LIDS),inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(`project:Int`(`Map:lookup`(LIDS,inj{Identifier,KItem}(ID)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a49b13682049ffca8eec7c52bf78bf9dca18538fd6a88cc20b9ea22fe5a0fee5), contentStartColumn(10), contentStartLine(474), org.kframework.attributes.Location(Location(474,10,474,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(VarLIDS:SortMap{}),inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),
        inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarLIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("474"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(474,10,474,98)"), UNIQUE'Unds'ID{}("a49b13682049ffca8eec7c52bf78bf9dca18538fd6a88cc20b9ea22fe5a0fee5")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_)_WASM-TEXT_Context_Map`(LIDS),inj{PlainInstr,Instr}(`local.tee__WASM_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>inj{PlainInstr,Instr}(`local.tee__WASM_PlainInstr_Index`(inj{Int,Index}(`project:Int`(`Map:lookup`(LIDS,inj{Identifier,KItem}(ID)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93a510a50efe6b8fbf5034666ce90562ff8ee9caaa26d9dce133d06acc302bc4), contentStartColumn(10), contentStartLine(475), org.kframework.attributes.Location(Location(475,10,475,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(VarLIDS:SortMap{}),inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),
        inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarLIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("475"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,10,475,98)"), UNIQUE'Unds'ID{}("93a510a50efe6b8fbf5034666ce90562ff8ee9caaa26d9dce133d06acc302bc4")]

// rule `#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,`___WASM_Instrs_Instr_Instrs`(I,IS))=>`___WASM_Instrs_Instr_Instrs`(`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,I),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c12d0bb9f23a2e72fc342aa5e8f9574fb88422481132ac93ff35170a714e624), contentStartColumn(10), contentStartLine(566), org.kframework.attributes.Location(Location(566,10,566,79)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS:SortInstrs{})),
        Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},VarI:SortInstr{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("566"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,10,566,79)"), UNIQUE'Unds'ID{}("0c12d0bb9f23a2e72fc342aa5e8f9574fb88422481132ac93ff35170a714e624")]

// rule `#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(_0,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7863387f79537bae54db7ba855d98919f43506ffa14a29c7a6920edd80fb8738), contentStartColumn(10), contentStartLine(567), org.kframework.attributes.Location(Location(567,10,567,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(Var'Unds'0:SortContext{},\and{SortInstrs{}}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortInstrs{})),
        Var'Unds'1:SortInstrs{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("567"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(567,10,567,43)"), UNIQUE'Unds'ID{}("7863387f79537bae54db7ba855d98919f43506ffa14a29c7a6920edd80fb8738")]

// rule `#t2aLocalDecl<_>(_)_WASM-TEXT_LocalDecl_Context_LocalDecl`(C,LD)=>LD requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7701fb93fbc094760142e93ec93894a32ade1065877573cf77bc0a7bd15decac), contentStartColumn(10), contentStartLine(436), org.kframework.attributes.Location(Location(436,10,436,36)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortAValType{},
          \exists{R} (Var'Unds'1:SortIdentifier{},
          \exists{R} (Var'Unds'0:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    VarC:SortContext{},
                    Var'Unds'0:SortContext{}
                )),\and{R} (
                \ceil{SortLocalDecl{}, R} (
                  \and{SortLocalDecl{}} (
                    VarLD:SortLocalDecl{},
                    Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Var'Unds'1:SortIdentifier{},Var'Unds'2:SortAValType{})
                )),
                \top{R} ()
              ))
          )))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortLocalDecl{},R} (
        Lbl'Hash't2aLocalDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecl'Unds'Context'Unds'LocalDecl{}(VarC:SortContext{},VarLD:SortLocalDecl{}),
        VarLD:SortLocalDecl{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("436"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(436,10,436,36)"), owise{}(), UNIQUE'Unds'ID{}("7701fb93fbc094760142e93ec93894a32ade1065877573cf77bc0a7bd15decac")]

// rule `#t2aLocalDecl<_>(_)_WASM-TEXT_LocalDecl_Context_LocalDecl`(C,`local___WASM_LocalDecl_Identifier_AValType`(ID,AVT))=>`local__WASM_LocalDecl_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(AVT),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bde9b8889ef2346488cf356a2f34cf67cd65ed053950a05f8fe85b6bcea651ad), contentStartColumn(10), contentStartLine(435), org.kframework.attributes.Location(Location(435,10,435,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecl{},R} (
        Lbl'Hash't2aLocalDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecl'Unds'Context'Unds'LocalDecl{}(VarC:SortContext{},Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarAVT:SortAValType{})),
        Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarAVT:SortAValType{}),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("435"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(435,10,435,83)"), UNIQUE'Unds'ID{}("bde9b8889ef2346488cf356a2f34cf67cd65ed053950a05f8fe85b6bcea651ad")]

// rule `#t2aLocalDecls<_>(_)_WASM-TEXT_LocalDecls_Context_LocalDecls`(C,`___WASM_LocalDecls_LocalDecl_LocalDecls`(LD,LDS))=>`___WASM_LocalDecls_LocalDecl_LocalDecls`(`#t2aLocalDecl<_>(_)_WASM-TEXT_LocalDecl_Context_LocalDecl`(C,LD),`#t2aLocalDecls<_>(_)_WASM-TEXT_LocalDecls_Context_LocalDecls`(C,LDS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85324c7cc4e04f091ae3d63970763fb4f9550dc37a802331ae83c63f6aaf3c2d), contentStartColumn(10), contentStartLine(569), org.kframework.attributes.Location(Location(569,10,569,103)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecls{},R} (
        Lbl'Hash't2aLocalDecls'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecls'Unds'Context'Unds'LocalDecls{}(VarC:SortContext{},Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(VarLD:SortLocalDecl{},VarLDS:SortLocalDecls{})),
        Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbl'Hash't2aLocalDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecl'Unds'Context'Unds'LocalDecl{}(VarC:SortContext{},VarLD:SortLocalDecl{}),Lbl'Hash't2aLocalDecls'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecls'Unds'Context'Unds'LocalDecls{}(VarC:SortContext{},VarLDS:SortLocalDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("569"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,10,569,103)"), UNIQUE'Unds'ID{}("85324c7cc4e04f091ae3d63970763fb4f9550dc37a802331ae83c63f6aaf3c2d")]

// rule `#t2aLocalDecls<_>(_)_WASM-TEXT_LocalDecls_Context_LocalDecls`(_0,`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(152785bc85e593c43febb33988737d640a17fd2dab8bb23af16e4331307a44f0), contentStartColumn(10), contentStartLine(570), org.kframework.attributes.Location(Location(570,10,570,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecls{},R} (
        Lbl'Hash't2aLocalDecls'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'LocalDecls'Unds'Context'Unds'LocalDecls{}(Var'Unds'0:SortContext{},\and{SortLocalDecls{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(),Var'Unds'1:SortLocalDecls{})),
        Var'Unds'1:SortLocalDecls{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("570"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(570,10,570,55)"), UNIQUE'Unds'ID{}("152785bc85e593c43febb33988737d640a17fd2dab8bb23af16e4331307a44f0")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,inj{Defn,Stmt}(D))=>inj{Defn,Stmt}(`#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,D)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66cd5de72c835b9887b4a33794c3646304d6ae82f656721a41d8d635fbdf86bc), contentStartColumn(10), contentStartLine(417), org.kframework.attributes.Location(Location(417,10,417,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(VarC:SortContext{},inj{SortDefn{}, SortStmt{}}(VarD:SortDefn{})),
        inj{SortDefn{}, SortStmt{}}(Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(VarC:SortContext{},VarD:SortDefn{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("417"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(417,10,417,48)"), UNIQUE'Unds'ID{}("66cd5de72c835b9887b4a33794c3646304d6ae82f656721a41d8d635fbdf86bc")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,inj{Instr,Stmt}(I))=>inj{Instr,Stmt}(`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29935f3dd1a876f1792d6e7da7a524dd4b2100e7248822bd0d5e21224806d09b), contentStartColumn(10), contentStartLine(418), org.kframework.attributes.Location(Location(418,10,418,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(VarC:SortContext{},inj{SortInstr{}, SortStmt{}}(VarI:SortInstr{})),
        inj{SortInstr{}, SortStmt{}}(Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},VarI:SortInstr{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("418"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,418,49)"), UNIQUE'Unds'ID{}("29935f3dd1a876f1792d6e7da7a524dd4b2100e7248822bd0d5e21224806d09b")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,inj{ModuleDecl,Stmt}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(OID,DS)))=>inj{ModuleDecl,Stmt}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(OID,`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,DS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f32bc3083d9f59f77ed478dc8123e7c2ac485d432bdca0aeb3306d85d8713320), contentStartColumn(10), contentStartLine(416), org.kframework.attributes.Location(Location(416,10,416,86)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(VarC:SortContext{},inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},VarDS:SortDefns{}))),
        inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarDS:SortDefns{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("416"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,10,416,86)"), UNIQUE'Unds'ID{}("f32bc3083d9f59f77ed478dc8123e7c2ac485d432bdca0aeb3306d85d8713320")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(_0,S)=>S requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5729bc5823934a38e38d1535be9e3b6b7293336ef1959159f6543d1d71ce4675), contentStartColumn(10), contentStartLine(419), org.kframework.attributes.Location(Location(419,10,419,29)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortOptionalId{},
          \exists{R} (Var'Unds'3:SortDefns{},
          \exists{R} (Var'Unds'1:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    Var'Unds'0:SortContext{},
                    Var'Unds'1:SortContext{}
                )),\and{R} (
                \ceil{SortStmt{}, R} (
                  \and{SortStmt{}} (
                    VarS:SortStmt{},
                    inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Var'Unds'2:SortOptionalId{},Var'Unds'3:SortDefns{}))
                )),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'5:SortDefn{},
          \exists{R} (Var'Unds'4:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    Var'Unds'0:SortContext{},
                    Var'Unds'4:SortContext{}
                )),\and{R} (
                \ceil{SortStmt{}, R} (
                  \and{SortStmt{}} (
                    VarS:SortStmt{},
                    inj{SortDefn{}, SortStmt{}}(Var'Unds'5:SortDefn{})
                )),
                \top{R} ()
              ))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'6:SortContext{},
          \exists{R} (Var'Unds'7:SortInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    Var'Unds'0:SortContext{},
                    Var'Unds'6:SortContext{}
                )),\and{R} (
                \ceil{SortStmt{}, R} (
                  \and{SortStmt{}} (
                    VarS:SortStmt{},
                    inj{SortInstr{}, SortStmt{}}(Var'Unds'7:SortInstr{})
                )),
                \top{R} ()
              ))
          ))),
          \bottom{R}()
        )))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(Var'Unds'0:SortContext{},VarS:SortStmt{}),
        VarS:SortStmt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("419"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(419,10,419,29)"), owise{}(), UNIQUE'Unds'ID{}("5729bc5823934a38e38d1535be9e3b6b7293336ef1959159f6543d1d71ce4675")]

// rule `#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(C,`___WASM_Stmts_Stmt_Stmts`(S,SS))=>`___WASM_Stmts_Stmt_Stmts`(`#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,S),`#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(C,SS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(81111f20c49f77cb8dfebcb688af1ed594c2a29f237ed736854d7d924fe6e888), contentStartColumn(10), contentStartLine(560), org.kframework.attributes.Location(Location(560,10,560,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(VarC:SortContext{},Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})),
        Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(VarC:SortContext{},VarS:SortStmt{}),Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(VarC:SortContext{},VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("560"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(560,10,560,74)"), UNIQUE'Unds'ID{}("81111f20c49f77cb8dfebcb688af1ed594c2a29f237ed736854d7d924fe6e888")]

// rule `#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(_0,inj{EmptyStmts,Stmts}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(795079dfbc6edb9e0164fd576f15ab841702840bdabc2e6edd41ff4020aa20c1), contentStartColumn(10), contentStartLine(561), org.kframework.attributes.Location(Location(561,10,561,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(Var'Unds'0:SortContext{},\and{SortStmts{}}(inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortStmts{})),
        Var'Unds'1:SortStmts{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("561"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,10,561,40)"), UNIQUE'Unds'ID{}("795079dfbc6edb9e0164fd576f15ab841702840bdabc2e6edd41ff4020aa20c1")]

// rule `#t2aTypeUse<_>(_)_WASM-TEXT_TypeUse_Context_TypeUse`(C,inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`param___WASM_TypeDecl_Identifier_AValType`(ID,AVT),TDS)))=>inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(AVT),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))),`project:TypeDecls`(inj{TypeUse,KItem}(`#t2aTypeUse<_>(_)_WASM-TEXT_TypeUse_Context_TypeUse`(C,inj{TypeDecls,TypeUse}(TDS)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(14082ecfe42ce4310340fe0f0819bdaa9bda15259503e664a5778f3bbe942eb7), contentStartColumn(10), contentStartLine(432), org.kframework.attributes.Location(Location(432,10,432,104)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeUse{},R} (
        Lbl'Hash't2aTypeUse'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'TypeUse'Unds'Context'Unds'TypeUse{}(VarC:SortContext{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarAVT:SortAValType{}),VarTDS:SortTypeDecls{}))),
        inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarAVT:SortAValType{}),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),Lblproject'Coln'TypeDecls{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(Lbl'Hash't2aTypeUse'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'TypeUse'Unds'Context'Unds'TypeUse{}(VarC:SortContext{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}))),dotk{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("432"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,10,432,104)"), UNIQUE'Unds'ID{}("14082ecfe42ce4310340fe0f0819bdaa9bda15259503e664a5778f3bbe942eb7")]

// rule `#t2aTypeUse<_>(_)_WASM-TEXT_TypeUse_Context_TypeUse`(_0,TU)=>TU requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6fda39183c1e9ab73842a45f94c8a4034c80bd68b69acd99555215989d896085), contentStartColumn(10), contentStartLine(433), org.kframework.attributes.Location(Location(433,10,433,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortIdentifier{},
          \exists{R} (Var'Unds'3:SortAValType{},
          \exists{R} (Var'Unds'1:SortContext{},
          \exists{R} (Var'Unds'4:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    Var'Unds'0:SortContext{},
                    Var'Unds'1:SortContext{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    VarTU:SortTypeUse{},
                    inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Var'Unds'2:SortIdentifier{},Var'Unds'3:SortAValType{}),Var'Unds'4:SortTypeDecls{}))
                )),
                \top{R} ()
              ))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'6:SortIndex{},
          \exists{R} (Var'Unds'7:SortTypeDecls{},
          \exists{R} (Var'Unds'5:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortContext{}, R} (
                  \and{SortContext{}} (
                    Var'Unds'0:SortContext{},
                    Var'Unds'5:SortContext{}
                )),\and{R} (
                \ceil{SortTypeUse{}, R} (
                  \and{SortTypeUse{}} (
                    VarTU:SortTypeUse{},
                    Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'6:SortIndex{},Var'Unds'7:SortTypeDecls{})
                )),
                \top{R} ()
              ))
          )))),
          \bottom{R}()
        ))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortTypeUse{},R} (
        Lbl'Hash't2aTypeUse'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'TypeUse'Unds'Context'Unds'TypeUse{}(Var'Unds'0:SortContext{},VarTU:SortTypeUse{}),
        VarTU:SortTypeUse{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("433"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(433,10,433,34)"), owise{}(), UNIQUE'Unds'ID{}("6fda39183c1e9ab73842a45f94c8a4034c80bd68b69acd99555215989d896085")]

// rule `#t2aTypeUse<_>(_)_WASM-TEXT_TypeUse_Context_TypeUse`(_0,`(type_)__WASM_TypeUse_Index_TypeDecls`(TYP,TDS))=>`(type_)_WASM_TypeUse_Index`(TYP) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7aaf88ac65c56bfff5f200a0897ea6d19c74a852760a5200917f6adbd646c58f), contentStartColumn(10), contentStartLine(431), org.kframework.attributes.Location(Location(431,10,431,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeUse{},R} (
        Lbl'Hash't2aTypeUse'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'TypeUse'Unds'Context'Unds'TypeUse{}(Var'Unds'0:SortContext{},Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarTYP:SortIndex{},VarTDS:SortTypeDecls{})),
        Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(VarTYP:SortIndex{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("431"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(431,10,431,70)"), UNIQUE'Unds'ID{}("7aaf88ac65c56bfff5f200a0897ea6d19c74a852760a5200917f6adbd646c58f")]

// rule `#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`.ValStack_WASM-DATA_ValStack`(.KList) #as _0)=>_0 requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(03a244afc4c585b5a39c61d9e95b68cfde2f5fcbc16bc87096ad00765fc71de9), contentStartColumn(10), contentStartLine(368), org.kframework.attributes.Location(Location(368,10,368,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(VarN:SortInt{},\and{SortValStack{}}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),Var'Unds'0:SortValStack{})),
        Var'Unds'0:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("368"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(368,10,368,82)"), UNIQUE'Unds'ID{}("03a244afc4c585b5a39c61d9e95b68cfde2f5fcbc16bc87096ad00765fc71de9")]

// rule `#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,_0)=>`.ValStack_WASM-DATA_ValStack`(.KList) requires `notBool_`(`_>Int_`(N,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(69cb0567fa6205a883ce92e97b80389dae8c440cdd3dd2104a5511c633af010f), contentStartColumn(10), contentStartLine(367), org.kframework.attributes.Location(Location(367,10,367,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(VarN:SortInt{},Var'Unds'0:SortValStack{}),
        Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("367"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,10,367,82)"), UNIQUE'Unds'ID{}("69cb0567fa6205a883ce92e97b80389dae8c440cdd3dd2104a5511c633af010f")]

// rule `#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS))=>`_:__WASM-DATA_ValStack_Val_ValStack`(V,`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`_-Int_`(N,#token("1","Int")),VS)) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(666af410cfd0f4dc00d66ebacb065bc4c5a597ab9d12f49dc90faca895632d5a), contentStartColumn(10), contentStartLine(369), org.kframework.attributes.Location(Location(369,10,369,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(VarN:SortInt{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS:SortValStack{})),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVS:SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("369"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(369,10,369,82)"), UNIQUE'Unds'ID{}("666af410cfd0f4dc00d66ebacb065bc4c5a597ab9d12f49dc90faca895632d5a")]

// rule `#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>N requires `_<=Int_`(#token("0","Int"),N) ensures #token("true","Bool") [UNIQUE_ID(92a7fb9608d2a12bd7dbb337a9f86c6e1c946ecd08a566df2c2cff44cc567417), contentStartColumn(10), contentStartLine(312), org.kframework.attributes.Location(Location(312,10,312,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("312"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(312,10,312,70)"), UNIQUE'Unds'ID{}("92a7fb9608d2a12bd7dbb337a9f86c6e1c946ecd08a566df2c2cff44cc567417")]

// rule `#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>`_+Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)) requires `_<Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(aafac7d179e42c8a214277846fdfaf9a4bedc66e9402ea9e6cc7855651a2c337), contentStartColumn(10), contentStartLine(311), org.kframework.attributes.Location(Location(311,10,311,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("311"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,10,311,70)"), UNIQUE'Unds'ID{}("aafac7d179e42c8a214277846fdfaf9a4bedc66e9402ea9e6cc7855651a2c337")]

// rule `#updateLocalIds(_,_)_WASM-TEXT_Context_Context_Map`(C,M)=>`#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(C,M,#token("false","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e7ad48d37d648fe8c8973b63c2695504ca4770bcc8ac1da9fb8f95f0498d15b9), contentStartColumn(10), contentStartLine(397), org.kframework.attributes.Location(Location(397,10,397,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(VarC:SortContext{},VarM:SortMap{}),
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(VarC:SortContext{},VarM:SortMap{},\dv{SortBool{}}("false"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("397"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,10,397,66)"), UNIQUE'Unds'ID{}("e7ad48d37d648fe8c8973b63c2695504ca4770bcc8ac1da9fb8f95f0498d15b9")]

// rule `#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(C,_0,#token("true","Bool") #as _1)=>C requires _1 ensures _1 [UNIQUE_ID(ba0b6c9de7903cf6df04cf9eda309164c02cb184b095e6117564871fb695ca50), contentStartColumn(10), contentStartLine(399), org.kframework.attributes.Location(Location(399,10,399,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(VarC:SortContext{},Var'Unds'0:SortMap{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        VarC:SortContext{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("399"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,10,399,45)"), UNIQUE'Unds'ID{}("ba0b6c9de7903cf6df04cf9eda309164c02cb184b095e6117564871fb695ca50")]

// rule `#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(`ctx(_)_WASM-TEXT_Context_Map`(_0),M,#token("false","Bool"))=>`#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(`ctx(_)_WASM-TEXT_Context_Map`(M),M,#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3484e93634f427eb8dbe32ed3071ed0760d9387c0424ff21a464cf12572d3dac), contentStartColumn(10), contentStartLine(398), org.kframework.attributes.Location(Location(398,10,398,75)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(Var'Unds'0:SortMap{}),VarM:SortMap{},\dv{SortBool{}}("false")),
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(VarM:SortMap{}),VarM:SortMap{},\dv{SortBool{}}("true"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("398"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,10,398,75)"), UNIQUE'Unds'ID{}("3484e93634f427eb8dbe32ed3071ed0760d9387c0424ff21a464cf12572d3dac")]

// rule `#width(_)_WASM-DATA_Int_IValType`(`i32_WASM-DATA_IValType`(.KList))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af1024fbec307ed5925030ca0a156b22e9eb41306d7649a345b031308193013f), contentStartColumn(10), contentStartLine(196), org.kframework.attributes.Location(Location(196,10,196,27)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("32")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("196"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,10,196,27)"), UNIQUE'Unds'ID{}("af1024fbec307ed5925030ca0a156b22e9eb41306d7649a345b031308193013f")]

// rule `#width(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))=>#token("64","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2055c38f85ef4d9753169469c13a295c4d01c07b9af18007c0940b3f401ba8c8), contentStartColumn(10), contentStartLine(197), org.kframework.attributes.Location(Location(197,10,197,27)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("64")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("197"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(197,10,197,27)"), UNIQUE'Unds'ID{}("2055c38f85ef4d9753169469c13a295c4d01c07b9af18007c0940b3f401ba8c8")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,`_<<Int_`(X,N))=>#token("0","Int") requires `_<=Int_`(`_*Int_`(M,#token("8","Int")),N) ensures #token("true","Bool") [UNIQUE_ID(a7ffed54ace0a24fc71729b8b2172e09c1fc8789abc37961e87f2058de47679f), contentStartColumn(10), contentStartLine(175), org.kframework.attributes.Location(Location(175,10,176,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("8")),VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("175"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,10,176,34)"), simplification{}(), UNIQUE'Unds'ID{}("a7ffed54ace0a24fc71729b8b2172e09c1fc8789abc37961e87f2058de47679f")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(MAX_WIDTH,`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH))=>`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,`minInt(_,_)_INT-COMMON_Int_Int_Int`(MAX_WIDTH,WIDTH)) requires `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM) ensures #token("true","Bool") [UNIQUE_ID(802cccf113e5e1ef7a7fdf812acff4c9711a642ec34cc1e7ad53123db585f0a6), contentStartColumn(10), contentStartLine(332), org.kframework.attributes.Location(Location(332,10,333,30)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarMAX'Unds'WIDTH:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{})),
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarMAX'Unds'WIDTH:SortInt{},VarWIDTH:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("332"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,10,333,30)"), simplification{}(), UNIQUE'Unds'ID{}("802cccf113e5e1ef7a7fdf812acff4c9711a642ec34cc1e7ad53123db585f0a6")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X) #as _0)=>_0 requires `_<=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(a8b72a250b8c4a3acc496404a95f6f41954363781803a44269e492be6f36b041), contentStartColumn(10), contentStartLine(63), org.kframework.attributes.Location(Location(63,10,64,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\and{SortInt{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{}),Var'Unds'0:SortInt{})),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("63"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,10,64,25)"), simplification{}(), UNIQUE'Unds'ID{}("a8b72a250b8c4a3acc496404a95f6f41954363781803a44269e492be6f36b041")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,X)=>X requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<=Int_`(#token("0","Int"),X)),`_<Int_`(X,`_<<Int_`(#token("1","Int"),`_*Int_`(N,#token("8","Int"))))) ensures #token("true","Bool") [UNIQUE_ID(050d629148cf5b64b243f800cae367581419f1d911b343244aeaa337a2b6b2d6), contentStartColumn(10), contentStartLine(45), org.kframework.attributes.Location(Location(45,10,48,44)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'UndsStar'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("8"))))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarX:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("45"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,10,48,44)"), simplification{}(), UNIQUE'Unds'ID{}("050d629148cf5b64b243f800cae367581419f1d911b343244aeaa337a2b6b2d6")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,X) requires `notBool_`(`_<=Int_`(M,N)) ensures #token("true","Bool") [UNIQUE_ID(540d990c0b393194f9083f27df76cf13cfcc75b2d05249207009903534eac00c), contentStartColumn(10), contentStartLine(81), org.kframework.attributes.Location(Location(81,10,82,35)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("81"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,10,82,35)"), simplification{}(), UNIQUE'Unds'ID{}("540d990c0b393194f9083f27df76cf13cfcc75b2d05249207009903534eac00c")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(X,`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,Y)))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(X,Y)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(4abfd1016caf8b22d15d22299fc5359f01a1abe54b7a303452ddfe5d4ec7b022), contentStartColumn(10), contentStartLine(148), org.kframework.attributes.Location(Location(148,10,149,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarY:SortInt{}))),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("148"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,10,149,25)"), simplification{}(), UNIQUE'Unds'ID{}("4abfd1016caf8b22d15d22299fc5359f01a1abe54b7a303452ddfe5d4ec7b022")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(Y,`_<<Int_`(X,M)))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,Y) requires `_andBool_`(`_<=Int_`(#token("0","Int"),M),`_<=Int_`(`_*Int_`(N,#token("8","Int")),M)) ensures #token("true","Bool") [UNIQUE_ID(e105084f6c25541506a77619f7c92993ff36773273c84adf24b180d9e1c20493), contentStartColumn(10), contentStartLine(118), org.kframework.attributes.Location(Location(118,10,120,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarM:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("8")),VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}))),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarY:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("118"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,10,120,34)"), simplification{}(), UNIQUE'Unds'ID{}("e105084f6c25541506a77619f7c92993ff36773273c84adf24b180d9e1c20493")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X),Y))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(X,Y)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(206db6be82a27f9c56effaa0fdab1f4458c0f7727b127673fb3719dded12df7a), contentStartColumn(10), contentStartLine(144), org.kframework.attributes.Location(Location(144,10,145,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{}),VarY:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,145,25)"), simplification{}(), UNIQUE'Unds'ID{}("206db6be82a27f9c56effaa0fdab1f4458c0f7727b127673fb3719dded12df7a")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(`_<<Int_`(X,M),Y))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,Y) requires `_andBool_`(`_<=Int_`(#token("0","Int"),M),`_<=Int_`(`_*Int_`(N,#token("8","Int")),M)) ensures #token("true","Bool") [UNIQUE_ID(7ba731ccabf3c6793ccffeb180bcb27296f5258876974c154a3dbe75739d1f33), contentStartColumn(10), contentStartLine(113), org.kframework.attributes.Location(Location(113,10,115,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarM:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("8")),VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarY:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("113"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,10,115,34)"), simplification{}(), UNIQUE'Unds'ID{}("7ba731ccabf3c6793ccffeb180bcb27296f5258876974c154a3dbe75739d1f33")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,N)=>`_&Int_`(N,`_-Int_`(`_<<Int_`(#token("1","Int"),`_*Int_`(WIDTH,#token("8","Int"))),#token("1","Int"))) requires `_<Int_`(#token("0","Int"),WIDTH) ensures #token("true","Bool") [UNIQUE_ID(f38d1e8dfeac21f37bb27a71fdc25c629dec3457f6d088e5f1b0a9336afadfad), concrete, contentStartColumn(10), contentStartLine(279), org.kframework.attributes.Location(Location(279,10,279,99)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},VarN:SortInt{}),
        Lbl'UndsAnd-'Int'Unds'{}(VarN:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'UndsStar'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("8"))),\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), concrete{}(), contentStartLine{}("279"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,279,99)"), UNIQUE'Unds'ID{}("f38d1e8dfeac21f37bb27a71fdc25c629dec3457f6d088e5f1b0a9336afadfad")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,N)=>#token("0","Int") requires `notBool_`(`_<Int_`(#token("0","Int"),WIDTH)) ensures #token("true","Bool") [UNIQUE_ID(425e99e035fa164ccde34585cbff7ec03a703071f4e40c30670a577acc74d755), contentStartColumn(10), contentStartLine(280), org.kframework.attributes.Location(Location(280,10,280,99)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},VarN:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("280"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,10,280,99)"), UNIQUE'Unds'ID{}("425e99e035fa164ccde34585cbff7ec03a703071f4e40c30670a577acc74d755")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))=>`.ValStack_WASM-DATA_ValStack`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8e55bf7a2bd5335f255c94385c5db40c5c47a18bbf95e1fb2f6618553302c28), contentStartColumn(10), contentStartLine(362), org.kframework.attributes.Location(Location(362,10,362,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}()),
        Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("362"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,10,362,51)"), UNIQUE'Unds'ID{}("d8e55bf7a2bd5335f255c94385c5db40c5c47a18bbf95e1fb2f6618553302c28")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{FValType,ValType}(FTYPE),VTYPES))=>`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,#token("0.0","Float"))),`#zero(_)_WASM-DATA_ValStack_ValTypes`(VTYPES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79c8390f89902777287c694147452941ff6e8e184f16398d1d1e9fced2554559), contentStartColumn(10), contentStartLine(364), org.kframework.attributes.Location(Location(364,10,364,71)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{}),VarVTYPES:SortValTypes{})),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},\dv{SortFloat{}}("0.0"))),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(VarVTYPES:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("364"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,10,364,71)"), UNIQUE'Unds'ID{}("79c8390f89902777287c694147452941ff6e8e184f16398d1d1e9fced2554559")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(ITYPE),VTYPES))=>`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,#token("0","Int"))),`#zero(_)_WASM-DATA_ValStack_ValTypes`(VTYPES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0dcc729faa080a40c30ab3d780798ed24111ec09f53b3595366b947867172c86), contentStartColumn(10), contentStartLine(363), org.kframework.attributes.Location(Location(363,10,363,71)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarVTYPES:SortValTypes{})),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},\dv{SortInt{}}("0"))),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(VarVTYPES:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("363"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,10,363,71)"), UNIQUE'Unds'ID{}("0dcc729faa080a40c30ab3d780798ed24111ec09f53b3595366b947867172c86")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,VT)),VTYPES))=>`#zero(_)_WASM-DATA_ValStack_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(VT),VTYPES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad772f7fe3141e81d8ddc36cfcce509fb9c2d55219b488f0b75e47b13bec8240), contentStartColumn(10), contentStartLine(365), org.kframework.attributes.Location(Location(365,10,365,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVT:SortAValType{})),VarVTYPES:SortValTypes{})),
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarVT:SortAValType{}),VarVTYPES:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("365"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,10,365,58)"), UNIQUE'Unds'ID{}("ad772f7fe3141e81d8ddc36cfcce509fb9c2d55219b488f0b75e47b13bec8240")]

// rule `(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(`_WASM-DATA_OptionalId`(.KList),`(data_)_WASM-TEXT_MemorySpec_DataString`(DS) #as _1)=>`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(`.MemoryIdentifier_WASM-TEXT_Identifier`(.KList)),_1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1833d9a25aa36b2289f4444e470d3df5b37d359834ae17e500b54573356628ca), contentStartColumn(10), contentStartLine(247), macro, org.kframework.attributes.Location(Location(247,10,247,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule `(table__)_WASM_TableDefn_OptionalId_TableSpec`(`_WASM-DATA_OptionalId`(.KList),`_(elem_)_WASM-TEXT_TableSpec_TableElemType_ElemSegment`(`funcref_WASM_TableElemType`(.KList),ES) #as _1)=>`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(`.TableIdentifier_WASM-TEXT_Identifier`(.KList)),_1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(958e9930bc538fcfaab5bd85ef7566e3797d0f67d528759bc30a4801f80a6154), contentStartColumn(10), contentStartLine(263), macro, org.kframework.attributes.Location(Location(263,10,263,87)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule `.Bytes_BYTES-HOOKED_Bytes`(.KList)=>`String2Bytes(_)_BYTES-HOOKED_Bytes_String`(#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e07808715f2071d49d0c4f55e52909bade19dc4ad649f402fcff9a1b73c2253), contentStartColumn(8), contentStartLine(772), org.kframework.attributes.Location(Location(772,8,772,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}(),
        LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("772"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(772,8,772,34)"), UNIQUE'Unds'ID{}("3e07808715f2071d49d0c4f55e52909bade19dc4ad649f402fcff9a1b73c2253")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Alloc,KItem}(A) #as _14``~>DotVar2),_3,`<curFrame>`(_0,`<curModIdx>`(`.Int_WASM-DATA_OptionalInt`(.KList)),_1,_2) #as _15,_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(`_WASM-DATA_OptionalId`(.KList),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))~>_14~>DotVar2),_3,_15,_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de053eb29e9513eed678e4db446a25fc3c35ddd8ae59fa9e9d853bed36fe4732), contentStartColumn(10), contentStartLine(1515), cool-like, org.kframework.attributes.Location(Location(1515,10,1516,39)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  alias rule225LHS{}(SortAlloc{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortLabelDepthCell{},SortNextFreshIdCell{},SortKItem{},SortCurFrameCell{},SortLabelIdsCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule225LHS{}(VarA:SortAlloc{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'14:SortKItem{},Var'Unds'15:SortCurFrameCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAlloc{}, SortKItem{}}(VarA:SortAlloc{}),Var'Unds'14:SortKItem{}),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'15:SortCurFrameCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE50{}()),
      rule225LHS{}(VarA:SortAlloc{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'14:SortKItem{},Var'Unds'15:SortCurFrameCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),kseq{}(Var'Unds'14:SortKItem{},VarDotVar2:SortK{}))),Var'Unds'3:SortValstackCell{},Var'Unds'15:SortCurFrameCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1515"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1515,10,1516,39)"), owise{}(), UNIQUE'Unds'ID{}("de053eb29e9513eed678e4db446a25fc3c35ddd8ae59fa9e9d853bed36fe4732")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Val,KItem}(V) #as _11``~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(V,VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires `_=/=K_`(_11,inj{Val,KItem}(`undefined_WASM-DATA_Val`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(8430d297ba41f76d01f5e2cf200d39a6b52e6e9062986286756f4ddd94ed1355), contentStartColumn(10), contentStartLine(190), cool-like, org.kframework.attributes.Location(Location(190,10,192,32)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule226LHS{}(SortGeneratedCounterCell{},SortK{},SortVal{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortKItem{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule226LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVal{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(Var'Unds'11:SortKItem{},dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(Lblundefined'Unds'WASM-DATA'Unds'Val{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'11:SortKItem{}),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule226LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVal{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("190"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,10,192,32)"), UNIQUE'Unds'ID{}("8430d297ba41f76d01f5e2cf200d39a6b52e6e9062986286756f4ddd94ed1355")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(IDX)) #as _12``~>inj{Instr,KItem}(I)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c493235fecfdcbe34e962ff8df91e60fb7b255b52d38cbe835a83517498f17b4), contentStartColumn(10), contentStartLine(363), org.kframework.attributes.Location(Location(363,10,363,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule227LHS{}(SortGeneratedCounterCell{},SortK{},SortInstr{},SortIndex{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule227LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},VarIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),Var'Unds'12:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule227LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},VarIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("363"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,10,363,50)"), UNIQUE'Unds'ID{}("c493235fecfdcbe34e962ff8df91e60fb7b255b52d38cbe835a83517498f17b4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(IDX)) #as _12``~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(50edd20e7f22b18dd2e980122fb740c0a4837238e8fce66d4a318285c930c349), contentStartColumn(10), contentStartLine(362), org.kframework.attributes.Location(Location(362,10,362,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule228LHS{}(SortGeneratedCounterCell{},SortK{},SortIndex{},SortStmts{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule228LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),Var'Unds'12:SortKItem{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule228LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("362"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,10,362,50)"), UNIQUE'Unds'ID{}("50edd20e7f22b18dd2e980122fb740c0a4837238e8fce66d4a318285c930c349")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList)) #as _12``~>inj{Instr,KItem}(I)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(65ee3f382edc97f2872a5d50a87cfdc4427cd1561279a6b35557494e0f36aa72), contentStartColumn(10), contentStartLine(755), org.kframework.attributes.Location(Location(755,10,755,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule229LHS{}(SortGeneratedCounterCell{},SortK{},SortInstr{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule229LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule229LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("755"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(755,10,755,51)"), UNIQUE'Unds'ID{}("65ee3f382edc97f2872a5d50a87cfdc4427cd1561279a6b35557494e0f36aa72")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList)) #as _12``~>inj{Label,KItem}(L)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6e7a1926ba689bf088f8a2a2f3a13c455130c90b5470171543f7aec85afb2715), contentStartColumn(10), contentStartLine(757), org.kframework.attributes.Location(Location(757,10,757,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule230LHS{}(SortGeneratedCounterCell{},SortK{},SortLabel{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule230LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortLabel{}, SortKItem{}}(VarL:SortLabel{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule230LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("757"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(757,10,757,51)"), UNIQUE'Unds'ID{}("6e7a1926ba689bf088f8a2a2f3a13c455130c90b5470171543f7aec85afb2715")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList)) #as _12``~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4e6487b329d42656a7377be83820830502e7ef51631166d43799b6fd79fdaed), contentStartColumn(10), contentStartLine(756), org.kframework.attributes.Location(Location(756,10,756,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule231LHS{}(SortGeneratedCounterCell{},SortK{},SortStmts{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule231LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule231LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("756"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(756,10,756,51)"), UNIQUE'Unds'ID{}("a4e6487b329d42656a7377be83820830502e7ef51631166d43799b6fd79fdaed")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Defn,KItem}(D)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(282ff5f4854522feeab793667e351fd21f72e2f4eb62258dff96e25d93e51b50), contentStartColumn(10), contentStartLine(179), org.kframework.attributes.Location(Location(179,10,179,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule232LHS{}(SortDefn{},SortGeneratedCounterCell{},SortK{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule232LHS{}(VarD:SortDefn{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortDefn{}, SortKItem{}}(VarD:SortDefn{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule232LHS{}(VarD:SortDefn{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("179"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,10,179,47)"), UNIQUE'Unds'ID{}("282ff5f4854522feeab793667e351fd21f72e2f4eb62258dff96e25d93e51b50")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Defns,KItem}(DS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a37d8aba43fdf053b31ce1a32fd9f26539aa8b2a7f3f7ec1fbfba2f269a174b5), contentStartColumn(10), contentStartLine(180), org.kframework.attributes.Location(Location(180,10,180,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule233LHS{}(SortDefns{},SortGeneratedCounterCell{},SortK{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule233LHS{}(VarDS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarDS:SortDefns{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule233LHS{}(VarDS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("180"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,47)"), UNIQUE'Unds'ID{}("a37d8aba43fdf053b31ce1a32fd9f26539aa8b2a7f3f7ec1fbfba2f269a174b5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Frame,KItem}(F)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(69ef92b5fcf73b0941e6713a53d9f98fa6a3c01ae45ae1201abad71bb8246de6), contentStartColumn(10), contentStartLine(176), org.kframework.attributes.Location(Location(176,10,176,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule234LHS{}(SortGeneratedCounterCell{},SortK{},SortFrame{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule234LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarF:SortFrame{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortFrame{}, SortKItem{}}(VarF:SortFrame{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule234LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarF:SortFrame{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("176"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,10,176,47)"), UNIQUE'Unds'ID{}("69ef92b5fcf73b0941e6713a53d9f98fa6a3c01ae45ae1201abad71bb8246de6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Instr,KItem}(I)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d591acf517af8625a825bb9d1b0b63e7b444fd53cbd0672bf1513a19b087541e), contentStartColumn(10), contentStartLine(177), org.kframework.attributes.Location(Location(177,10,177,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule235LHS{}(SortGeneratedCounterCell{},SortK{},SortInstr{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule235LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule235LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("177"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,10,177,47)"), UNIQUE'Unds'ID{}("d591acf517af8625a825bb9d1b0b63e7b444fd53cbd0672bf1513a19b087541e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Instrs,KItem}(IS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bf3f03d8f4c1bb653614653710977157a7825f79f594995c606a9b3be761ad81), contentStartColumn(10), contentStartLine(178), org.kframework.attributes.Location(Location(178,10,178,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule236LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule236LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule236LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("178"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,10,178,47)"), UNIQUE'Unds'ID{}("bf3f03d8f4c1bb653614653710977157a7825f79f594995c606a9b3be761ad81")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Label,KItem}(L)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22c2705b2f21c76c9c4b204c07a5189a9ddc5c0865b726ee1fdb981b57814eff), contentStartColumn(10), contentStartLine(175), org.kframework.attributes.Location(Location(175,10,175,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule237LHS{}(SortGeneratedCounterCell{},SortK{},SortLabel{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule237LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortLabel{}, SortKItem{}}(VarL:SortLabel{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule237LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("175"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,10,175,47)"), UNIQUE'Unds'ID{}("22c2705b2f21c76c9c4b204c07a5189a9ddc5c0865b726ee1fdb981b57814eff")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _12``~>inj{Stmts,KItem}(`___WASM_Stmts_Stmt_Stmts`(S,SS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_12~>inj{Stmt,KItem}(S)~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b614a91e78618c9dceb0f0c6280a7ba4db9c42a5180f7a037ad80e50fe28acad), contentStartColumn(10), contentStartLine(182), org.kframework.attributes.Location(Location(182,10,182,59)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule238LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortStmts{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule238LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'12:SortKItem{}),kseq{}(inj{SortStmts{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule238LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'12:SortKItem{},kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{})))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("182"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,10,182,59)"), UNIQUE'Unds'ID{}("b614a91e78618c9dceb0f0c6280a7ba4db9c42a5180f7a037ad80e50fe28acad")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`loop__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS) #as _14)~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),`___WASM_Instrs_Instr_Instrs`(_14,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))),VALSTACK))~>DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(_0,_1,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3af38eb51063b7394354af618ec4f9a4daa18c1093943cf7e896fdfd27a7c02f), contentStartColumn(10), contentStartLine(403), org.kframework.attributes.Location(Location(403,10,405,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule239LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortTypeDecls{},SortValStack{},SortLocalsCell{},SortCurModIdxCell{},SortInstr{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule239LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'14:SortInstr{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(\and{SortInstr{}}(Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{}),Var'Unds'14:SortInstr{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule239LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'14:SortInstr{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Var'Unds'14:SortInstr{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("403"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,10,405,58)"), UNIQUE'Unds'ID{}("3af38eb51063b7394354af618ec4f9a4daa18c1093943cf7e896fdfd27a7c02f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(`(type_)_WASM_TypeUse_Index`(TFIDF)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(57ff220ea90c465ca09ad3443cdc16cbe0104ff6898cdcbf1e0d6b06b7d65ad9), contentStartColumn(10), contentStartLine(662), org.kframework.attributes.Location(Location(662,10,662,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule240LHS{}(SortGeneratedCounterCell{},SortK{},SortIndex{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule240LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTFIDF:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(VarTFIDF:SortIndex{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule240LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTFIDF:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("662"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(662,10,662,65)"), UNIQUE'Unds'ID{}("57ff220ea90c465ca09ad3443cdc16cbe0104ff6898cdcbf1e0d6b06b7d65ad9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(`(type_)__WASM_TypeUse_Index_TypeDecls`(TFIDF,TDECLS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ad1514086f2771e5166da508cc745085c8fc062598626f640e69e9296a65e86), contentStartColumn(10), contentStartLine(663), org.kframework.attributes.Location(Location(663,10,663,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule241LHS{}(SortGeneratedCounterCell{},SortK{},SortTypeDecls{},SortIndex{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule241LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTDECLS:SortTypeDecls{},VarTFIDF:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarTFIDF:SortIndex{},VarTDECLS:SortTypeDecls{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule241LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTDECLS:SortTypeDecls{},VarTFIDF:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("663"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(663,10,663,65)"), UNIQUE'Unds'ID{}("0ad1514086f2771e5166da508cc745085c8fc062598626f640e69e9296a65e86")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(inj{TypeDecls,TypeUse}(TDECLS)))~>DotVar2),_16,`<curFrame>`(_0,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_1,_2) #as _29,_17,_18,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,_4,`<types>`(TYPES),_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15)),DotVar4)) #as _32,_19,_20,_21,_22),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_16,_29,_17,_18,_32,_19,_20,_21,_22),DotVar0) requires `_in__LIST_Bool_KItem_List`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))),`values(_)_MAP_List_Map`(TYPES)) ensures #token("true","Bool") [UNIQUE_ID(0210bf96211c7da9f6efac10ba3fcc8255a75214d66687f6c185d81db280e4cb), contentStartColumn(10), contentStartLine(653), org.kframework.attributes.Location(Location(653,10,660,68)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule242LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortTypeDecls{},SortMap{},SortLocalsCell{},SortLabelDepthCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortLabelIdsCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortExportsCell{},SortModuleInstancesCell{},SortTypeIdsCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{}) : SortGeneratedTopCell{}
  where rule242LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortValstackCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(VarTYPES:SortMap{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{}))),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'29:SortCurFrameCell{}),Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Var'Unds'4:SortTypeIdsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule242LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortValstackCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'16:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("653"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(653,10,660,68)"), UNIQUE'Unds'ID{}("0210bf96211c7da9f6efac10ba3fcc8255a75214d66687f6c185d81db280e4cb")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(inj{TypeDecls,TypeUse}(TDECLS)))~>DotVar2),_16,`<curFrame>`(_0,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_1,_2) #as _29,_17,_18,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,_4,`<types>`(TYPES),_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15)),DotVar4)) #as _32,_19,_20,_21,_22),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TypeDefn,KItem}(`(type_(func_))_WASM_TypeDefn_OptionalId_TypeDecls`(`_WASM-DATA_OptionalId`(.KList),TDECLS))~>DotVar2),_16,_29,_17,_18,_32,_19,_20,_21,_22),DotVar0) requires `notBool_`(`_in__LIST_Bool_KItem_List`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))),`values(_)_MAP_List_Map`(TYPES))) ensures #token("true","Bool") [UNIQUE_ID(68441c3be1d7110e83742077d370fdd1758ff8e23a65ac6db3964c530a1b7301), contentStartColumn(10), contentStartLine(644), org.kframework.attributes.Location(Location(644,10,651,76)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule243LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortTypeDecls{},SortMap{},SortLocalsCell{},SortLabelDepthCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortLabelIdsCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortExportsCell{},SortModuleInstancesCell{},SortTypeIdsCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{}) : SortGeneratedTopCell{}
  where rule243LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortValstackCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(VarTYPES:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{}))),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'29:SortCurFrameCell{}),Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Var'Unds'4:SortTypeIdsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule243LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortValstackCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{})),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("644"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(644,10,651,76)"), UNIQUE'Unds'ID{}("68441c3be1d7110e83742077d370fdd1758ff8e23a65ac6db3964c530a1b7301")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(ADDR,OFFSET,FADDRS,IDS,`___WASM-DATA_ElemSegment_Index_ElemSegment`(E,ES)))~>DotVar2),_9,_10,_11,_12,_13,_14,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(DATA))),DotVar4)),_4,_5,_6,_7,_8),_15,_16),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(ADDR,`_+Int_`(OFFSET,#token("1","Int")),FADDRS,IDS,ES))~>DotVar2),_9,_10,_11,_12,_13,_14,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`Map:update`(DATA,inj{Int,KItem}(OFFSET),`Map:lookup`(FADDRS,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,E))))))),DotVar4)),_4,_5,_6,_7,_8),_15,_16),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a0ce4d1d2b0b434f669163858c9f84b9e09b820f1e4ad86f096cbfce6321a7e), contentStartColumn(10), contentStartLine(1220), org.kframework.attributes.Location(Location(1220,10,1225,20)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule244LHS{}(SortInt{},SortMap{},SortGeneratedCounterCell{},SortK{},SortTabInstCellMap{},SortIndex{},SortElemSegment{},SortMap{},SortMap{},SortInt{},SortTmaxCell{},SortTsizeCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortFuncsCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortValstackCell{}) : SortGeneratedTopCell{}
  where rule244LHS{}(VarADDR:SortInt{},VarDATA:SortMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarE:SortIndex{},VarES:SortElemSegment{},VarFADDRS:SortMap{},VarIDS:SortMap{},VarOFFSET:SortInt{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortValstackCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(VarADDR:SortInt{},VarOFFSET:SortInt{},VarFADDRS:SortMap{},VarIDS:SortMap{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{}))),VarDotVar2:SortK{})),Var'Unds'9:SortValstackCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(VarDATA:SortMap{}))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule244LHS{}(VarADDR:SortInt{},VarDATA:SortMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarE:SortIndex{},VarES:SortElemSegment{},VarFADDRS:SortMap{},VarIDS:SortMap{},VarOFFSET:SortInt{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortValstackCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(VarADDR:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarOFFSET:SortInt{},\dv{SortInt{}}("1")),VarFADDRS:SortMap{},VarIDS:SortMap{},VarES:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'9:SortValstackCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(LblMap'Coln'update{}(VarDATA:SortMap{},inj{SortInt{}, SortKItem{}}(VarOFFSET:SortInt{}),LblMap'Coln'lookup{}(VarFADDRS:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarE:SortIndex{}))))))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1220"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1220,10,1225,20)"), UNIQUE'Unds'ID{}("4a0ce4d1d2b0b434f669163858c9f84b9e09b820f1e4ad86f096cbfce6321a7e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(_0,_1,_2,_3,`.List{"___WASM-DATA_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList)))~>DotVar2),_4,_5,_6,_7,_8,_9,_10,_11,_12),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_4,_5,_6,_7,_8,_9,_10,_11,_12),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ecbbca3242a48f59c7f192e6152efbf90d2b6ae576a26f0fc06735cdaf2307e), contentStartColumn(10), contentStartLine(1219), org.kframework.attributes.Location(Location(1219,10,1219,85)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule245LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortMap{},SortMap{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{}) : SortGeneratedTopCell{}
  where rule245LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{},Var'Unds'2:SortMap{},Var'Unds'3:SortMap{},Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'2:SortMap{},Var'Unds'3:SortMap{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}())),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule245LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{},Var'Unds'2:SortMap{},Var'Unds'3:SortMap{},Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1219"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1219,10,1219,85)"), UNIQUE'Unds'ID{}("6ecbbca3242a48f59c7f192e6152efbf90d2b6ae576a26f0fc06735cdaf2307e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_local___WASM_Instr_Int_Val`(N,VALUE))~>inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(`_+Int_`(N,#token("1","Int")),VALSTACK))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8fabb95fc0272afd1b155c0fb1736fc98ff8d30d26017b7663ec2a0eaa3ca03), contentStartColumn(10), contentStartLine(426), org.kframework.attributes.Location(Location(426,10,430,15)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule246LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortValStack{},SortVal{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule246LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarN:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(VarN:SortInt{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule246LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarN:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarN:SortInt{},VarVALUE:SortVal{})),kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("426"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(426,10,430,15)"), UNIQUE'Unds'ID{}("d8fabb95fc0272afd1b155c0fb1736fc98ff8d30d26017b7663ec2a0eaa3ca03")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(_0,`.ValStack_WASM-DATA_ValStack`(.KList)))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a3d0edbccd059852c2f941cd42cf0d773750b50d0ec26c553975ab05d7e6e495), contentStartColumn(10), contentStartLine(425), org.kframework.attributes.Location(Location(425,10,425,52)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule247LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule247LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Var'Unds'0:SortInt{},Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule247LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("425"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(425,10,425,52)"), UNIQUE'Unds'ID{}("a3d0edbccd059852c2f941cd42cf0d773750b50d0ec26c553975ab05d7e6e495")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(PI))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(PI)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(70618e018be677aab13ddfeeb08e810c3d8f257bfd8a5cb51689aa3131601161), contentStartColumn(10), contentStartLine(128), org.kframework.attributes.Location(Location(128,10,128,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule248LHS{}(SortGeneratedCounterCell{},SortK{},SortPlainInstr{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule248LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarPI:SortPlainInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(VarPI:SortPlainInstr{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule248LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarPI:SortPlainInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPI:SortPlainInstr{}),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("128"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,10,128,74)"), UNIQUE'Unds'ID{}("70618e018be677aab13ddfeeb08e810c3d8f257bfd8a5cb51689aa3131601161")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(__)_WASM-TEXT_FoldedInstr_PlainInstr_Instrs`(PI,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{PlainInstr,KItem}(PI)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8cfe55b50a46cc10fd8a72565edfc0ca86bf40b59974992ebb8220fc5025ff9e), contentStartColumn(10), contentStartLine(127), org.kframework.attributes.Location(Location(127,10,127,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule249LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortPlainInstr{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule249LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarPI:SortPlainInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(VarPI:SortPlainInstr{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule249LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarPI:SortPlainInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPI:SortPlainInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("127"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,10,127,74)"), UNIQUE'Unds'ID{}("8cfe55b50a46cc10fd8a72565edfc0ca86bf40b59974992ebb8220fc5025ff9e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(block___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(`_WASM-DATA_OptionalId`(.KList),TDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(502fb38d63ee6e52c518123fe2a0af325c5b9f46b306f1ccddb5b1fa621a1789), contentStartColumn(10), contentStartLine(136), org.kframework.attributes.Location(Location(136,10,136,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule250LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule250LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINSTRS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule250LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINSTRS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("136"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,10,136,107)"), UNIQUE'Unds'ID{}("502fb38d63ee6e52c518123fe2a0af325c5b9f46b306f1ccddb5b1fa621a1789")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(block___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(inj{Identifier,OptionalId}(ID),TDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`block___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,INSTRS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(312ca5aeda33842ead08f29f0f18b58d2c502a01cc895af6bb1a10bfe1077232), contentStartColumn(10), contentStartLine(137), org.kframework.attributes.Location(Location(137,10,137,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule251LHS{}(SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule251LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarINSTRS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule251LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarINSTRS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("137"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,10,137,107)"), UNIQUE'Unds'ID{}("312ca5aeda33842ead08f29f0f18b58d2c502a01cc895af6bb1a10bfe1077232")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data__)_WASM_DataDefn_Offset_DataString`(OFFSET,STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(inj{Int,Index}(#token("0","Int")),OFFSET,STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e60b78c563fb4e72b4f457b16e790ba7a868604d5988964a90e6fe6d70ed70cc), contentStartColumn(10), contentStartLine(1240), org.kframework.attributes.Location(Location(1240,10,1240,102)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule252LHS{}(SortGeneratedCounterCell{},SortK{},SortOffset{},SortDataString{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule252LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule252LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")),VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1240"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1240,10,1240,102)"), UNIQUE'Unds'ID{}("e60b78c563fb4e72b4f457b16e790ba7a868604d5988964a90e6fe6d70ed70cc")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(MEMID,`(offset_)_WASM_Offset_Instrs`(IS),STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Index_Bytes`(MEMID,`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(STRINGS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(43271f1c61ef1b49a5e4628eddb0ad7b8be784fd8426cba928f5e7e34f877566), contentStartColumn(10), contentStartLine(1242), org.kframework.attributes.Location(Location(1242,10,1242,102)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule253LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortIndex{},SortDataString{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule253LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarMEMID:SortIndex{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarMEMID:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule253LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarMEMID:SortIndex{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(VarMEMID:SortIndex{},Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarSTRINGS:SortDataString{}))),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1242"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,10,1242,102)"), UNIQUE'Unds'ID{}("43271f1c61ef1b49a5e4628eddb0ad7b8be784fd8426cba928f5e7e34f877566")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(MEMID,inj{Instrs,Offset}(IS),STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Index_Bytes`(MEMID,`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(STRINGS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d6d87a1e60f07735aa1b5f6700832bdb3202b10d94074800d6634e323460217d), contentStartColumn(10), contentStartLine(1241), org.kframework.attributes.Location(Location(1241,10,1241,102)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule254LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortIndex{},SortDataString{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule254LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarMEMID:SortIndex{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarMEMID:SortIndex{},inj{SortInstrs{}, SortOffset{}}(VarIS:SortInstrs{}),VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule254LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarMEMID:SortIndex{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(VarMEMID:SortIndex{},Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarSTRINGS:SortDataString{}))),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1241"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1241,10,1241,102)"), UNIQUE'Unds'ID{}("d6d87a1e60f07735aa1b5f6700832bdb3202b10d94074800d6634e323460217d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem__)_WASM_ElemDefn_Offset_ElemSegment`(OFFSET,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(inj{Int,Index}(#token("0","Int")),OFFSET,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a127f6b5ac7bb4e83568caa621ae97fd99aad2dad521bdf287f46c9f877fec50), contentStartColumn(10), contentStartLine(1203), org.kframework.attributes.Location(Location(1203,10,1203,99)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule255LHS{}(SortGeneratedCounterCell{},SortK{},SortElemSegment{},SortOffset{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule255LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarOFFSET:SortOffset{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(VarOFFSET:SortOffset{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule255LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarOFFSET:SortOffset{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")),VarOFFSET:SortOffset{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1203"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1203,10,1203,99)"), UNIQUE'Unds'ID{}("a127f6b5ac7bb4e83568caa621ae97fd99aad2dad521bdf287f46c9f877fec50")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(TABIDX,`(offset_)_WASM_Offset_Instrs`(IS),ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Index_ElemSegment`(TABIDX,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7aebf531c34e834f964f17a23f75edffe4b405a210bc52295d6f8d2df6db4ee1), contentStartColumn(10), contentStartLine(1205), org.kframework.attributes.Location(Location(1205,10,1205,99)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule256LHS{}(SortGeneratedCounterCell{},SortK{},SortElemSegment{},SortInstrs{},SortIndex{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule256LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarIS:SortInstrs{},VarTABIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarTABIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule256LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarIS:SortInstrs{},VarTABIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(VarTABIDX:SortIndex{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1205"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1205,10,1205,99)"), UNIQUE'Unds'ID{}("7aebf531c34e834f964f17a23f75edffe4b405a210bc52295d6f8d2df6db4ee1")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(TABIDX,inj{Instrs,Offset}(IS),ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Index_ElemSegment`(TABIDX,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d607b64bb77fac52476d03e228c90ca04a1ffb8f62f731b44c32010df3b7f8fa), contentStartColumn(10), contentStartLine(1204), org.kframework.attributes.Location(Location(1204,10,1204,99)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule257LHS{}(SortGeneratedCounterCell{},SortK{},SortElemSegment{},SortInstrs{},SortIndex{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule257LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarIS:SortInstrs{},VarTABIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarTABIDX:SortIndex{},inj{SortInstrs{}, SortOffset{}}(VarIS:SortInstrs{}),VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule257LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarIS:SortInstrs{},VarTABIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(VarTABIDX:SortIndex{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1204"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1204,10,1204,99)"), UNIQUE'Unds'ID{}("d607b64bb77fac52476d03e228c90ca04a1ffb8f62f731b44c32010df3b7f8fa")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(_0,TFIDX)))~>DotVar2),_17,`<curFrame>`(_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _30,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),`<exports>`(EXPORTS),_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16)),DotVar4)),_20,_21,_22,_23),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_17,_30,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),`<exports>`(`Map:update`(EXPORTS,inj{WasmString,KItem}(ENAME),inj{Index,KItem}(TFIDX))),_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16)),DotVar4)),_20,_21,_22,_23),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51cd5fa57b72b1b5b6526a4ab626e12e7503ed235b9acd767f634924bdfbb56b), contentStartColumn(10), contentStartLine(1298), org.kframework.attributes.Location(Location(1298,10,1304,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule258LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortWasmString{},SortMap{},SortIndex{},SortAllocatedKind{},SortLocalsCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortLabelDepthCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortLabelIdsCell{},SortCurFrameCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{}) : SortGeneratedTopCell{}
  where rule258LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarENAME:SortWasmString{},VarEXPORTS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortAllocatedKind{},Var'Unds'1:SortLocalsCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Var'Unds'0:SortAllocatedKind{},VarTFIDX:SortIndex{}))),VarDotVar2:SortK{})),Var'Unds'17:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'30:SortCurFrameCell{}),Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'exports'-GT-'{}(VarEXPORTS:SortMap{}),Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule258LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarENAME:SortWasmString{},VarEXPORTS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortAllocatedKind{},Var'Unds'1:SortLocalsCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'17:SortValstackCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'exports'-GT-'{}(LblMap'Coln'update{}(VarEXPORTS:SortMap{},inj{SortWasmString{}, SortKItem{}}(VarENAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{}))),Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1298"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1298,10,1304,23)"), UNIQUE'Unds'ID{}("51cd5fa57b72b1b5b6526a4ab626e12e7503ed235b9acd767f634924bdfbb56b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(ID) #as _14,`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`func_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(_14,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6df93fbac296a0ddf11aa3aa5b7cbd51c5d9e31a6eee3d4221261ab9513b0509), contentStartColumn(10), contentStartLine(311), org.kframework.attributes.Location(Location(311,10,315,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule259LHS{}(SortGeneratedCounterCell{},SortK{},SortWasmString{},SortIdentifier{},SortFuncSpec{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule259LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortFuncSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortFuncSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule259LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortFuncSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'14:SortOptionalId{},VarSPEC:SortFuncSpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("311"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,10,315,14)"), UNIQUE'Unds'ID{}("6df93fbac296a0ddf11aa3aa5b7cbd51c5d9e31a6eee3d4221261ab9513b0509")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(OID,`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(TUSE,LDECLS,INSTRS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`allocfunc(_,_,_,_)_WASM_Alloc_OptionalId_TypeUse_LocalDecls_Instrs`(OID,TUSE,LDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4273f639fe4c65dac3bba1280f79963915d08fbb6a5ae08cbacdc8aab0f6ea6), contentStartColumn(10), contentStartLine(681), org.kframework.attributes.Location(Location(681,10,681,121)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule260LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortLocalDecls{},SortOptionalId{},SortTypeUse{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule260LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINSTRS:SortInstrs{},VarLDECLS:SortLocalDecls{},VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarTUSE:SortTypeUse{},VarLDECLS:SortLocalDecls{},VarINSTRS:SortInstrs{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule260LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINSTRS:SortInstrs{},VarLDECLS:SortLocalDecls{},VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},VarLDECLS:SortLocalDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("681"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(681,10,681,121)"), UNIQUE'Unds'ID{}("d4273f639fe4c65dac3bba1280f79963915d08fbb6a5ae08cbacdc8aab0f6ea6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(EXPO,SPEC) #as _14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59031fdb30eb8637420a00e4cf17195aed670d8bd7906e77850c0a301003f91f), contentStartColumn(10), contentStartLine(305), org.kframework.attributes.Location(Location(305,10,309,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule261LHS{}(SortGeneratedCounterCell{},SortK{},SortInlineExport{},SortInt{},SortFuncSpec{},SortValstackCell{},SortCurFrameCell{},SortFuncSpec{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule261LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortFuncSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortFuncSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortFuncSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortFuncSpec{}),Var'Unds'14:SortFuncSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule261LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortFuncSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortFuncSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'14:SortFuncSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("305"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,10,309,62)"), UNIQUE'Unds'ID{}("59031fdb30eb8637420a00e4cf17195aed670d8bd7906e77850c0a301003f91f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(inj{Identifier,OptionalId}(ID) #as _14,`___WASM-TEXT_GlobalSpec_InlineExport_GlobalSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`global_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(_14,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c43f5d811c9967cf36ba2008a1988b02303bb0b65a8ce3195eaeca30aea10cd4), contentStartColumn(10), contentStartLine(297), org.kframework.attributes.Location(Location(297,10,301,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule262LHS{}(SortGeneratedCounterCell{},SortK{},SortWasmString{},SortIdentifier{},SortGlobalSpec{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule262LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortGlobalSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortGlobalSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule262LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortGlobalSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Var'Unds'14:SortOptionalId{},VarSPEC:SortGlobalSpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("297"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,10,301,14)"), UNIQUE'Unds'ID{}("c43f5d811c9967cf36ba2008a1988b02303bb0b65a8ce3195eaeca30aea10cd4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(OID,`___WASM_GlobalSpec_TextFormatGlobalType_Instr`(TYP,IS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(IS)~>inj{Alloc,KItem}(`allocglobal(_,_)_WASM_Alloc_OptionalId_GlobalType`(OID,`asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(TYP)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d1f666ade6e3d77de6149baec563e63dfe889e0cb7ea63d46278b046078ccef), contentStartColumn(10), contentStartLine(476), org.kframework.attributes.Location(Location(476,10,476,121)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule263LHS{}(SortGeneratedCounterCell{},SortK{},SortInstr{},SortOptionalId{},SortTextFormatGlobalType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule263LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstr{},VarOID:SortOptionalId{},VarTYP:SortTextFormatGlobalType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(VarTYP:SortTextFormatGlobalType{},VarIS:SortInstr{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule263LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstr{},VarOID:SortOptionalId{},VarTYP:SortTextFormatGlobalType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(VarIS:SortInstr{}),kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(VarOID:SortOptionalId{},LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(VarTYP:SortTextFormatGlobalType{}))),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("476"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,10,476,121)"), UNIQUE'Unds'ID{}("6d1f666ade6e3d77de6149baec563e63dfe889e0cb7ea63d46278b046078ccef")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_GlobalSpec_InlineExport_GlobalSpec`(EXPO,SPEC) #as _14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8cdfb629bdff21ba642d0614b99fcbb075bc10a66d5cd8822d123756f3e44dc9), contentStartColumn(10), contentStartLine(291), org.kframework.attributes.Location(Location(291,10,295,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule264LHS{}(SortGeneratedCounterCell{},SortK{},SortInlineExport{},SortInt{},SortGlobalSpec{},SortValstackCell{},SortCurFrameCell{},SortGlobalSpec{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule264LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortGlobalSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortGlobalSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortGlobalSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortGlobalSpec{}),Var'Unds'14:SortGlobalSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule264LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortGlobalSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortGlobalSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'14:SortGlobalSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,295,62)"), UNIQUE'Unds'ID{}("8cdfb629bdff21ba642d0614b99fcbb075bc10a66d5cd8822d123756f3e44dc9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(if___(then_)(else_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(`_WASM-DATA_OptionalId`(.KList),TDECLS,C,IS,IS'))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(C)~>inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9b69a95f1bd09aecd47a9ba6a06d0dd2e4e435a93662b0a0a0539fdb506f91c4), contentStartColumn(10), contentStartLine(143), org.kframework.attributes.Location(Location(143,10,143,133)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule265LHS{}(SortInstrs{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule265LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarC:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule265LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarC:SortInstrs{}),kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("143"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,10,143,133)"), UNIQUE'Unds'ID{}("9b69a95f1bd09aecd47a9ba6a06d0dd2e4e435a93662b0a0a0539fdb506f91c4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(if___(then_)(else_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(inj{Identifier,OptionalId}(ID),TDECLS,C,IS,IS'))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(C)~>inj{BlockInstr,KItem}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDECLS,IS,`_WASM-DATA_OptionalId`(.KList),IS',`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3f526ae983d5329f774bec016efad7f39d108cfad82e8f1d17e819513dc72d57), contentStartColumn(10), contentStartLine(144), org.kframework.attributes.Location(Location(144,10,144,133)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule266LHS{}(SortInstrs{},SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortInstrs{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule266LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDECLS:SortTypeDecls{},VarC:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule266LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarC:SortInstrs{}),kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarIS'Apos':SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,144,133)"), UNIQUE'Unds'ID{}("3f526ae983d5329f774bec016efad7f39d108cfad82e8f1d17e819513dc72d57")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(if___(then_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs`(OID,TDECLS,C,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(C)~>inj{BlockInstr,KItem}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(OID,TDECLS,IS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c1cc17badd960b6649cd510589f484d8e30f7607f302b96ee5886796b87841c), contentStartColumn(10), contentStartLine(142), org.kframework.attributes.Location(Location(142,10,142,133)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule267LHS{}(SortInstrs{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortOptionalId{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule267LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},VarC:SortInstrs{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule267LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarC:SortInstrs{}),kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("142"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,10,142,133)"), UNIQUE'Unds'ID{}("8c1cc17badd960b6649cd510589f484d8e30f7607f302b96ee5886796b87841c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM_ImportDesc_OptionalId_TypeUse`(OID,TUSE)))~>DotVar2),_33,`<curFrame>`(_10,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_11,_12) #as _44,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _47,_34,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_13,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_14,`<funcIds>`(IDS),`<funcAddrs>`(FS),`<nextFuncIdx>`(NEXT),_15,_16,_17,_18,_19,_20,_21)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_22,_23,_24,`<funcIds>`(IDS'),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_25,_26,_27,_28,_29,_30,_31,_32))),DotVar8)),_35,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(ADDR),`<funcDef>`(`<fAddr>`(ADDR),_0,`<fType>`(inj{FuncType,Type}(FTYPE)),_1,_2)),DotVar5)),_3,_4,_5,_6,_7,_8,_9) #as _51,_36,_37),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_33,_44,_47,_34,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_13,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_14,`<funcIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<funcAddrs>`(`Map:update`(FS,inj{Int,KItem}(NEXT),inj{Int,KItem}(ADDR))),`<nextFuncIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_15,_16,_17,_18,_19,_20,_21)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_22,_23,_24,`<funcIds>`(IDS'),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_25,_26,_27,_28,_29,_30,_31,_32))),DotVar8)),_35,_51,_36,_37),DotVar0) requires `_==K_`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(FTYPE)),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE)))) ensures #token("true","Bool") [UNIQUE_ID(7839c1dcccfba0148adece09922d759a056f781dd0f5e6beab6865777d33c30b), contentStartColumn(10), contentStartLine(1323), org.kframework.attributes.Location(Location(1323,10,1347,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule268LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortFuncDefCellMap{},SortModuleInstCellMap{},SortMap{},SortFuncType{},SortMap{},SortMap{},SortWasmString{},SortInt{},SortWasmString{},SortInt{},SortOptionalId{},SortIndex{},SortTypeUse{},SortMap{},SortMap{},SortFCodeCell{},SortFLocalCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortNextTypeIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortFModInstCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortNextFuncAddrCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortTabsCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortNextTabAddrCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{}) : SortGeneratedTopCell{}
  where rule268LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortFuncDefCellMap{},VarDotVar8:SortModuleInstCellMap{},VarFS:SortMap{},VarFTYPE:SortFuncType{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Var'Unds'0:SortFCodeCell{},Var'Unds'1:SortFLocalCell{},Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{},Var'Unds'13:SortExportsCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortFModInstCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortNextFuncIdxCell{},Var'Unds'26:SortTabIdsCell{},Var'Unds'27:SortTabAddrsCell{},Var'Unds'28:SortMemIdsCell{},Var'Unds'29:SortMemAddrsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortTabsCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'6:SortMemsCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(VarFTYPE:SortFuncType{})),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},VarTUSE:SortTypeUse{}))),VarDotVar2:SortK{})),Var'Unds'33:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'10:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{}),Var'Unds'44:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'47:SortModuleRegistryCell{}),Var'Unds'34:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'13:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'14:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(VarFS:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'25:SortNextFuncIdxCell{},Var'Unds'26:SortTabIdsCell{},Var'Unds'27:SortTabAddrsCell{},Var'Unds'28:SortMemIdsCell{},Var'Unds'29:SortMemAddrsCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'35:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarFTYPE:SortFuncType{})),Var'Unds'1:SortFLocalCell{},Var'Unds'2:SortFModInstCell{})),VarDotVar5:SortFuncDefCellMap{})),Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortMemsCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),Var'Unds'51:SortMainStoreCell{}),Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule268LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortFuncDefCellMap{},VarDotVar8:SortModuleInstCellMap{},VarFS:SortMap{},VarFTYPE:SortFuncType{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Var'Unds'0:SortFCodeCell{},Var'Unds'1:SortFLocalCell{},Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{},Var'Unds'13:SortExportsCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortFModInstCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortNextFuncIdxCell{},Var'Unds'26:SortTabIdsCell{},Var'Unds'27:SortTabAddrsCell{},Var'Unds'28:SortMemIdsCell{},Var'Unds'29:SortMemAddrsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortTabsCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'6:SortMemsCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'33:SortValstackCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'34:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'13:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'14:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'funcAddrs'-GT-'{}(LblMap'Coln'update{}(VarFS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXT:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'25:SortNextFuncIdxCell{},Var'Unds'26:SortTabIdsCell{},Var'Unds'27:SortTabAddrsCell{},Var'Unds'28:SortMemIdsCell{},Var'Unds'29:SortMemAddrsCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1323"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1323,10,1347,90)"), UNIQUE'Unds'ID{}("7839c1dcccfba0148adece09922d759a056f781dd0f5e6beab6865777d33c30b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(global__)_WASM_ImportDesc_OptionalId_TextFormatGlobalType`(OID,TGTYP)))~>DotVar2),_33,`<curFrame>`(_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _44,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _47,_34,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,`<globIds>`(IDS),`<globalAddrs>`(GS),`<nextGlobIdx>`(NEXT))),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar11)),_22,_23,_24,_25,_26,_27,_28,_29,_30,_31,`<globIds>`(IDS'),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar10)),_32))),DotVar7)),_35,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(ADDR),`<globalInst>`(`<gAddr>`(ADDR),`<gValue>`(`<_>__WASM-DATA_Val_AValType_Number`(TYP,_0)),`<gMut>`(MUT))),DotVar5)),_7) #as _51,_36,_37),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_33,_44,_47,_34,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,`<globIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<globalAddrs>`(`Map:update`(GS,inj{Int,KItem}(NEXT),inj{Int,KItem}(ADDR))),`<nextGlobIdx>`(`_+Int_`(NEXT,#token("1","Int"))))),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar11)),_22,_23,_24,_25,_26,_27,_28,_29,_30,_31,`<globIds>`(IDS'),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar10)),_32))),DotVar7)),_35,_51,_36,_37),DotVar0) requires `_==K_`(inj{GlobalType,KItem}(`asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(TGTYP)),inj{GlobalType,KItem}(`___WASM_GlobalType_Mut_AValType`(MUT,TYP))) ensures #token("true","Bool") [UNIQUE_ID(f07b7e8b609f94ce3672804c8227120bfebc8fd1712dc339d5c075716d6ca5ba), contentStartColumn(10), contentStartLine(1397), org.kframework.attributes.Location(Location(1397,10,1419,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule269LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortGlobalInstCellMap{},SortModuleInstCellMap{},SortMap{},SortMap{},SortMap{},SortWasmString{},SortInt{},SortMut{},SortWasmString{},SortInt{},SortOptionalId{},SortIndex{},SortTextFormatGlobalType{},SortAValType{},SortNumber{},SortFuncsCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortNextFuncAddrCell{},SortMemIdsCell{},SortMemAddrsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortTabsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortMemsCell{},SortMainStoreCell{},SortNextMemAddrCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{}) : SortGeneratedTopCell{}
  where rule269LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortMap{},VarDotVar11:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortGlobalInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarGS:SortMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarMUT:SortMut{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTGTYP:SortTextFormatGlobalType{},VarTYP:SortAValType{},Var'Unds'0:SortNumber{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'3:SortTabsCell{},Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'5:SortMemsCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortGlobalType{}, SortKItem{}}(LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(VarTGTYP:SortTextFormatGlobalType{})),dotk{}()),kseq{}(inj{SortGlobalType{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(VarMUT:SortMut{},VarTYP:SortAValType{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(VarOID:SortOptionalId{},VarTGTYP:SortTextFormatGlobalType{}))),VarDotVar2:SortK{})),Var'Unds'33:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'8:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'44:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'47:SortModuleRegistryCell{}),Var'Unds'34:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(VarGS:SortMap{}),Lbl'-LT-'nextGlobIdx'-GT-'{}(VarNEXT:SortInt{}))),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar11:SortMap{})),Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar10:SortMap{})),Var'Unds'32:SortNextGlobIdxCell{}))),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'35:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYP:SortAValType{},Var'Unds'0:SortNumber{})),Lbl'-LT-'gMut'-GT-'{}(VarMUT:SortMut{}))),VarDotVar5:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'51:SortMainStoreCell{}),Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule269LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortMap{},VarDotVar11:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortGlobalInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarGS:SortMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarMUT:SortMut{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTGTYP:SortTextFormatGlobalType{},VarTYP:SortAValType{},Var'Unds'0:SortNumber{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'3:SortTabsCell{},Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'5:SortMemsCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'33:SortValstackCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'34:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'globalAddrs'-GT-'{}(LblMap'Coln'update{}(VarGS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXT:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Lbl'-LT-'nextGlobIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))))),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar11:SortMap{})),Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar10:SortMap{})),Var'Unds'32:SortNextGlobIdxCell{}))),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1397"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1397,10,1419,42)"), UNIQUE'Unds'ID{}("f07b7e8b609f94ce3672804c8227120bfebc8fd1712dc339d5c075716d6ca5ba")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(memory__)_WASM_ImportDesc_OptionalId_MemType`(OID,inj{Limits,MemType}(LIM))))~>DotVar2),_33,`<curFrame>`(_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _45,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _48,_34,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,`<memIds>`(IDS),`<memAddrs>`(`.Map`(.KList)),_19,_20,_21)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_22,_23,_24,_25,_26,_27,_28,_29,`<memIds>`(IDS'),`<memAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_30,_31,_32))),DotVar8)),_35,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),DotVar6)),DotVar5)),_4,_5,_6) #as _52,_36,_37),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_33,_45,_48,_34,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,`<memIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,#token("0","Int"))),`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_19,_20,_21)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_22,_23,_24,_25,_26,_27,_28,_29,`<memIds>`(IDS'),`<memAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_30,_31,_32))),DotVar8)),_35,_52,_36,_37),DotVar0) requires `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(SIZE,MAX,LIM) ensures #token("true","Bool") [UNIQUE_ID(ba2f37c8903a29720d7f27a8dec6648672b869093c7dca1461ad01b9c307777a), contentStartColumn(10), contentStartLine(1373), org.kframework.attributes.Location(Location(1373,10,1395,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule270LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortMemInstCellMap{},SortMdataCell{},SortModuleInstCellMap{},SortMap{},SortMap{},SortLimits{},SortOptionalInt{},SortWasmString{},SortInt{},SortWasmString{},SortOptionalId{},SortInt{},SortIndex{},SortFuncsCell{},SortNextFuncAddrCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortGlobIdsCell{},SortTabsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortNextTabAddrCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextMemAddrCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortGlobalsCell{},SortMainStoreCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{}) : SortGeneratedTopCell{}
  where rule270LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortMemInstCellMap{},VarDotVar6:SortMdataCell{},VarDotVar8:SortModuleInstCellMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'45:SortCurFrameCell{},Var'Unds'48:SortModuleRegistryCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'52:SortMainStoreCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarSIZE:SortInt{},VarMAX:SortOptionalInt{},VarLIM:SortLimits{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(VarOID:SortOptionalId{},inj{SortLimits{}, SortMemType{}}(VarLIM:SortLimits{})))),VarDotVar2:SortK{})),Var'Unds'33:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'45:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'48:SortModuleRegistryCell{}),Var'Unds'34:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'35:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar6:SortMdataCell{})),VarDotVar5:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'52:SortMainStoreCell{}),Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule270LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortMemInstCellMap{},VarDotVar6:SortMdataCell{},VarDotVar8:SortModuleInstCellMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'45:SortCurFrameCell{},Var'Unds'48:SortModuleRegistryCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'52:SortMainStoreCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'33:SortValstackCell{},Var'Unds'45:SortCurFrameCell{},Var'Unds'48:SortModuleRegistryCell{},Var'Unds'34:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'52:SortMainStoreCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1373"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1373,10,1395,51)"), UNIQUE'Unds'ID{}("ba2f37c8903a29720d7f27a8dec6648672b869093c7dca1461ad01b9c307777a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(table__)_WASM_ImportDesc_OptionalId_TableType`(OID,`___WASM_TableType_Limits_TableElemType`(LIM,_0))))~>DotVar2),_34,`<curFrame>`(_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _46,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _49,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,`<tabIds>`(IDS),`<tabAddrs>`(`.Map`(.KList)),_18,_19,_20,_21,_22)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_23,_24,_25,_26,_27,_28,`<tabIds>`(IDS'),`<tabAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_29,_30,_31,_32,_33))),DotVar8)),_36,`<mainStore>`(_1,_2,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),`<tmax>`(MAX),`<tsize>`(SIZE),DotVar6)),DotVar5)),_3,_4,_5,_6,_7) #as _53,_37,_38),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_34,_46,_49,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,`<tabIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,#token("0","Int"))),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_18,_19,_20,_21,_22)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_23,_24,_25,_26,_27,_28,`<tabIds>`(IDS'),`<tabAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_29,_30,_31,_32,_33))),DotVar8)),_36,_53,_37,_38),DotVar0) requires `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(SIZE,MAX,LIM) ensures #token("true","Bool") [UNIQUE_ID(ee7d2259b93bfb72b44b02b7a6d531a859376c4e4168910c4dc1da7a7380da82), contentStartColumn(10), contentStartLine(1349), org.kframework.attributes.Location(Location(1349,10,1371,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule271LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortTabInstCellMap{},SortTdataCell{},SortModuleInstCellMap{},SortMap{},SortMap{},SortLimits{},SortOptionalInt{},SortWasmString{},SortInt{},SortWasmString{},SortOptionalId{},SortInt{},SortIndex{},SortTableElemType{},SortFuncsCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortMemAddrsCell{},SortNextFuncAddrCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortNextTabAddrCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortMemsCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortNextMemAddrCell{},SortMainStoreCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{}) : SortGeneratedTopCell{}
  where rule271LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortTabInstCellMap{},VarDotVar6:SortTdataCell{},VarDotVar8:SortModuleInstCellMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortTableElemType{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortMemIdsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{},Var'Unds'34:SortValstackCell{},Var'Unds'35:SortModuleIdsCell{},Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{},Var'Unds'4:SortMemsCell{},Var'Unds'46:SortCurFrameCell{},Var'Unds'49:SortModuleRegistryCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'53:SortMainStoreCell{},Var'Unds'6:SortGlobalsCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarSIZE:SortInt{},VarMAX:SortOptionalInt{},VarLIM:SortLimits{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(VarLIM:SortLimits{},Var'Unds'0:SortTableElemType{})))),VarDotVar2:SortK{})),Var'Unds'34:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'8:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'46:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'49:SortModuleRegistryCell{}),Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'29:SortMemIdsCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'tsize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar6:SortTdataCell{})),VarDotVar5:SortTabInstCellMap{})),Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortGlobalsCell{},Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'53:SortMainStoreCell{}),Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule271LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortTabInstCellMap{},VarDotVar6:SortTdataCell{},VarDotVar8:SortModuleInstCellMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortTableElemType{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortMemIdsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{},Var'Unds'34:SortValstackCell{},Var'Unds'35:SortModuleIdsCell{},Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{},Var'Unds'4:SortMemsCell{},Var'Unds'46:SortCurFrameCell{},Var'Unds'49:SortModuleRegistryCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'53:SortMainStoreCell{},Var'Unds'6:SortGlobalsCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'34:SortValstackCell{},Var'Unds'46:SortCurFrameCell{},Var'Unds'49:SortModuleRegistryCell{},Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'29:SortMemIdsCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'53:SortMainStoreCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1349"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1349,10,1371,51)"), UNIQUE'Unds'ID{}("ee7d2259b93bfb72b44b02b7a6d531a859376c4e4168910c4dc1da7a7380da82")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(LOCAL),`<curModIdx>`(inj{Int,OptionalInt}(MODIDX)),`<labelDepth>`(DEPTH),`<labelIds>`(IDS)),_7,_8,_9,_10,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),`<fCode>`(INSTRS),`<fType>`(inj{FuncType,Type}(`_->__WASM-DATA_FuncType_VecType_VecType`(`[_]_WASM-DATA_VecType_ValTypes`(TDOMAIN),`[_]_WASM-DATA_VecType_ValTypes`(TRANGE)))),`<fLocal>`(inj{VecType,Type}(`[_]_WASM-DATA_VecType_ValTypes`(TLOCALS))),`<fModInst>`(MODIDX'))),DotVar4)),_0,_1,_2,_3,_4,_5,_6) #as _25,_11,_12),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_locals__WASM_Instr_ValStack`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#revs(_)_WASM-DATA_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TDOMAIN),VALSTACK)),`#zero(_)_WASM-DATA_ValStack_ValTypes`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(TLOCALS)))))~>inj{Instr,KItem}(`block__end_WASM_Instr_VecType_Instrs`(`[_]_WASM-DATA_VecType_ValTypes`(TRANGE),INSTRS))~>inj{Frame,KItem}(`frame_______WASM_Frame_Int_ValTypes_ValStack_Map_Int_Map`(MODIDX,TRANGE,`#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TDOMAIN),VALSTACK),LOCAL,DEPTH,IDS))~>DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(`<locals>`(`.Map`(.KList)),`<curModIdx>`(inj{Int,OptionalInt}(MODIDX')),`<labelDepth>`(#token("0","Int")),`<labelIds>`(`.Map`(.KList))),_7,_8,_9,_10,_25,_11,_12),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9998b85baf6ee08bf731fd62e05a0e61effd114b9cea2db7726175c90f2e22e6), contentStartColumn(10), contentStartLine(734), org.kframework.attributes.Location(Location(734,10,751,20)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule272LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortFuncDefCellMap{},SortInt{},SortMap{},SortInstrs{},SortMap{},SortInt{},SortInt{},SortValTypes{},SortValTypes{},SortValTypes{},SortValStack{},SortNextFuncAddrCell{},SortTabsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{}) : SortGeneratedTopCell{}
  where rule272LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortFuncDefCellMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarINSTRS:SortInstrs{},VarLOCAL:SortMap{},VarMODIDX:SortInt{},VarMODIDX'Apos':SortInt{},VarTDOMAIN:SortValTypes{},VarTLOCALS:SortValTypes{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'25:SortMainStoreCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCAL:SortMap{}),Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX:SortInt{})),Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'10:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'fCode'-GT-'{}(VarINSTRS:SortInstrs{}),Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{}),Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTRANGE:SortValTypes{})))),Lbl'-LT-'fLocal'-GT-'{}(inj{SortVecType{}, SortType{}}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTLOCALS:SortValTypes{}))),Lbl'-LT-'fModInst'-GT-'{}(VarMODIDX'Apos':SortInt{}))),VarDotVar4:SortFuncDefCellMap{})),Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'25:SortMainStoreCell{}),Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule272LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortFuncDefCellMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarINSTRS:SortInstrs{},VarLOCAL:SortMap{},VarMODIDX:SortInt{},VarMODIDX'Apos':SortInt{},VarTDOMAIN:SortValTypes{},VarTLOCALS:SortValTypes{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'25:SortMainStoreCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{}),VarVALSTACK:SortValStack{})),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarTLOCALS:SortValTypes{}))))),kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTRANGE:SortValTypes{}),VarINSTRS:SortInstrs{})),kseq{}(inj{SortFrame{}, SortKItem{}}(Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(VarMODIDX:SortInt{},VarTRANGE:SortValTypes{},Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{}),VarVALSTACK:SortValStack{}),VarLOCAL:SortMap{},VarDEPTH:SortInt{},VarIDS:SortMap{})),VarDotVar2:SortK{})))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Stop'Map{}()),Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX'Apos':SortInt{})),Lbl'-LT-'labelDepth'-GT-'{}(\dv{SortInt{}}("0")),Lbl'-LT-'labelIds'-GT-'{}(Lbl'Stop'Map{}())),Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'25:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("734"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(734,10,751,20)"), UNIQUE'Unds'ID{}("9998b85baf6ee08bf731fd62e05a0e61effd114b9cea2db7726175c90f2e22e6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(loop___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(`_WASM-DATA_OptionalId`(.KList),TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`loop__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e28eda358a975d4dd16f2f8a62869bd027f9c476680e6b2fee8dbfc4c125635), contentStartColumn(10), contentStartLine(148), org.kframework.attributes.Location(Location(148,10,148,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule273LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule273LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule273LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("148"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,10,148,90)"), UNIQUE'Unds'ID{}("5e28eda358a975d4dd16f2f8a62869bd027f9c476680e6b2fee8dbfc4c125635")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(loop___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(inj{Identifier,OptionalId}(ID),TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`loop___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,IS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99af9e1b4bd67e8a03a6daa71535454aac3b940da2e790214f07d7bc7c269a22), contentStartColumn(10), contentStartLine(149), org.kframework.attributes.Location(Location(149,10,149,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule274LHS{}(SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule274LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule274LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("149"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,10,149,90)"), UNIQUE'Unds'ID{}("99af9e1b4bd67e8a03a6daa71535454aac3b940da2e790214f07d7bc7c269a22")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _14,`(data_)_WASM-TEXT_MemorySpec_DataString`(DS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(_14,inj{Limits,MemorySpec}(`___WASM-DATA_Limits_Int_Int`(`#lengthDataPages(_)_WASM_Int_DataString`(DS),`#lengthDataPages(_)_WASM_Int_DataString`(DS)))))~>inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(inj{Identifier,Index}(ID),`(offset_)_WASM_Offset_Instrs`(`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_WasmInt`(`i32_WASM-DATA_IValType`(.KList),inj{Int,WasmInt}(#token("0","Int"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),DS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(318e93acc7051b89358a4c1f73cc01840798325fc626c426ed68faa8db79db0b), contentStartColumn(10), contentStartLine(255), org.kframework.attributes.Location(Location(255,10,259,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule275LHS{}(SortDataString{},SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule275LHS{}(VarDS:SortDataString{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(VarDS:SortDataString{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule275LHS{}(VarDS:SortDataString{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'14:SortOptionalId{},inj{SortLimits{}, SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{}),Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{}))))),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("0"))))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarDS:SortDataString{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,259,14)"), UNIQUE'Unds'ID{}("318e93acc7051b89358a4c1f73cc01840798325fc626c426ed68faa8db79db0b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _14,`___WASM-TEXT_MemorySpec_InlineExport_MemorySpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`memory_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(_14,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f643f9369ecee5e35bd312f940e4185a9ac5f66f760b3fd3fdc080305ad20f55), contentStartColumn(10), contentStartLine(339), org.kframework.attributes.Location(Location(339,10,343,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule276LHS{}(SortGeneratedCounterCell{},SortK{},SortWasmString{},SortIdentifier{},SortMemorySpec{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule276LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortMemorySpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortMemorySpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule276LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortMemorySpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'14:SortOptionalId{},VarSPEC:SortMemorySpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("339"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,10,343,14)"), UNIQUE'Unds'ID{}("f643f9369ecee5e35bd312f940e4185a9ac5f66f760b3fd3fdc080305ad20f55")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(OID,inj{Int,MemorySpec}(MIN)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`allocmemory(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,`.Int_WASM-DATA_OptionalInt`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_<=Int_`(MIN,`#maxMemorySize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(880cab8c1cdc0245378b2ef05f91540727082af8f6f7ec694551547a5bbc7c04), contentStartColumn(10), contentStartLine(914), org.kframework.attributes.Location(Location(914,10,915,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule277LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule277LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},inj{SortInt{}, SortMemorySpec{}}(VarMIN:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule277LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("914"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,10,915,42)"), UNIQUE'Unds'ID{}("880cab8c1cdc0245378b2ef05f91540727082af8f6f7ec694551547a5bbc7c04")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(OID,inj{Limits,MemorySpec}(`___WASM-DATA_Limits_Int_Int`(MIN,MAX))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`allocmemory(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,inj{Int,OptionalInt}(MAX)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_andBool_`(`_<=Int_`(MIN,`#maxMemorySize()_WASM_Int`(.KList)),`_<=Int_`(MAX,`#maxMemorySize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(7bce0669195a1da475ff571ffacb5ef7b4052c87d526e3e191ae0ff958f04647), contentStartColumn(10), contentStartLine(916), org.kframework.attributes.Location(Location(916,10,918,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule278LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule278LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMAX:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},inj{SortLimits{}, SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(VarMIN:SortInt{},VarMAX:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule278LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarMAX:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("916"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,10,918,42)"), UNIQUE'Unds'ID{}("7bce0669195a1da475ff571ffacb5ef7b4052c87d526e3e191ae0ff958f04647")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_MemorySpec_InlineExport_MemorySpec`(EXPO,SPEC) #as _14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed69657d2521aed60579b3e0fb066305529f4c81ed75ccbcb5914fac975d5a3d), contentStartColumn(10), contentStartLine(333), org.kframework.attributes.Location(Location(333,10,337,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule279LHS{}(SortGeneratedCounterCell{},SortK{},SortInlineExport{},SortInt{},SortMemorySpec{},SortValstackCell{},SortCurFrameCell{},SortMemorySpec{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule279LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortMemorySpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortMemorySpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortMemorySpec{}),Var'Unds'14:SortMemorySpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule279LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortMemorySpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortMemorySpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'14:SortMemorySpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("333"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,10,337,62)"), UNIQUE'Unds'ID{}("ed69657d2521aed60579b3e0fb066305529f4c81ed75ccbcb5914fac975d5a3d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(OID,DEFNS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`sortModule(_,_)_WASM_ModuleDecl_Defns_OptionalId`(DEFNS,OID))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(52f983a79415e0ac4dcf7e29f19783e7b5287e88fed514ab94e8d0745cd2bbe5), contentStartColumn(10), contentStartLine(1492), org.kframework.attributes.Location(Location(1492,10,1492,80)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule280LHS{}(SortDefns{},SortGeneratedCounterCell{},SortK{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule280LHS{}(VarDEFNS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},VarDEFNS:SortDefns{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule280LHS{}(VarDEFNS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(LblsortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(VarDEFNS:SortDefns{},VarOID:SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1492"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1492,10,1492,80)"), UNIQUE'Unds'ID{}("52f983a79415e0ac4dcf7e29f19783e7b5287e88fed514ab94e8d0745cd2bbe5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{StartDefn,KItem}(`(start_)_WASM_StartDefn_Index`(TFIDX))~>DotVar2),_15,`<curFrame>`(_0,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_1,_2) #as _27,_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,_4,_5,_6,`<funcIds>`(IDS),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(FADDR)),DotVar6)),_7,_8,_9,_10,_11,_12,_13,_14)),DotVar4)) #as _30,_18,_19,_20,_21),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),_15,_27,_16,_17,_30,_18,_19,_20,_21),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9b42f48e3774ca321c85f899d4c7e3f79b925bbafc80922fb96903f8ac5e1b05), contentStartColumn(10), contentStartLine(1278), org.kframework.attributes.Location(Location(1278,10,1285,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule281LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortMap{},SortInt{},SortMap{},SortIndex{},SortLocalsCell{},SortLabelDepthCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortLabelIdsCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortExportsCell{},SortModuleInstancesCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{}) : SortGeneratedTopCell{}
  where rule281LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarDotVar6:SortMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{},Var'Unds'15:SortValstackCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Var'Unds'15:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'27:SortCurFrameCell{}),Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})),Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'30:SortModuleInstancesCell{}),Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule281LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarDotVar6:SortMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{},Var'Unds'15:SortValstackCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Var'Unds'15:SortValstackCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1278"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1278,10,1285,23)"), UNIQUE'Unds'ID{}("9b42f48e3774ca321c85f899d4c7e3f79b925bbafc80922fb96903f8ac5e1b05")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _14,`_(elem_)_WASM-TEXT_TableSpec_TableElemType_ElemSegment`(`funcref_WASM_TableElemType`(.KList) #as _16,ES)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(_14,inj{TableType,TableSpec}(`___WASM_TableType_Limits_TableElemType`(`___WASM-DATA_Limits_Int_Int`(`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES),`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES)),_16))))~>inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(inj{Identifier,Index}(ID),`(offset_)_WASM_Offset_Instrs`(`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_WasmInt`(`i32_WASM-DATA_IValType`(.KList),inj{Int,WasmInt}(#token("0","Int"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),ES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcced79313f3b23c97d7dc5dc8973c87a636611c0cb385323029273d17cdb362), contentStartColumn(10), contentStartLine(271), org.kframework.attributes.Location(Location(271,10,275,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule282LHS{}(SortGeneratedCounterCell{},SortK{},SortElemSegment{},SortIdentifier{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortTableElemType{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule282LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarES:SortElemSegment{},VarID:SortIdentifier{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'16:SortTableElemType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(\and{SortTableElemType{}}(Lblfuncref'Unds'WASM'Unds'TableElemType{}(),Var'Unds'16:SortTableElemType{}),VarES:SortElemSegment{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule282LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarES:SortElemSegment{},VarID:SortIdentifier{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'16:SortTableElemType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'14:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}),Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{})),Var'Unds'16:SortTableElemType{})))),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("0"))))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarES:SortElemSegment{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("271"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,10,275,14)"), UNIQUE'Unds'ID{}("fcced79313f3b23c97d7dc5dc8973c87a636611c0cb385323029273d17cdb362")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _14,`___WASM-TEXT_TableSpec_InlineExport_TableSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`table_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(_14,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d559a7432ad4a4d64fe2944e66ab72583f595e9bf4d33cfc47009a0d3232aa0f), contentStartColumn(10), contentStartLine(325), org.kframework.attributes.Location(Location(325,10,329,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule283LHS{}(SortGeneratedCounterCell{},SortK{},SortWasmString{},SortIdentifier{},SortTableSpec{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule283LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortTableSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortTableSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule283LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortTableSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'14:SortOptionalId{},VarSPEC:SortTableSpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("325"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,10,329,14)"), UNIQUE'Unds'ID{}("d559a7432ad4a4d64fe2944e66ab72583f595e9bf4d33cfc47009a0d3232aa0f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(OID,inj{TableType,TableSpec}(`___WASM_TableType_Limits_TableElemType`(`___WASM-DATA_Limits_Int_Int`(MIN,MAX),`funcref_WASM_TableElemType`(.KList)))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`alloctable(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,inj{Int,OptionalInt}(MAX)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_andBool_`(`_<=Int_`(MIN,`#maxTableSize()_WASM_Int`(.KList)),`_<=Int_`(MAX,`#maxTableSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(82b27f2212b7cd773706553e9a2ae9e91d45ecba476713cee1c39a01da3c3c2c), contentStartColumn(10), contentStartLine(870), org.kframework.attributes.Location(Location(870,10,872,41)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule284LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule284LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMAX:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(VarMIN:SortInt{},VarMAX:SortInt{}),Lblfuncref'Unds'WASM'Unds'TableElemType{}())))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule284LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarMAX:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("870"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(870,10,872,41)"), UNIQUE'Unds'ID{}("82b27f2212b7cd773706553e9a2ae9e91d45ecba476713cee1c39a01da3c3c2c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(OID,inj{TableType,TableSpec}(`___WASM_TableType_Limits_TableElemType`(inj{Int,Limits}(MIN),`funcref_WASM_TableElemType`(.KList)))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`alloctable(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,`.Int_WASM-DATA_OptionalInt`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_<=Int_`(MIN,`#maxTableSize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(07308a512435222747ea1752c81d711bf629f58b9374c85ab1e10dbaff307ecf), contentStartColumn(10), contentStartLine(868), org.kframework.attributes.Location(Location(868,10,869,41)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule285LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule285LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(inj{SortInt{}, SortLimits{}}(VarMIN:SortInt{}),Lblfuncref'Unds'WASM'Unds'TableElemType{}())))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule285LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("868"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(868,10,869,41)"), UNIQUE'Unds'ID{}("07308a512435222747ea1752c81d711bf629f58b9374c85ab1e10dbaff307ecf")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_TableSpec_InlineExport_TableSpec`(EXPO,SPEC) #as _14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d01895b20f5ac11982c2e5175a7fea4fd64bc75ebab7e06b313aacad87d6e54b), contentStartColumn(10), contentStartLine(319), org.kframework.attributes.Location(Location(319,10,323,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule286LHS{}(SortGeneratedCounterCell{},SortK{},SortInlineExport{},SortInt{},SortTableSpec{},SortValstackCell{},SortCurFrameCell{},SortTableSpec{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule286LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortTableSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortTableSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortTableSpec{}),Var'Unds'14:SortTableSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule286LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortTableSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortTableSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'14:SortTableSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("319"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(319,10,323,62)"), UNIQUE'Unds'ID{}("d01895b20f5ac11982c2e5175a7fea4fd64bc75ebab7e06b313aacad87d6e54b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TypeDefn,KItem}(`(type_(func_))_WASM_TypeDefn_OptionalId_TypeDecls`(ID,TDECLS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`alloctype(_,_)_WASM_Alloc_OptionalId_TypeDecls`(ID,TDECLS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c7230f2ae82dd875287bd157978bdceec0a1e17fdd8c689486ddca4675d8c8e), contentStartColumn(10), contentStartLine(602), org.kframework.attributes.Location(Location(602,10,602,81)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule287LHS{}(SortGeneratedCounterCell{},SortK{},SortOptionalId{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule287LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule287LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("602"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(602,10,602,81)"), UNIQUE'Unds'ID{}("8c7230f2ae82dd875287bd157978bdceec0a1e17fdd8c689486ddca4675d8c8e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{EmptyStmts,KItem}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ae933a6cb780a01923fba21f19cb16f7f020a16389ea0460e656834cee6f7a0a), contentStartColumn(19), contentStartLine(159), org.kframework.attributes.Location(Location(159,19,159,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule288LHS{}(SortGeneratedCounterCell{},SortK{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule288LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule288LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("159"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,19,159,64)"), UNIQUE'Unds'ID{}("ae933a6cb780a01923fba21f19cb16f7f020a16389ea0460e656834cee6f7a0a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvtf32Op,CvtOp}(CVTOP) #as _13))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{FValType,AValType}(`f32_WASM-DATA_FValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_13,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7245815cab005b6f954a49a0287293d07dfb2ed8a5843da606300518baa227e5), contentStartColumn(10), contentStartLine(282), org.kframework.attributes.Location(Location(282,10,283,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule289LHS{}(SortAValType{},SortNumber{},SortCvtf32Op{},SortGeneratedCounterCell{},SortK{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule289LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvtf32Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvtf32Op{}, SortCvtOp{}}(VarCVTOP:SortCvtf32Op{}),Var'Unds'13:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule289LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvtf32Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'13:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("282"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(282,10,283,66)"), UNIQUE'Unds'ID{}("7245815cab005b6f954a49a0287293d07dfb2ed8a5843da606300518baa227e5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvtf64Op,CvtOp}(CVTOP) #as _13))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{FValType,AValType}(`f64_WASM-DATA_FValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_13,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(67d95f7adb7c51983526105845b47de6a152458682b2fdd2ee60b9d34bfe1fef), contentStartColumn(10), contentStartLine(285), org.kframework.attributes.Location(Location(285,10,286,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule290LHS{}(SortAValType{},SortNumber{},SortCvtf64Op{},SortGeneratedCounterCell{},SortK{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule290LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvtf64Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvtf64Op{}, SortCvtOp{}}(VarCVTOP:SortCvtf64Op{}),Var'Unds'13:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule290LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvtf64Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'13:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("285"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,10,286,66)"), UNIQUE'Unds'ID{}("67d95f7adb7c51983526105845b47de6a152458682b2fdd2ee60b9d34bfe1fef")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvti32Op,CvtOp}(CVTOP) #as _13))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_13,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4e463748a5745e90c470e49c2a2b30e9617b959c26362300a01e752831e3daa2), contentStartColumn(10), contentStartLine(276), org.kframework.attributes.Location(Location(276,10,277,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule291LHS{}(SortAValType{},SortNumber{},SortCvti32Op{},SortGeneratedCounterCell{},SortK{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule291LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvti32Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvti32Op{}, SortCvtOp{}}(VarCVTOP:SortCvti32Op{}),Var'Unds'13:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule291LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvti32Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'13:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("276"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,10,277,66)"), UNIQUE'Unds'ID{}("4e463748a5745e90c470e49c2a2b30e9617b959c26362300a01e752831e3daa2")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvti64Op,CvtOp}(CVTOP) #as _13))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i64_WASM-DATA_IValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_13,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93decc2d947149a70830ef5d16337f27bff05aa63a0e538f4a1afa805a1574fb), contentStartColumn(10), contentStartLine(279), org.kframework.attributes.Location(Location(279,10,280,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule292LHS{}(SortAValType{},SortNumber{},SortCvti64Op{},SortGeneratedCounterCell{},SortK{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule292LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvti64Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvti64Op{}, SortCvtOp{}}(VarCVTOP:SortCvti64Op{}),Var'Unds'13:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule292LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvti64Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'13:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("279"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,280,66)"), UNIQUE'Unds'ID{}("93decc2d947149a70830ef5d16337f27bff05aa63a0e538f4a1afa805a1574fb")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_FValType_FBinOp`(FTYPE,BOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,BOP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(970fce516d18a7ae614fac14f50c64c0f39daf51ab43a35183a342d66097334d), contentStartColumn(10), contentStartLine(240), org.kframework.attributes.Location(Location(240,10,241,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule293LHS{}(SortFBinOp{},SortFloat{},SortFloat{},SortGeneratedCounterCell{},SortK{},SortFValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule293LHS{}(VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(VarFTYPE:SortFValType{},VarBOP:SortFBinOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC2:SortFloat{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule293LHS{}(VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("240"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,10,241,83)"), UNIQUE'Unds'ID{}("970fce516d18a7ae614fac14f50c64c0f39daf51ab43a35183a342d66097334d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_FValType_FRelOp`(FTYPE,ROP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(FTYPE,ROP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d346b1f2149ca53038056881b7a5947102799030f5ce2c7755c197baeffe285), contentStartColumn(10), contentStartLine(265), org.kframework.attributes.Location(Location(265,10,266,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule294LHS{}(SortFloat{},SortFloat{},SortGeneratedCounterCell{},SortK{},SortFValType{},SortFRelOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule294LHS{}(VarC1:SortFloat{},VarC2:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(VarFTYPE:SortFValType{},VarROP:SortFRelOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC2:SortFloat{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule294LHS{}(VarC1:SortFloat{},VarC2:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarC1:SortFloat{},VarC2:SortFloat{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("265"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(265,10,266,83)"), UNIQUE'Unds'ID{}("1d346b1f2149ca53038056881b7a5947102799030f5ce2c7755c197baeffe285")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_FValType_FUnOp`(FTYPE,UOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,UOP,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ae8d6f9ee6f90cb6ac4ac610cf522a55449e7e3723eb2d561c2ef0348323baa9), contentStartColumn(10), contentStartLine(226), org.kframework.attributes.Location(Location(226,10,227,68)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule295LHS{}(SortFloat{},SortGeneratedCounterCell{},SortK{},SortFValType{},SortFUnOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule295LHS{}(VarC1:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(VarFTYPE:SortFValType{},VarUOP:SortFUnOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule295LHS{}(VarC1:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarC1:SortFloat{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("226"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,10,227,68)"), UNIQUE'Unds'ID{}("ae8d6f9ee6f90cb6ac4ac610cf522a55449e7e3723eb2d561c2ef0348323baa9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_IBinOp`(ITYPE,BOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,BOP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5aafeebcb260072fd26ea007320a8586d08697b3049e79c628064291814dcbac), contentStartColumn(10), contentStartLine(238), org.kframework.attributes.Location(Location(238,10,239,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule296LHS{}(SortIBinOp{},SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortIValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule296LHS{}(VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(VarITYPE:SortIValType{},VarBOP:SortIBinOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC2:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule296LHS{}(VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("238"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,10,239,83)"), UNIQUE'Unds'ID{}("5aafeebcb260072fd26ea007320a8586d08697b3049e79c628064291814dcbac")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_IRelOp`(ITYPE,ROP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,ROP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d17c762b2fd915e99806fdeea830fc15dec914e97c6ce91f596ca8c5ee18fd24), contentStartColumn(10), contentStartLine(263), org.kframework.attributes.Location(Location(263,10,264,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule297LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortIValType{},SortIRelOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule297LHS{}(VarC1:SortInt{},VarC2:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(VarITYPE:SortIValType{},VarROP:SortIRelOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC2:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule297LHS{}(VarC1:SortInt{},VarC2:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarC1:SortInt{},VarC2:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("263"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,10,264,83)"), UNIQUE'Unds'ID{}("d17c762b2fd915e99806fdeea830fc15dec914e97c6ce91f596ca8c5ee18fd24")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_IUnOp`(ITYPE,UOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,UOP,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ff63fd1b3bf89c963a64c90296dfef8613c942bfab70942879626ab47ed5dda0), contentStartColumn(10), contentStartLine(224), org.kframework.attributes.Location(Location(224,10,225,68)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule298LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortIValType{},SortIUnOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule298LHS{}(VarC1:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(VarITYPE:SortIValType{},VarUOP:SortIUnOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule298LHS{}(VarC1:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarC1:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("224"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,10,225,68)"), UNIQUE'Unds'ID{}("ff63fd1b3bf89c963a64c90296dfef8613c942bfab70942879626ab47ed5dda0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_LoadOpM`(ITYPE,`___WASM_LoadOpM_LoadOp_MemArg`(LOP,MEMARG)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,LOP,`_+Int_`(IDX,`#getOffset(_)_WASM_Int_MemArg`(MEMARG))))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7b23ddfa5812e28be0f1ef363536f27c403aa1fbaf40d0e6428bce331a27272), contentStartColumn(10), contentStartLine(1018), org.kframework.attributes.Location(Location(1018,10,1019,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule299LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortLoadOp{},SortMemArg{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule299LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarMEMARG:SortMemArg{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(VarLOP:SortLoadOp{},VarMEMARG:SortMemArg{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule299LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarMEMARG:SortMemArg{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},VarLOP:SortLoadOp{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(VarMEMARG:SortMemArg{})))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1018"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1018,10,1019,70)"), UNIQUE'Unds'ID{}("c7b23ddfa5812e28be0f1ef363536f27c403aa1fbaf40d0e6428bce331a27272")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_LoadOpM`(ITYPE,inj{LoadOp,LoadOpM}(LOP)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,LOP,IDX))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(920d21b5ffd7a24fa0072bc65bec5e38a278485324e04bcd6b172311f90d0593), contentStartColumn(10), contentStartLine(1016), org.kframework.attributes.Location(Location(1016,10,1017,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule300LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortLoadOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule300LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},inj{SortLoadOp{}, SortLoadOpM{}}(VarLOP:SortLoadOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule300LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarIDX:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1016"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1016,10,1017,70)"), UNIQUE'Unds'ID{}("920d21b5ffd7a24fa0072bc65bec5e38a278485324e04bcd6b172311f90d0593")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_StoreOpM`(ITYPE,`___WASM_StoreOpM_StoreOp_MemArg`(SOP,MEMARG)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,SOP,`_+Int_`(IDX,`#getOffset(_)_WASM_Int_MemArg`(MEMARG)),VAL))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f7749556748fb0f0373ffd0b7563bdb10a2d54e921ee0e499f3125fa657270a), contentStartColumn(10), contentStartLine(960), org.kframework.attributes.Location(Location(960,10,961,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule301LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortMemArg{},SortStoreOp{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule301LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarMEMARG:SortMemArg{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(VarSOP:SortStoreOp{},VarMEMARG:SortMemArg{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule301LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarMEMARG:SortMemArg{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarSOP:SortStoreOp{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(VarMEMARG:SortMemArg{})),VarVAL:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("960"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,10,961,83)"), UNIQUE'Unds'ID{}("1f7749556748fb0f0373ffd0b7563bdb10a2d54e921ee0e499f3125fa657270a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_StoreOpM`(ITYPE,inj{StoreOp,StoreOpM}(SOP)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,SOP,IDX,VAL))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(062a7eb79ea007cec0320b80f9e7bb9688b2a31bdcfbc58d74be0e36b96c62e3), contentStartColumn(10), contentStartLine(958), org.kframework.attributes.Location(Location(958,10,959,83)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule302LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortStoreOp{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule302LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},inj{SortStoreOp{}, SortStoreOpM{}}(VarSOP:SortStoreOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule302LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarSOP:SortStoreOp{},VarIDX:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("958"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,10,959,83)"), UNIQUE'Unds'ID{}("062a7eb79ea007cec0320b80f9e7bb9688b2a31bdcfbc58d74be0e36b96c62e3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_TestOp`(TYPE,TOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(TYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_IValType_TestOp_Int`(TYPE,TOP,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(567a1af06b5545699b9b3bd504a00c751c3f5c4e82e260ef26704640174e0aa6), contentStartColumn(10), contentStartLine(251), org.kframework.attributes.Location(Location(251,10,252,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule303LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortTestOp{},SortIValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule303LHS{}(VarC1:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTOP:SortTestOp{},VarTYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(VarTYPE:SortIValType{},VarTOP:SortTestOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarTYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule303LHS{}(VarC1:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTOP:SortTestOp{},VarTYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(VarTYPE:SortIValType{},VarTOP:SortTestOp{},VarC1:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("251"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,10,252,67)"), UNIQUE'Unds'ID{}("567a1af06b5545699b9b3bd504a00c751c3f5c4e82e260ef26704640174e0aa6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(`i64_WASM-DATA_IValType`(.KList) #as _14,`load32_s_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_14,#token("4","Int"),EA,signedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b542ee6aa27f47f14d8dbc598a8e2094ca14e1c884e09f09ce6c56e5fe3c8f58), contentStartColumn(10), contentStartLine(1066), org.kframework.attributes.Location(Location(1066,10,1066,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule304LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortIValType{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule304LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'14:SortIValType{}),Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule304LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'14:SortIValType{},\dv{SortInt{}}("4"),VarEA:SortInt{},LblsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1066"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1066,10,1066,93)"), UNIQUE'Unds'ID{}("b542ee6aa27f47f14d8dbc598a8e2094ca14e1c884e09f09ce6c56e5fe3c8f58")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(`i64_WASM-DATA_IValType`(.KList) #as _14,`load32_u_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_14,#token("4","Int"),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f6079513e6a775df758e68b71f43bf6657abd258c740ad418c9ebf74bdf9a7f), contentStartColumn(10), contentStartLine(1063), org.kframework.attributes.Location(Location(1063,10,1063,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule305LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortIValType{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule305LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'14:SortIValType{}),Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule305LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'14:SortIValType{},\dv{SortInt{}}("4"),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1063"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1063,10,1063,93)"), UNIQUE'Unds'ID{}("1f6079513e6a775df758e68b71f43bf6657abd258c740ad418c9ebf74bdf9a7f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`load16_s_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("2","Int"),EA,signedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a506410ba0fcd19aca0c5b210d0f9ba1014b7ef9a2ed8874991196af16b3c0cf), contentStartColumn(10), contentStartLine(1065), org.kframework.attributes.Location(Location(1065,10,1065,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule306LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule306LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule306LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("2"),VarEA:SortInt{},LblsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1065"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1065,10,1065,93)"), UNIQUE'Unds'ID{}("a506410ba0fcd19aca0c5b210d0f9ba1014b7ef9a2ed8874991196af16b3c0cf")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`load16_u_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("2","Int"),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b809bd2f60870878c0d869f1c28c9758036749e1632293996a6159a0fe10ecea), contentStartColumn(10), contentStartLine(1062), org.kframework.attributes.Location(Location(1062,10,1062,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule307LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule307LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule307LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("2"),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1062"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,10,1062,93)"), UNIQUE'Unds'ID{}("b809bd2f60870878c0d869f1c28c9758036749e1632293996a6159a0fe10ecea")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`load8_s_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("1","Int"),EA,signedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(561a55d1556bbd913172db4d0f0be95e723e36cf099448d1b6e41aaa3553cce5), contentStartColumn(10), contentStartLine(1064), org.kframework.attributes.Location(Location(1064,10,1064,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule308LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule308LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule308LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("1"),VarEA:SortInt{},LblsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1064"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1064,10,1064,93)"), UNIQUE'Unds'ID{}("561a55d1556bbd913172db4d0f0be95e723e36cf099448d1b6e41aaa3553cce5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`load8_u_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("1","Int"),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d18a38e8fec6657abffd15787b33c94be2d445ee3cf7bc3417ba72870be8ca3a), contentStartColumn(10), contentStartLine(1061), org.kframework.attributes.Location(Location(1061,10,1061,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule309LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule309LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule309LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("1"),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1061"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1061,10,1061,93)"), UNIQUE'Unds'ID{}("d18a38e8fec6657abffd15787b33c94be2d445ee3cf7bc3417ba72870be8ca3a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`load_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,`#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a0935d1d2ced3cbf2741af1ed2353cfe1ab032629690760e44537a73ff1f951), contentStartColumn(10), contentStartLine(1060), org.kframework.attributes.Location(Location(1060,10,1060,93)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule310LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule310LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule310LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1060"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1060,10,1060,93)"), UNIQUE'Unds'ID{}("3a0935d1d2ced3cbf2741af1ed2353cfe1ab032629690760e44537a73ff1f951")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,`store_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(`#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE),EA,inj{Int,Number}(VAL)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1a83d2a112cad5d2eb00631c4d558ed72da900790c8d79a125ade4e1db86f0f), contentStartColumn(10), contentStartLine(994), org.kframework.attributes.Location(Location(994,10,994,92)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule311LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortIValType{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule311LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblstore'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule311LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("994"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(994,10,994,92)"), UNIQUE'Unds'ID{}("e1a83d2a112cad5d2eb00631c4d558ed72da900790c8d79a125ade4e1db86f0f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(_0,`store16_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("2","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),VAL))))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c3a50897e5f704999d39596fbbe94d468a14a55d76f183f6b6fd6d4871c25d8), contentStartColumn(10), contentStartLine(996), org.kframework.attributes.Location(Location(996,10,996,92)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule312LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule312LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblstore16'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule312LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("2"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("2"),VarVAL:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("996"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(996,10,996,92)"), UNIQUE'Unds'ID{}("7c3a50897e5f704999d39596fbbe94d468a14a55d76f183f6b6fd6d4871c25d8")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(_0,`store8_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("1","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),VAL))))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c67aa324e8de8ce73bedbc622a926332f955bfae810a7810af5b23137b7e3de7), contentStartColumn(10), contentStartLine(995), org.kframework.attributes.Location(Location(995,10,995,92)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule313LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule313LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblstore8'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule313LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("1"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarVAL:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("995"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(995,10,995,92)"), UNIQUE'Unds'ID{}("c67aa324e8de8ce73bedbc622a926332f955bfae810a7810af5b23137b7e3de7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(`i64_WASM-DATA_IValType`(.KList),`store32_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("4","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("4","Int"),VAL))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0d26b1d05803312cb7edfdaf202f5f8400d24d4766f03ab5baa7a5254cfd037c), contentStartColumn(10), contentStartLine(997), org.kframework.attributes.Location(Location(997,10,997,92)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule314LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule314LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Lblstore32'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule314LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("4"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("4"),VarVAL:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("997"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(997,10,997,92)"), UNIQUE'Unds'ID{}("0d26b1d05803312cb7edfdaf202f5f8400d24d4766f03ab5baa7a5254cfd037c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.const__WASM_PlainInstr_FValType_Number`(FTYPE,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{FVal,KItem}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4b01f0991d10ab4f5c4fbf1c2bdc8045d8d05fa04256d555473e3a09483e0891), contentStartColumn(10), contentStartLine(212), org.kframework.attributes.Location(Location(212,10,212,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule315LHS{}(SortGeneratedCounterCell{},SortK{},SortFValType{},SortNumber{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule315LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarVAL:SortNumber{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule315LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarVAL:SortNumber{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFVal{}, SortKItem{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("212"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,10,212,74)"), UNIQUE'Unds'ID{}("4b01f0991d10ab4f5c4fbf1c2bdc8045d8d05fa04256d555473e3a09483e0891")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.const__WASM_PlainInstr_IValType_WasmInt`(ITYPE,inj{Int,WasmInt}(VAL)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e7c0cea5931b6b3e81e919c5c5c8fc647ca56f8a00bb5840a08f3ccaa54e7935), contentStartColumn(10), contentStartLine(211), org.kframework.attributes.Location(Location(211,10,211,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule316LHS{}(SortGeneratedCounterCell{},SortK{},SortIValType{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule316LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'WasmInt{}(VarITYPE:SortIValType{},inj{SortInt{}, SortWasmInt{}}(VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule316LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("211"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,10,211,74)"), UNIQUE'Unds'ID{}("e7c0cea5931b6b3e81e919c5c5c8fc647ca56f8a00bb5840a08f3ccaa54e7935")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmts,KItem}(`___WASM_Stmts_Stmt_Stmts`(S,SS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(S)~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_=/=K_`(inj{Stmts,KItem}(SS),inj{EmptyStmts,KItem}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(43c83d595cc3972c28e4cb3e491f8ba55bc750f6fdee1484ffbb32dac17e16db), contentStartColumn(19), contentStartLine(161), label(WASM.step), org.kframework.attributes.Location(Location(161,19,161,88)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule317LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortStmts{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule317LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),dotk{}()),kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule317LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [label{}("WASM.step"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("161"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,19,161,88)"), UNIQUE'Unds'ID{}("43c83d595cc3972c28e4cb3e491f8ba55bc750f6fdee1484ffbb32dac17e16db")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmts,KItem}(`___WASM_Stmts_Stmt_Stmts`(S,inj{EmptyStmts,Stmts}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(19cbfdd578b5c766c9ed3d9a22f5c997a3eaddcfa8cae98ca38b2269a3367e45), contentStartColumn(19), contentStartLine(160), org.kframework.attributes.Location(Location(160,19,160,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule318LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule318LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule318LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("160"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,19,160,64)"), UNIQUE'Unds'ID{}("19cbfdd578b5c766c9ed3d9a22f5c997a3eaddcfa8cae98ca38b2269a3367e45")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`allocfunc(_,_,_,_)_WASM_Alloc_OptionalId_TypeUse_LocalDecls_Instrs`(OID,TUSE,LDECLS,INSTRS))~>DotVar2),_18,`<curFrame>`(_6,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_7,_8) #as _29,_19,_20,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_10,`<funcIds>`(IDS),`<funcAddrs>`(ADDRS),`<nextFuncIdx>`(NEXTIDX),_11,_12,_13,_14,_15,_16,_17)),DotVar6)),_21,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`.FuncDefCellMap`(.KList),DotVar4)),`<nextFuncAddr>`(NEXTADDR),_0,_1,_2,_3,_4,_5),_22,_23),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(TUSE))~>DotVar2),_18,_29,_19,_20,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_10,`<funcIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXTIDX)),`<funcAddrs>`(`Map:update`(ADDRS,inj{Int,KItem}(NEXTIDX),inj{Int,KItem}(NEXTADDR))),`<nextFuncIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_11,_12,_13,_14,_15,_16,_17)),DotVar6)),_21,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(NEXTADDR),`<funcDef>`(`<fAddr>`(NEXTADDR),`<fCode>`(INSTRS),`<fType>`(inj{FuncType,Type}(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE))),`<fLocal>`(inj{VecType,Type}(`asLocalType(_)_WASM_VecType_LocalDecls`(LDECLS))),`<fModInst>`(CUR))),DotVar4)),`<nextFuncAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_0,_1,_2,_3,_4,_5),_22,_23),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b065a3d5cd1a4b213deca481a8d7e7a8858195317b880d3601fdebb3e9a68d8), contentStartColumn(10), contentStartLine(683), org.kframework.attributes.Location(Location(683,10,706,18)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule319LHS{}(SortMap{},SortInt{},SortGeneratedCounterCell{},SortK{},SortFuncDefCellMap{},SortModuleInstCellMap{},SortMap{},SortInstrs{},SortLocalDecls{},SortInt{},SortInt{},SortOptionalId{},SortTypeUse{},SortMap{},SortMap{},SortTabsCell{},SortNextTabAddrCell{},SortNextTypeIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortMemsCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{}) : SortGeneratedTopCell{}
  where rule319LHS{}(VarADDRS:SortMap{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortFuncDefCellMap{},VarDotVar6:SortModuleInstCellMap{},VarIDS:SortMap{},VarINSTRS:SortInstrs{},VarLDECLS:SortLocalDecls{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortValstackCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortModuleIdsCell{},Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocfunc'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},VarLDECLS:SortLocalDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'18:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{}),Var'Unds'29:SortCurFrameCell{}),Var'Unds'19:SortModuleRegistryCell{},Var'Unds'20:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'10:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(VarADDRS:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'21:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Stop'FuncDefCellMap{}(),VarDotVar4:SortFuncDefCellMap{})),Lbl'-LT-'nextFuncAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule319LHS{}(VarADDRS:SortMap{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortFuncDefCellMap{},VarDotVar6:SortModuleInstCellMap{},VarIDS:SortMap{},VarINSTRS:SortInstrs{},VarLDECLS:SortLocalDecls{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortValstackCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortModuleIdsCell{},Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Var'Unds'18:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'20:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'10:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'funcAddrs'-GT-'{}(LblMap'Coln'update{}(VarADDRS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'21:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'fCode'-GT-'{}(VarINSTRS:SortInstrs{}),Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),Lbl'-LT-'fLocal'-GT-'{}(inj{SortVecType{}, SortType{}}(LblasLocalType'LParUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls{}(VarLDECLS:SortLocalDecls{}))),Lbl'-LT-'fModInst'-GT-'{}(VarCUR:SortInt{}))),VarDotVar4:SortFuncDefCellMap{})),Lbl'-LT-'nextFuncAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("683"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(683,10,706,18)"), UNIQUE'Unds'ID{}("2b065a3d5cd1a4b213deca481a8d7e7a8858195317b880d3601fdebb3e9a68d8")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`allocglobal(_,_)_WASM_Alloc_OptionalId_GlobalType`(OID,`___WASM_GlobalType_Mut_AValType`(MUT,TYP)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYP,VAL) #as _33,STACK)),`<curFrame>`(_6,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_7,_8) #as _34,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,`<globIds>`(IDS),`<globalAddrs>`(GLOBS),`<nextGlobIdx>`(NEXTIDX))),DotVar6)),_22,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`.GlobalInstCellMap`(.KList),DotVar4)),`<nextGlobAddr>`(NEXTADDR)),_23,_24),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(STACK),_34,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,`<globIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXTIDX)),`<globalAddrs>`(`Map:update`(GLOBS,inj{Int,KItem}(NEXTIDX),inj{Int,KItem}(NEXTADDR))),`<nextGlobIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))))),DotVar6)),_22,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(NEXTADDR),`<globalInst>`(`<gAddr>`(NEXTADDR),`<gValue>`(_33),`<gMut>`(MUT))),DotVar4)),`<nextGlobAddr>`(`_+Int_`(NEXTADDR,#token("1","Int")))),_23,_24),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab00d246ebf07d4154a87a0bc44e62a841e9966d1e1771a2a18be38ff7699a42), contentStartColumn(10), contentStartLine(478), org.kframework.attributes.Location(Location(478,10,498,20)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule320LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortGlobalInstCellMap{},SortModuleInstCellMap{},SortMap{},SortMap{},SortMut{},SortInt{},SortInt{},SortOptionalId{},SortValStack{},SortAValType{},SortNumber{},SortFuncsCell{},SortNextFuncAddrCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortTabsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortVal{},SortCurFrameCell{},SortMemsCell{},SortNextMemAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{}) : SortGeneratedTopCell{}
  where rule320LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarGLOBS:SortMap{},VarIDS:SortMap{},VarMUT:SortMut{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarSTACK:SortValStack{},VarTYP:SortAValType{},VarVAL:SortNumber{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortVal{},Var'Unds'34:SortCurFrameCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(VarMUT:SortMut{},VarTYP:SortAValType{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYP:SortAValType{},VarVAL:SortNumber{}),Var'Unds'33:SortVal{}),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{}),Var'Unds'34:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(VarGLOBS:SortMap{}),Lbl'-LT-'nextGlobIdx'-GT-'{}(VarNEXTIDX:SortInt{}))),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Stop'GlobalInstCellMap{}(),VarDotVar4:SortGlobalInstCellMap{})),Lbl'-LT-'nextGlobAddr'-GT-'{}(VarNEXTADDR:SortInt{})),Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule320LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarGLOBS:SortMap{},VarIDS:SortMap{},VarMUT:SortMut{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarSTACK:SortValStack{},VarTYP:SortAValType{},VarVAL:SortNumber{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortVal{},Var'Unds'34:SortCurFrameCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'34:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'globalAddrs'-GT-'{}(LblMap'Coln'update{}(VarGLOBS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Lbl'-LT-'nextGlobIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))))),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Var'Unds'33:SortVal{}),Lbl'-LT-'gMut'-GT-'{}(VarMUT:SortMut{}))),VarDotVar4:SortGlobalInstCellMap{})),Lbl'-LT-'nextGlobAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("478"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(478,10,498,20)"), UNIQUE'Unds'ID{}("ab00d246ebf07d4154a87a0bc44e62a841e9966d1e1771a2a18be38ff7699a42")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`allocmemory(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(ID,MIN,MAX))~>DotVar2),_21,`<curFrame>`(_6,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_7,_8) #as _32,_22,_23,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,_16,_17,`<memIds>`(IDS),`<memAddrs>`(`.Map`(.KList)),_18,_19,_20)),DotVar6)),_24,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`.MemInstCellMap`(.KList),DotVar4)),`<nextMemAddr>`(NEXTADDR),_4,_5),_25,_26),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_21,_32,_22,_23,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,_16,_17,`<memIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,#token("0","Int"))),`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(NEXTADDR))),_18,_19,_20)),DotVar6)),_24,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(NEXTADDR),`<memInst>`(`<mAddr>`(NEXTADDR),`<mmax>`(MAX),`<msize>`(MIN),initMdataCell(.KList))),DotVar4)),`<nextMemAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_4,_5),_25,_26),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29f696f93e789e2744f0f5bac10a9dd6b1403ddd5de6586d35451d1c428b7940), contentStartColumn(10), contentStartLine(920), org.kframework.attributes.Location(Location(920,10,939,17)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule321LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortModuleInstCellMap{},SortOptionalId{},SortMap{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortTabsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{}) : SortGeneratedTopCell{}
  where rule321LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarID:SortOptionalId{},VarMIN:SortInt{},VarMAX:SortOptionalInt{})),VarDotVar2:SortK{})),Var'Unds'21:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{}),Var'Unds'32:SortCurFrameCell{}),Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'20:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'24:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Stop'MemInstCellMap{}(),VarDotVar4:SortMemInstCellMap{})),Lbl'-LT-'nextMemAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule321LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'21:SortValstackCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'20:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'24:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarMIN:SortInt{}),LblinitMdataCell{}())),VarDotVar4:SortMemInstCellMap{})),Lbl'-LT-'nextMemAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("920"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(920,10,939,17)"), UNIQUE'Unds'ID{}("29f696f93e789e2744f0f5bac10a9dd6b1403ddd5de6586d35451d1c428b7940")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`alloctable(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(ID,MIN,MAX))~>DotVar2),_21,`<curFrame>`(_6,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_7,_8) #as _32,_22,_23,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,`<tabIds>`(IDS),`<tabAddrs>`(`.Map`(.KList)),_16,_17,_18,_19,_20)),DotVar6)),_24,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`.TabInstCellMap`(.KList),DotVar4)),`<nextTabAddr>`(NEXTADDR),_2,_3,_4,_5),_25,_26),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_21,_32,_22,_23,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,`<tabIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,#token("0","Int"))),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(NEXTADDR))),_16,_17,_18,_19,_20)),DotVar6)),_24,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(NEXTADDR),`<tabInst>`(`<tAddr>`(NEXTADDR),`<tmax>`(MAX),`<tsize>`(MIN),`<tdata>`(`.Map`(.KList)))),DotVar4)),`<nextTabAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_2,_3,_4,_5),_25,_26),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83e6d2953602a35bdbd87110f63cad93b16b8cea9d734b3abe6bd65693d7d478), contentStartColumn(10), contentStartLine(874), org.kframework.attributes.Location(Location(874,10,893,17)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule322LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortTabInstCellMap{},SortModuleInstCellMap{},SortOptionalId{},SortMap{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortMemsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextMemAddrCell{},SortCurFrameCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{}) : SortGeneratedTopCell{}
  where rule322LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortMemAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarID:SortOptionalId{},VarMIN:SortInt{},VarMAX:SortOptionalInt{})),VarDotVar2:SortK{})),Var'Unds'21:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{}),Var'Unds'32:SortCurFrameCell{}),Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortMemAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'20:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'24:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Stop'TabInstCellMap{}(),VarDotVar4:SortTabInstCellMap{})),Lbl'-LT-'nextTabAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule322LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortMemAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'21:SortValstackCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortMemAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'20:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'24:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'tmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'tsize'-GT-'{}(VarMIN:SortInt{}),Lbl'-LT-'tdata'-GT-'{}(Lbl'Stop'Map{}()))),VarDotVar4:SortTabInstCellMap{})),Lbl'-LT-'nextTabAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("874"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(874,10,893,17)"), UNIQUE'Unds'ID{}("83e6d2953602a35bdbd87110f63cad93b16b8cea9d734b3abe6bd65693d7d478")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Alloc,KItem}(`alloctype(_,_)_WASM_Alloc_OptionalId_TypeDecls`(ID,TDECLS))~>DotVar2),_14,`<curFrame>`(_0,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_1,_2) #as _26,_15,_16,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,`<typeIds>`(IDS),`<types>`(TYPES),`<nextTypeIdx>`(NEXTIDX),_4,_5,_6,_7,_8,_9,_10,_11,_12,_13)),DotVar4)),_17,_18,_19,_20),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_14,_26,_15,_16,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,`<typeIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,NEXTIDX)),`<types>`(`Map:update`(TYPES,inj{Int,KItem}(NEXTIDX),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))))),`<nextTypeIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_4,_5,_6,_7,_8,_9,_10,_11,_12,_13)),DotVar4)),_17,_18,_19,_20),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de7a4d8446c588af2fe171bd0c678da21bc8204a14a556ba0af77088f6167b06), contentStartColumn(10), contentStartLine(604), org.kframework.attributes.Location(Location(604,10,612,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule323LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortOptionalId{},SortMap{},SortInt{},SortTypeDecls{},SortMap{},SortLocalsCell{},SortLabelDepthCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortLabelIdsCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortExportsCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{}) : SortGeneratedTopCell{}
  where rule323LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarNEXTIDX:SortInt{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemAddrsCell{},Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{},Var'Unds'14:SortValstackCell{},Var'Unds'15:SortModuleRegistryCell{},Var'Unds'16:SortModuleIdsCell{},Var'Unds'17:SortNextModuleIdxCell{},Var'Unds'18:SortMainStoreCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortNextFreshIdCell{},Var'Unds'26:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'4:SortFuncIdsCell{},Var'Unds'5:SortFuncAddrsCell{},Var'Unds'6:SortNextFuncIdxCell{},Var'Unds'7:SortTabIdsCell{},Var'Unds'8:SortTabAddrsCell{},Var'Unds'9:SortMemIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'TypeDecls{}(VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{})),VarDotVar2:SortK{})),Var'Unds'14:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'26:SortCurFrameCell{}),Var'Unds'15:SortModuleRegistryCell{},Var'Unds'16:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Lbl'-LT-'nextTypeIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'4:SortFuncIdsCell{},Var'Unds'5:SortFuncAddrsCell{},Var'Unds'6:SortNextFuncIdxCell{},Var'Unds'7:SortTabIdsCell{},Var'Unds'8:SortTabAddrsCell{},Var'Unds'9:SortMemIdsCell{},Var'Unds'10:SortMemAddrsCell{},Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'17:SortNextModuleIdxCell{},Var'Unds'18:SortMainStoreCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'20:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule323LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarNEXTIDX:SortInt{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemAddrsCell{},Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{},Var'Unds'14:SortValstackCell{},Var'Unds'15:SortModuleRegistryCell{},Var'Unds'16:SortModuleIdsCell{},Var'Unds'17:SortNextModuleIdxCell{},Var'Unds'18:SortMainStoreCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortNextFreshIdCell{},Var'Unds'26:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'4:SortFuncIdsCell{},Var'Unds'5:SortFuncAddrsCell{},Var'Unds'6:SortNextFuncIdxCell{},Var'Unds'7:SortTabIdsCell{},Var'Unds'8:SortTabAddrsCell{},Var'Unds'9:SortMemIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'14:SortValstackCell{},Var'Unds'26:SortCurFrameCell{},Var'Unds'15:SortModuleRegistryCell{},Var'Unds'16:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'types'-GT-'{}(LblMap'Coln'update{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))))),Lbl'-LT-'nextTypeIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'4:SortFuncIdsCell{},Var'Unds'5:SortFuncAddrsCell{},Var'Unds'6:SortNextFuncIdxCell{},Var'Unds'7:SortTabIdsCell{},Var'Unds'8:SortTabAddrsCell{},Var'Unds'9:SortMemIdsCell{},Var'Unds'10:SortMemAddrsCell{},Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'17:SortNextModuleIdxCell{},Var'Unds'18:SortMainStoreCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'20:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("604"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,10,612,23)"), UNIQUE'Unds'ID{}("de7a4d8446c588af2fe171bd0c678da21bc8204a14a556ba0af77088f6167b06")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`block___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,IS,OID'))~>DotVar2),_2,`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH) #as _16,`<labelIds>`(IDS)),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_2,`<curFrame>`(_0,_1,_16,`<labelIds>`(`Map:update`(IDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH)))),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID')))) ensures #token("true","Bool") [UNIQUE_ID(2d0ef8041623d30185b333ea28b61214f9a75c2d2ee28c965c7cba2c7a774782), contentStartColumn(10), contentStartLine(198), org.kframework.attributes.Location(Location(198,10,202,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule324LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortMap{},SortInstrs{},SortOptionalId{},SortTypeDecls{},SortLocalsCell{},SortCurModIdxCell{},SortLabelDepthCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule324LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},\and{SortLabelDepthCell{}}(Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'16:SortLabelDepthCell{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule324LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Lbl'-LT-'labelIds'-GT-'{}(LblMap'Coln'update{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("198"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,10,202,42)"), UNIQUE'Unds'ID{}("2d0ef8041623d30185b333ea28b61214f9a75c2d2ee28c965c7cba2c7a774782")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_VecType_Instrs`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a554d49daf0d7e577fa30f0fcd42b6214f9bb2fc641e2b820e329037177292c0), contentStartColumn(10), contentStartLine(348), org.kframework.attributes.Location(Location(348,10,348,96)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule325LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule325LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule325LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("348"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,10,348,96)"), UNIQUE'Unds'ID{}("a554d49daf0d7e577fa30f0fcd42b6214f9bb2fc641e2b820e329037177292c0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_VecType_Instrs`(VECTYP,IS))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(VECTYP,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),VALSTACK))~>DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(_0,_1,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8136b44e8c26e37ad24d4ae35d8aaa1448fba0a216d5f67a65baf4dfafc94a7e), contentStartColumn(10), contentStartLine(349), org.kframework.attributes.Location(Location(349,10,351,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule326LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortValStack{},SortVecType{},SortLocalsCell{},SortCurModIdxCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule326LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(VarVECTYP:SortVecType{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule326LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(VarVECTYP:SortVecType{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("349"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,10,351,58)"), UNIQUE'Unds'ID{}("8136b44e8c26e37ad24d4ae35d8aaa1448fba0a216d5f67a65baf4dfafc94a7e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Identifier,Index}(ID)))~>DotVar2),_2,`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),`<labelIds>`(`_Map_`(`_|->_`(inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH')),DotVar4))) #as _16,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(`_-Int_`(`_-Int_`(DEPTH,DEPTH'),#token("1","Int")))))~>DotVar2),_2,_16,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ce8ce7747de5590038c5bed6f0d180be9ca08e159f464741a55ad6abbf925ac3), contentStartColumn(10), contentStartLine(183), org.kframework.attributes.Location(Location(183,10,185,54)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule327LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortMap{},SortIdentifier{},SortLocalsCell{},SortCurModIdxCell{},SortCurFrameCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule327LHS{}(VarDEPTH:SortInt{},VarDEPTH'Apos':SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarID:SortIdentifier{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortCurFrameCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH'Apos':SortInt{})),VarDotVar4:SortMap{}))),Var'Unds'16:SortCurFrameCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule327LHS{}(VarDEPTH:SortInt{},VarDEPTH'Apos':SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarID:SortIdentifier{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortCurFrameCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},VarDEPTH'Apos':SortInt{}),\dv{SortInt{}}("1"))))),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Var'Unds'16:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("183"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,10,185,54)"), UNIQUE'Unds'ID{}("ce8ce7747de5590038c5bed6f0d180be9ca08e159f464741a55ad6abbf925ac3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(N)))~>inj{Label,KItem}(L)~>DotVar2),_3,`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),_2),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(`_-Int_`(N,#token("1","Int")))))~>DotVar2),_3,`<curFrame>`(_0,_1,`<labelDepth>`(`_-Int_`(DEPTH,#token("1","Int"))),_2),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(9636968512c10c1d72be1a9729f517aa9d567ce7c7f7619adda8bb56a7750f0b), contentStartColumn(10), contentStartLine(367), org.kframework.attributes.Location(Location(367,10,369,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule328LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortLabel{},SortInt{},SortLocalsCell{},SortCurModIdxCell{},SortNextFreshIdCell{},SortLabelIdsCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule328LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},VarN:SortInt{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarN:SortInt{}))),kseq{}(inj{SortLabel{}, SortKItem{}}(VarL:SortLabel{}),VarDotVar2:SortK{}))),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule328LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},VarN:SortInt{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("367"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,10,369,24)"), UNIQUE'Unds'ID{}("9636968512c10c1d72be1a9729f517aa9d567ce7c7f7619adda8bb56a7750f0b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int"))))~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`[_]_WASM-DATA_VecType_ValTypes`(TYPES),IS,VALSTACK'))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TYPES),VALSTACK),VALSTACK')),`<curFrame>`(_0,_1,`<labelDepth>`(`_-Int_`(DEPTH,#token("1","Int"))),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf9b593bd938fb1fd9d259d9af24b8f00217701a350f793263e198ab19f790e3), contentStartColumn(10), contentStartLine(364), org.kframework.attributes.Location(Location(364,10,366,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule329LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortValTypes{},SortValStack{},SortValStack{},SortLocalsCell{},SortCurModIdxCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule329LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")))),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTYPES:SortValTypes{}),VarIS:SortInstrs{},VarVALSTACK'Apos':SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule329LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTYPES:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("364"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,10,366,58)"), UNIQUE'Unds'ID{}("cf9b593bd938fb1fd9d259d9af24b8f00217701a350f793263e198ab19f790e3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br_if__WASM_PlainInstr_Index`(IDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8cb34eeb3a1e3ebe124e208542eccb5a6a55a2065dc9839ea6af8872928c37f9), contentStartColumn(10), contentStartLine(376), org.kframework.attributes.Location(Location(376,10,378,28)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule330LHS{}(SortGeneratedCounterCell{},SortK{},SortIndex{},SortAValType{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule330LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule330LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("376"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,10,378,28)"), UNIQUE'Unds'ID{}("8cb34eeb3a1e3ebe124e208542eccb5a6a55a2065dc9839ea6af8872928c37f9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br_if__WASM_PlainInstr_Index`(IDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(IDX))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires `_=/=Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(81400b53d94d6e99af2ca979d7aaf2ce78af6b65d70405b038c5c4c71ab1c2e7), contentStartColumn(10), contentStartLine(373), org.kframework.attributes.Location(Location(373,10,375,28)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule331LHS{}(SortGeneratedCounterCell{},SortK{},SortIndex{},SortAValType{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule331LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule331LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("373"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,10,375,28)"), UNIQUE'Unds'ID{}("81400b53d94d6e99af2ca979d7aaf2ce78af6b65d70405b038c5c4c71ab1c2e7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br_table__WASM_PlainInstr_ElemSegment`(ES))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(`#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(ES,`minInt(_,_)_INT-COMMON_Int_Int_Int`(VAL,`_-Int_`(`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES),#token("1","Int"))))))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e00defd37f9b034bafd2939d4816bbed7fc027ceb07ca31c2498b31b0a318f71), contentStartColumn(10), contentStartLine(382), org.kframework.attributes.Location(Location(382,10,383,68)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule332LHS{}(SortGeneratedCounterCell{},SortK{},SortElemSegment{},SortAValType{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule332LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarES:SortElemSegment{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(VarES:SortElemSegment{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule332LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarES:SortElemSegment{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(VarES:SortElemSegment{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarVAL:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}),\dv{SortInt{}}("1")))))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("382"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,10,383,68)"), UNIQUE'Unds'ID{}("e00defd37f9b034bafd2939d4816bbed7fc027ceb07ca31c2498b31b0a318f71")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),_15,`<curFrame>`(_0,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_1,_2) #as _27,_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,_4,_5,_6,`<funcIds>`(IDS),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(FADDR)),DotVar6)),_7,_8,_9,_10,_11,_12,_13,_14)),DotVar4)) #as _30,_18,_19,_20,_21),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),_15,_27,_16,_17,_30,_18,_19,_20,_21),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8b071136bfb57e741d18f8b19cde036c696148d572f6ef7cbf51bc1d91a41b8f), contentStartColumn(10), contentStartLine(768), org.kframework.attributes.Location(Location(768,10,775,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule333LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortMap{},SortInt{},SortMap{},SortIndex{},SortLocalsCell{},SortLabelDepthCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortLabelIdsCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortExportsCell{},SortModuleInstancesCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{}) : SortGeneratedTopCell{}
  where rule333LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarDotVar6:SortMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{},Var'Unds'15:SortValstackCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Var'Unds'15:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'27:SortCurFrameCell{}),Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})),Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'30:SortModuleInstancesCell{}),Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule333LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarDotVar6:SortMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{},Var'Unds'15:SortValstackCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Var'Unds'15:SortValstackCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("768"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(768,10,775,23)"), UNIQUE'Unds'ID{}("8b071136bfb57e741d18f8b19cde036c696148d572f6ef7cbf51bc1d91a41b8f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call_indirect__WASM_PlainInstr_TypeUse`(TUSE))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),IDX),VALSTACK)),`<curFrame>`(_11,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_12,_13) #as _40,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_14,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_15,_16,_17,_18,_19,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22,_23,_24)),DotVar10)) #as _43,_27,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),_2,`<fType>`(inj{FuncType,Type}(FTYPE)),_3,_4)),DotVar7)),_5,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`_Map_`(`_|->_`(inj{Number,KItem}(IDX),inj{Int,KItem}(FADDR)),DotVar6)))),DotVar4)),_6,_7,_8,_9,_10) #as _45,_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),`<valstack>`(VALSTACK),_40,_25,_26,_43,_27,_45,_28,_29),DotVar0) requires `_==K_`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE))),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(FTYPE))) ensures #token("true","Bool") [UNIQUE_ID(b231026cccfbbe718367d707d47277c390d29d2e10ffbdca11e33a45466b131c), contentStartColumn(10), contentStartLine(781), org.kframework.attributes.Location(Location(781,10,801,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule334LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortModuleInstCellMap{},SortK{},SortTabInstCellMap{},SortMap{},SortFuncDefCellMap{},SortInt{},SortFuncType{},SortNumber{},SortTypeUse{},SortMap{},SortMap{},SortValStack{},SortTmaxCell{},SortTsizeCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFCodeCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortFLocalCell{},SortFModInstCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{}) : SortGeneratedTopCell{}
  where rule334LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortModuleInstCellMap{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortMap{},VarDotVar7:SortFuncDefCellMap{},VarFADDR:SortInt{},VarFTYPE:SortFuncType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(VarFTYPE:SortFuncType{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'11:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{}),Var'Unds'40:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'14:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{})),VarDotVar10:SortModuleInstCellMap{})),Var'Unds'43:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Var'Unds'2:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarFTYPE:SortFuncType{})),Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{})),VarDotVar7:SortFuncDefCellMap{})),Var'Unds'5:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'45:SortMainStoreCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule334LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortModuleInstCellMap{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortMap{},VarDotVar7:SortFuncDefCellMap{},VarFADDR:SortInt{},VarFTYPE:SortFuncType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'40:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("781"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(781,10,801,90)"), UNIQUE'Unds'ID{}("b231026cccfbbe718367d707d47277c390d29d2e10ffbdca11e33a45466b131c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call_indirect__WASM_PlainInstr_TypeUse`(TUSE))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),IDX),VALSTACK)),`<curFrame>`(_11,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_12,_13) #as _40,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_14,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_15,_16,_17,_18,_19,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22,_23,_24)),DotVar10)) #as _43,_27,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),_2,`<fType>`(inj{FuncType,Type}(FTYPE)),_3,_4)),DotVar7)),_5,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`_Map_`(`_|->_`(inj{Number,KItem}(IDX),inj{Int,KItem}(FADDR)),DotVar6)))),DotVar4)),_6,_7,_8,_9,_10) #as _45,_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),`<valstack>`(VALSTACK),_40,_25,_26,_43,_27,_45,_28,_29),DotVar0) requires `_=/=K_`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE))),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(FTYPE))) ensures #token("true","Bool") [UNIQUE_ID(133333f4ca7bebbe9d4bd6bb8684d158219fcb981cbc808163bf0f7052361b91), contentStartColumn(10), contentStartLine(803), org.kframework.attributes.Location(Location(803,10,823,91)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule335LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortModuleInstCellMap{},SortK{},SortTabInstCellMap{},SortMap{},SortFuncDefCellMap{},SortInt{},SortFuncType{},SortNumber{},SortTypeUse{},SortMap{},SortMap{},SortValStack{},SortTmaxCell{},SortTsizeCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFCodeCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortFLocalCell{},SortFModInstCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{}) : SortGeneratedTopCell{}
  where rule335LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortModuleInstCellMap{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortMap{},VarDotVar7:SortFuncDefCellMap{},VarFADDR:SortInt{},VarFTYPE:SortFuncType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(VarFTYPE:SortFuncType{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'11:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{}),Var'Unds'40:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'14:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{})),VarDotVar10:SortModuleInstCellMap{})),Var'Unds'43:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Var'Unds'2:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarFTYPE:SortFuncType{})),Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{})),VarDotVar7:SortFuncDefCellMap{})),Var'Unds'5:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'45:SortMainStoreCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule335LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortModuleInstCellMap{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortMap{},VarDotVar7:SortFuncDefCellMap{},VarFADDR:SortInt{},VarFTYPE:SortFuncType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'40:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("803"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(803,10,823,91)"), UNIQUE'Unds'ID{}("133333f4ca7bebbe9d4bd6bb8684d158219fcb981cbc808163bf0f7052361b91")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call_indirect__WASM_PlainInstr_TypeUse`(TUSE))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),IDX),VALSTACK)),`<curFrame>`(_9,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_10,_11) #as _40,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,_19,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22,_23,_24)),DotVar7)) #as _43,_27,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(TDATA))),DotVar4)),_4,_5,_6,_7,_8) #as _45,_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),`<valstack>`(VALSTACK),_40,_25,_26,_43,_27,_45,_28,_29),DotVar0) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Number,KItem}(IDX),TDATA)) ensures #token("true","Bool") [UNIQUE_ID(be7f2c51d8d9ee13f9cd9c008f0dbde1af2adf3ccfbd7f0fc71910161af78188), contentStartColumn(10), contentStartLine(825), org.kframework.attributes.Location(Location(825,10,838,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule336LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortTabInstCellMap{},SortModuleInstCellMap{},SortNumber{},SortMap{},SortTypeUse{},SortValStack{},SortTmaxCell{},SortTsizeCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFuncsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{}) : SortGeneratedTopCell{}
  where rule336LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarIDX:SortNumber{},VarTDATA:SortMap{},VarTUSE:SortTypeUse{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),VarTDATA:SortMap{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'9:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{}),Var'Unds'40:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'43:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(VarTDATA:SortMap{}))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'45:SortMainStoreCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule336LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarIDX:SortNumber{},VarTDATA:SortMap{},VarTUSE:SortTypeUse{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'40:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("825"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(825,10,838,42)"), UNIQUE'Unds'ID{}("be7f2c51d8d9ee13f9cd9c008f0dbde1af2adf3ccfbd7f0fc71910161af78188")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Index_Bytes`(MEMIDX,DSBYTES))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),OFFSET)),STACK)),`<curFrame>`(_9,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_10,_11) #as _39,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memIds>`(IDS),`<memAddrs>`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,MEMIDX)),inj{Int,KItem}(ADDR))),_21,_22,_23)),DotVar7)) #as _42,_26,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,_1,`<mdata>`(DATA))),DotVar4)),_6,_7,_8),_27,_28),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(STACK),_39,_24,_25,_42,_26,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,_1,`<mdata>`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(DATA,OFFSET,`Bytes2Int(_,_,_)_BYTES-HOOKED_Int_Bytes_Endianness_Signedness`(DSBYTES,littleEndianBytes(.KList),unsignedBytes(.KList)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(DSBYTES))))),DotVar4)),_6,_7,_8),_27,_28),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7fb99bb9e0c718667af2996dcd2a701f93ef00aaab424cd9ed45922133237eb0), contentStartColumn(10), contentStartLine(1245), org.kframework.attributes.Location(Location(1245,10,1258,20)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule337LHS{}(SortInt{},SortInt{},SortByteMap{},SortBytes{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortModuleInstCellMap{},SortMap{},SortIndex{},SortInt{},SortValStack{},SortMmaxCell{},SortMsizeCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFuncsCell{},SortTabAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextFuncAddrCell{},SortCurFrameCell{},SortTabsCell{},SortModuleInstancesCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{}) : SortGeneratedTopCell{}
  where rule337LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDSBYTES:SortBytes{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarIDS:SortMap{},VarMEMIDX:SortIndex{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortTabsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(VarMEMIDX:SortIndex{},VarDSBYTES:SortBytes{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarOFFSET:SortInt{})),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'9:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{}),Var'Unds'39:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'20:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarMEMIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'42:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule337LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDSBYTES:SortBytes{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarIDS:SortMap{},VarMEMIDX:SortIndex{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortTabsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'39:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Lbl'-LT-'mdata'-GT-'{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarOFFSET:SortInt{},LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(VarDSBYTES:SortBytes{},LbllittleEndianBytes{}(),LblunsignedBytes{}()),LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(VarDSBYTES:SortBytes{}))))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1245"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,10,1258,20)"), UNIQUE'Unds'ID{}("7fb99bb9e0c718667af2996dcd2a701f93ef00aaab424cd9ed45922133237eb0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`drop_WASM_PlainInstr`(.KList))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(_0,VALSTACK)),_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22fca52dd0655adb5a18acc637e2be02b440cdd915a2877016ce4e6115115bbd), contentStartColumn(10), contentStartLine(298), org.kframework.attributes.Location(Location(298,10,299,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule338LHS{}(SortGeneratedCounterCell{},SortK{},SortValStack{},SortVal{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule338LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortVal{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbldrop'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Var'Unds'0:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule338LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortVal{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("298"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(298,10,299,57)"), UNIQUE'Unds'ID{}("22fca52dd0655adb5a18acc637e2be02b440cdd915a2877016ce4e6115115bbd")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Index_ElemSegment`(TABIDX,ELEMSEGMENT))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),OFFSET)),STACK)),`<curFrame>`(_0,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_1,_2) #as _29,_13,_14,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,_4,_5,_6,`<funcIds>`(FIDS),`<funcAddrs>`(FADDRS),_7,`<tabIds>`(TIDS),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TIDS,TABIDX)),inj{Int,KItem}(ADDR))),_8,_9,_10,_11,_12)),DotVar4)) #as _32,_15,_16,_17,_18),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(ADDR,OFFSET,FADDRS,FIDS,ELEMSEGMENT))~>DotVar2),`<valstack>`(STACK),_29,_13,_14,_32,_15,_16,_17,_18),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cd5eab460e8b9f126e53f096d3576efe49a5a9e9233d86ade2a1dac685cf81f), contentStartColumn(10), contentStartLine(1207), org.kframework.attributes.Location(Location(1207,10,1217,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule339LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortElemSegment{},SortMap{},SortMap{},SortInt{},SortValStack{},SortIndex{},SortMap{},SortLocalsCell{},SortLabelDepthCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortLabelIdsCell{},SortCurFrameCell{},SortExportsCell{},SortModuleInstancesCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortMemAddrsCell{}) : SortGeneratedTopCell{}
  where rule339LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarELEMSEGMENT:SortElemSegment{},VarFADDRS:SortMap{},VarFIDS:SortMap{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},VarTABIDX:SortIndex{},VarTIDS:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'18:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(VarTABIDX:SortIndex{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarOFFSET:SortInt{})),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'29:SortCurFrameCell{}),Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarFIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(VarFADDRS:SortMap{}),Var'Unds'7:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarTIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTIDS:SortMap{},VarTABIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'18:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule339LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarELEMSEGMENT:SortElemSegment{},VarFADDRS:SortMap{},VarFIDS:SortMap{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},VarTABIDX:SortIndex{},VarTIDS:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'18:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(VarADDR:SortInt{},VarOFFSET:SortInt{},VarFADDRS:SortMap{},VarFIDS:SortMap{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'29:SortCurFrameCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'18:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1207"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1207,10,1217,23)"), UNIQUE'Unds'ID{}("9cd5eab460e8b9f126e53f096d3576efe49a5a9e9233d86ade2a1dac685cf81f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Frame,KItem}(`frame_______WASM_Frame_Int_ValTypes_ValStack_Map_Int_Map`(MODIDX',TRANGE,VALSTACK',LOCAL',LABELDEPTH,LABELIDS))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(_0),`<curModIdx>`(_1),`<labelDepth>`(_2),`<labelIds>`(_3)),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TRANGE),VALSTACK),VALSTACK')),`<curFrame>`(`<locals>`(LOCAL'),`<curModIdx>`(inj{Int,OptionalInt}(MODIDX')),`<labelDepth>`(LABELDEPTH),`<labelIds>`(LABELIDS)),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(70eef636c246577829eb6ee71f76a3b91d446dfeb16c5674fd4a6dc226659d24), contentStartColumn(10), contentStartLine(718), org.kframework.attributes.Location(Location(718,10,723,46)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule340LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortMap{},SortMap{},SortInt{},SortValTypes{},SortValStack{},SortValStack{},SortMap{},SortOptionalInt{},SortNextFreshIdCell{},SortInt{},SortMap{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule340LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarLABELDEPTH:SortInt{},VarLABELIDS:SortMap{},VarLOCAL'Apos':SortMap{},VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortMap{},Var'Unds'1:SortOptionalInt{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortInt{},Var'Unds'3:SortMap{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFrame{}, SortKItem{}}(Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK'Apos':SortValStack{},VarLOCAL'Apos':SortMap{},VarLABELDEPTH:SortInt{},VarLABELIDS:SortMap{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Var'Unds'0:SortMap{}),Lbl'-LT-'curModIdx'-GT-'{}(Var'Unds'1:SortOptionalInt{}),Lbl'-LT-'labelDepth'-GT-'{}(Var'Unds'2:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(Var'Unds'3:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule340LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarLABELDEPTH:SortInt{},VarLABELIDS:SortMap{},VarLOCAL'Apos':SortMap{},VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortMap{},Var'Unds'1:SortOptionalInt{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortInt{},Var'Unds'3:SortMap{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTRANGE:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCAL'Apos':SortMap{}),Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX'Apos':SortInt{})),Lbl'-LT-'labelDepth'-GT-'{}(VarLABELDEPTH:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(VarLABELIDS:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("718"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(718,10,723,46)"), UNIQUE'Unds'ID{}("70eef636c246577829eb6ee71f76a3b91d446dfeb16c5674fd4a6dc226659d24")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`global.get__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _33,_22,_23,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<globIds>`(IDS),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(GADDR)),DotVar9)),_21)),DotVar7)) #as _36,_24,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(VALUE),DotVar5)),DotVar4)),_6) #as _38,_25,_26),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),_33,_22,_23,_36,_24,_38,_25,_26),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fee5cd1b8af6b9dbebb5d34a5546f09d0ba55f3f529481cbd84fb0a8116d2f45), contentStartColumn(10), contentStartLine(507), org.kframework.attributes.Location(Location(507,10,520,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule341LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortGlobalInstCellMap{},SortGMutCell{},SortModuleInstCellMap{},SortMap{},SortInt{},SortMap{},SortIndex{},SortValStack{},SortVal{},SortFuncsCell{},SortNextFuncAddrCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortTabsCell{},SortMemAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{}) : SortGeneratedTopCell{}
  where rule341LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar5:SortGMutCell{},VarDotVar7:SortModuleInstCellMap{},VarDotVar9:SortMap{},VarGADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortMemAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'33:SortCurFrameCell{}),Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'20:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarGADDR:SortInt{})),VarDotVar9:SortMap{})),Var'Unds'21:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'36:SortModuleInstancesCell{}),Var'Unds'24:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(VarVALUE:SortVal{}),VarDotVar5:SortGMutCell{})),VarDotVar4:SortGlobalInstCellMap{})),Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'38:SortMainStoreCell{}),Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule341LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar5:SortGMutCell{},VarDotVar7:SortModuleInstCellMap{},VarDotVar9:SortMap{},VarGADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortMemAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'33:SortCurFrameCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("507"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(507,10,520,23)"), UNIQUE'Unds'ID{}("fee5cd1b8af6b9dbebb5d34a5546f09d0ba55f3f529481cbd84fb0a8116d2f45")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`global.set__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),`<curFrame>`(_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _35,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,`<globIds>`(IDS),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(GADDR)),DotVar9)),_22)),DotVar7)) #as _38,_25,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(_0),DotVar5)),DotVar4)),_7),_26,_27),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),_35,_23,_24,_38,_25,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(VALUE),DotVar5)),DotVar4)),_7),_26,_27),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f591e179a8aa0d7bf7b5b28edb4c10c08ee0db39fdcb680c839bbdc69dcdfc6f), contentStartColumn(10), contentStartLine(522), org.kframework.attributes.Location(Location(522,10,535,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule342LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortGlobalInstCellMap{},SortGMutCell{},SortModuleInstCellMap{},SortMap{},SortInt{},SortMap{},SortIndex{},SortValStack{},SortVal{},SortVal{},SortFuncsCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortNextFuncAddrCell{},SortMemIdsCell{},SortMemAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortTabsCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{}) : SortGeneratedTopCell{}
  where rule342LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar5:SortGMutCell{},VarDotVar7:SortModuleInstCellMap{},VarDotVar9:SortMap{},VarGADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortVal{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{},Var'Unds'3:SortTabsCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'8:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'35:SortCurFrameCell{}),Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarGADDR:SortInt{})),VarDotVar9:SortMap{})),Var'Unds'22:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'38:SortModuleInstancesCell{}),Var'Unds'25:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Var'Unds'0:SortVal{}),VarDotVar5:SortGMutCell{})),VarDotVar4:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule342LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar5:SortGMutCell{},VarDotVar7:SortModuleInstCellMap{},VarDotVar9:SortMap{},VarGADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortVal{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{},Var'Unds'3:SortTabsCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'35:SortCurFrameCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'25:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(VarVALUE:SortVal{}),VarDotVar5:SortGMutCell{})),VarDotVar4:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("522"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(522,10,535,23)"), UNIQUE'Unds'ID{}("f591e179a8aa0d7bf7b5b28edb4c10c08ee0db39fdcb680c839bbdc69dcdfc6f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>DotVar2),_23,`<curFrame>`(_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _33,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22)),DotVar7)) #as _36,_26,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),DotVar5)),DotVar4)),_4,_5,_6) #as _38,`<deterministicMemoryGrowth>`(DET) #as _41,_27),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("-1","Int"))))~>DotVar2),_23,_33,_24,_25,_36,_26,_38,_41,_27),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`notBool_`(DET),`notBool_`(`#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(`_+Int_`(SIZE,N),MAX))) ensures #token("true","Bool") [UNIQUE_ID(3b2c83c11de044a99db3d17564158543866fd8178c4b44d8cf19fa1b8dd2f82a), contentStartColumn(10), contentStartLine(1137), org.kframework.attributes.Location(Location(1137,10,1152,56)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule343LHS{}(SortInt{},SortInt{},SortBool{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMdataCell{},SortModuleInstCellMap{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortTabsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextMemAddrCell{},SortDeterministicMemoryGrowthCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{}) : SortGeneratedTopCell{}
  where rule343LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDET:SortBool{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMdataCell{},VarDotVar7:SortModuleInstCellMap{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortDeterministicMemoryGrowthCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(LblnotBool'Unds'{}(VarDET:SortBool{}),LblnotBool'Unds'{}(Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{}),VarMAX:SortOptionalInt{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'33:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'36:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar5:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'38:SortMainStoreCell{}),\and{SortDeterministicMemoryGrowthCell{}}(Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(VarDET:SortBool{}),Var'Unds'41:SortDeterministicMemoryGrowthCell{}),Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule343LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDET:SortBool{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMdataCell{},VarDotVar7:SortModuleInstCellMap{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortDeterministicMemoryGrowthCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),\dv{SortInt{}}("-1")))),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'41:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1137"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,10,1152,56)"), UNIQUE'Unds'ID{}("3b2c83c11de044a99db3d17564158543866fd8178c4b44d8cf19fa1b8dd2f82a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>DotVar2),_23,`<curFrame>`(_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _34,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22)),DotVar7)) #as _37,_26,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),DotVar5)),DotVar4)),_4,_5,_6),_27,_28),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),SIZE))~>DotVar2),_23,_34,_24,_25,_37,_26,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(`_+Int_`(SIZE,N)),DotVar5)),DotVar4)),_4,_5,_6),_27,_28),DotVar0) requires `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(`_+Int_`(SIZE,N),MAX) ensures #token("true","Bool") [UNIQUE_ID(ad6135f51a04c40a5de2ac05c356fdffbc23a19a10c3da4f5017c7642c134057), contentStartColumn(10), contentStartLine(1122), org.kframework.attributes.Location(Location(1122,10,1135,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule344LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMdataCell{},SortModuleInstCellMap{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortTabsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{}) : SortGeneratedTopCell{}
  where rule344LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMdataCell{},VarDotVar7:SortModuleInstCellMap{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{}),VarMAX:SortOptionalInt{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'34:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'37:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar5:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule344LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMdataCell{},VarDotVar7:SortModuleInstCellMap{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarSIZE:SortInt{})),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{})),VarDotVar5:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1122"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1122,10,1135,48)"), UNIQUE'Unds'ID{}("ad6135f51a04c40a5de2ac05c356fdffbc23a19a10c3da4f5017c7642c134057")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDECLS,IS,OID',IS',OID''))~>DotVar2),_2,`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH) #as _16,`<labelIds>`(IDS)),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),_2,`<curFrame>`(_0,_1,_16,`<labelIds>`(`Map:update`(IDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH)))),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires `_andBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID')))),`_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID'')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID''))))) ensures #token("true","Bool") [UNIQUE_ID(217389f442be31e61e85cdce9df4c8e0f7b7597e4f19f7409c5d108a67fe54c5), contentStartColumn(10), contentStartLine(225), org.kframework.attributes.Location(Location(225,10,229,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule345LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortMap{},SortInstrs{},SortInstrs{},SortOptionalId{},SortOptionalId{},SortTypeDecls{},SortLocalsCell{},SortCurModIdxCell{},SortLabelDepthCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule345LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarOID'Apos':SortOptionalId{},VarOID'AposApos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())))),Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}()))))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarIS'Apos':SortInstrs{},VarOID'AposApos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},\and{SortLabelDepthCell{}}(Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'16:SortLabelDepthCell{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule345LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarOID'Apos':SortOptionalId{},VarOID'AposApos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Lbl'-LT-'labelIds'-GT-'{}(LblMap'Coln'update{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("225"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,10,229,67)"), UNIQUE'Unds'ID{}("217389f442be31e61e85cdce9df4c8e0f7b7597e4f19f7409c5d108a67fe54c5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(inj{Identifier,OptionalId}(ID) #as _14,TDECLS,IS,OID''))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDECLS,IS,_14,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),_14))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID'')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID'')))) ensures #token("true","Bool") [UNIQUE_ID(395543420eea8b556db938faeaffc5778722a26b485b6738980b425faaf0b9d3), contentStartColumn(10), contentStartLine(221), org.kframework.attributes.Location(Location(221,10,223,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule346LHS{}(SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortInstrs{},SortOptionalId{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortOptionalId{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule346LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarOID'AposApos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'14:SortOptionalId{}),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'AposApos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule346LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarOID'AposApos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'14:SortOptionalId{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),Var'Unds'14:SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("221"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,10,223,43)"), UNIQUE'Unds'ID{}("395543420eea8b556db938faeaffc5778722a26b485b6738980b425faaf0b9d3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`_WASM-DATA_OptionalId`(.KList),TDECLS,IS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de6be851615d5b5ca044d5b4f00c72825b70dc138008fe1ae6f00d930b92117a), contentStartColumn(10), contentStartLine(219), org.kframework.attributes.Location(Location(219,10,219,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule347LHS{}(SortGeneratedCounterCell{},SortK{},SortInstrs{},SortTypeDecls{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule347LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule347LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("219"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(219,10,219,82)"), UNIQUE'Unds'ID{}("de6be851615d5b5ca044d5b4f00c72825b70dc138008fe1ae6f00d930b92117a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),VAL)),VALSTACK)),`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),VALSTACK))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires `_=/=Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e4104f24e0b065b29be42f57a03c4ae3f8f32541f9266bf792bb0232608b2739), contentStartColumn(10), contentStartLine(391), org.kframework.attributes.Location(Location(391,10,394,28)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule348LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortInstrs{},SortTypeDecls{},SortInt{},SortValStack{},SortLocalsCell{},SortCurModIdxCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule348LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule348LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("391"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,10,394,28)"), UNIQUE'Unds'ID{}("e4104f24e0b065b29be42f57a03c4ae3f8f32541f9266bf792bb0232608b2739")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),VAL)),VALSTACK)),`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS')~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),VALSTACK))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_2),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(5bc9edb9ec3a8e688c67f5dee6f3f907ceb804f08f62b7a92ec450d09d86c003), contentStartColumn(10), contentStartLine(396), org.kframework.attributes.Location(Location(396,10,399,27)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule349LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortInstrs{},SortInstrs{},SortTypeDecls{},SortInt{},SortValStack{},SortLocalsCell{},SortCurModIdxCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule349LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule349LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS'Apos':SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortLabelIdsCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("396"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(396,10,399,27)"), UNIQUE'Unds'ID{}("5bc9edb9ec3a8e688c67f5dee6f3f907ceb804f08f62b7a92ec450d09d86c003")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_local___WASM_Instr_Int_Val`(INDEX,VALUE))~>DotVar2),_3,`<curFrame>`(`<locals>`(LOCALS),_0,_1,_2),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_3,`<curFrame>`(`<locals>`(`Map:update`(LOCALS,inj{Int,KItem}(INDEX),inj{Val,KItem}(VALUE))),_0,_1,_2),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1324dfff0346826a828bfcd46aae2fdba22ea4aba6ee89659a03927e22989410), contentStartColumn(10), contentStartLine(420), org.kframework.attributes.Location(Location(420,10,421,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule350LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortMap{},SortVal{},SortCurModIdxCell{},SortLabelDepthCell{},SortNextFreshIdCell{},SortLabelIdsCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule350LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINDEX:SortInt{},VarLOCALS:SortMap{},VarVALUE:SortVal{},Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarINDEX:SortInt{},VarVALUE:SortVal{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCALS:SortMap{}),Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule350LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINDEX:SortInt{},VarLOCALS:SortMap{},VarVALUE:SortVal{},Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(LblMap'Coln'update{}(VarLOCALS:SortMap{},inj{SortInt{}, SortKItem{}}(VarINDEX:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{}))),Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("420"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(420,10,421,64)"), UNIQUE'Unds'ID{}("1324dfff0346826a828bfcd46aae2fdba22ea4aba6ee89659a03927e22989410")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_locals__WASM_Instr_ValStack`(VALUES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(#token("0","Int"),VALUES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(33871f7b9f0108809da60e8976e537627d4f9734d2aa045b8305f5fd4e78dc10), contentStartColumn(10), contentStartLine(423), org.kframework.attributes.Location(Location(423,10,423,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule351LHS{}(SortGeneratedCounterCell{},SortK{},SortValStack{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule351LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALUES:SortValStack{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(VarVALUES:SortValStack{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule351LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALUES:SortValStack{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(\dv{SortInt{}}("0"),VarVALUES:SortValStack{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("423"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(423,10,423,66)"), UNIQUE'Unds'ID{}("33871f7b9f0108809da60e8976e537627d4f9734d2aa045b8305f5fd4e78dc10")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`[_]_WASM-DATA_VecType_ValTypes`(TYPES),_0,VALSTACK'))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_1,_2,`<labelDepth>`(DEPTH),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TYPES),VALSTACK),VALSTACK')),`<curFrame>`(_1,_2,`<labelDepth>`(`_-Int_`(DEPTH,#token("1","Int"))),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6399aeab94d710647df23ab6ae3f6ea7c1185151a58f9d83d2a39b6f9c8abe9f), contentStartColumn(10), contentStartLine(341), org.kframework.attributes.Location(Location(341,10,343,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule352LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortValTypes{},SortValStack{},SortValStack{},SortInstrs{},SortLocalsCell{},SortNextFreshIdCell{},SortCurModIdxCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule352LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortLocalsCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortCurModIdxCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTYPES:SortValTypes{}),Var'Unds'0:SortInstrs{},VarVALSTACK'Apos':SortValStack{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule352LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortLocalsCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortCurModIdxCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTYPES:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("341"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,10,343,58)"), UNIQUE'Unds'ID{}("6399aeab94d710647df23ab6ae3f6ea7c1185151a58f9d83d2a39b6f9c8abe9f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,WIDTH,EA,SIGN))~>DotVar2),_23,`<curFrame>`(_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _34,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22)),DotVar7)) #as _37,_26,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(DATA))),DotVar4)),_4,_5,_6) #as _39,_27,_28),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==K_`(inj{Signedness,KItem}(SIGN),inj{Signedness,KItem}(signedBytes(.KList))),`#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(DATA,EA,WIDTH)),`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(DATA,EA,WIDTH))))~>DotVar2),_23,_34,_24,_25,_37,_26,_39,_27,_28),DotVar0) requires `_<=Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(26b899b6a6946c8435175c6645c5fa76f027a041e5123c7d67a6416ef157fc38), contentStartColumn(10), contentStartLine(1021), org.kframework.attributes.Location(Location(1021,10,1040,61)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule353LHS{}(SortInt{},SortInt{},SortByteMap{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMmaxCell{},SortModuleInstCellMap{},SortInt{},SortIValType{},SortSignedness{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortTabsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{}) : SortGeneratedTopCell{}
  where rule353LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMmaxCell{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarITYPE:SortIValType{},VarSIGN:SortSignedness{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'39:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},VarSIGN:SortSignedness{})),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'34:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'37:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'39:SortMainStoreCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule353LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMmaxCell{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarITYPE:SortIValType{},VarSIGN:SortSignedness{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'39:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortSignedness{}, SortKItem{}}(VarSIGN:SortSignedness{}),dotk{}()),kseq{}(inj{SortSignedness{}, SortKItem{}}(LblsignedBytes{}()),dotk{}())),Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarEA:SortInt{},VarWIDTH:SortInt{})),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarEA:SortInt{},VarWIDTH:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'39:SortMainStoreCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1021"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1021,10,1040,61)"), UNIQUE'Unds'ID{}("26b899b6a6946c8435175c6645c5fa76f027a041e5123c7d67a6416ef157fc38")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_0,WIDTH,EA,_1))~>DotVar2),_27,`<curFrame>`(_11,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_12,_13) #as _38,_28,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_24,_25,_26)),DotVar7)) #as _41,_30,`<mainStore>`(_4,_5,_6,_7,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_2,`<msize>`(SIZE),_3)),DotVar4)),_8,_9,_10) #as _43,_31,_32),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_27,_38,_28,_29,_41,_30,_43,_31,_32),DotVar0) requires `_>Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(fce1af34f753265549dddb322850fb514b67fb2b25909d8d2b1df0f51c9e7b63), contentStartColumn(10), contentStartLine(1042), org.kframework.attributes.Location(Location(1042,10,1054,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule354LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortModuleInstCellMap{},SortInt{},SortInt{},SortInt{},SortIValType{},SortSignedness{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortMmaxCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortMdataCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortFuncsCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextFuncAddrCell{},SortTabsCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{}) : SortGeneratedTopCell{}
  where rule354LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortSignedness{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortTypeIdsCell{},Var'Unds'16:SortTypesCell{},Var'Unds'17:SortNextTypeIdxCell{},Var'Unds'18:SortFuncIdsCell{},Var'Unds'19:SortFuncAddrsCell{},Var'Unds'2:SortMmaxCell{},Var'Unds'20:SortNextFuncIdxCell{},Var'Unds'21:SortTabIdsCell{},Var'Unds'22:SortTabAddrsCell{},Var'Unds'23:SortMemIdsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortValstackCell{},Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortMdataCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortFuncsCell{},Var'Unds'41:SortModuleInstancesCell{},Var'Unds'43:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'0:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},Var'Unds'1:SortSignedness{})),VarDotVar2:SortK{})),Var'Unds'27:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'11:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{}),Var'Unds'38:SortCurFrameCell{}),Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'14:SortExportsCell{},Var'Unds'15:SortTypeIdsCell{},Var'Unds'16:SortTypesCell{},Var'Unds'17:SortNextTypeIdxCell{},Var'Unds'18:SortFuncIdsCell{},Var'Unds'19:SortFuncAddrsCell{},Var'Unds'20:SortNextFuncIdxCell{},Var'Unds'21:SortTabIdsCell{},Var'Unds'22:SortTabAddrsCell{},Var'Unds'23:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'41:SortModuleInstancesCell{}),Var'Unds'30:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'4:SortFuncsCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'2:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'3:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'43:SortMainStoreCell{}),Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule354LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortSignedness{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortTypeIdsCell{},Var'Unds'16:SortTypesCell{},Var'Unds'17:SortNextTypeIdxCell{},Var'Unds'18:SortFuncIdsCell{},Var'Unds'19:SortFuncAddrsCell{},Var'Unds'2:SortMmaxCell{},Var'Unds'20:SortNextFuncIdxCell{},Var'Unds'21:SortTabIdsCell{},Var'Unds'22:SortTabAddrsCell{},Var'Unds'23:SortMemIdsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortValstackCell{},Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortMdataCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortFuncsCell{},Var'Unds'41:SortModuleInstancesCell{},Var'Unds'43:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'27:SortValstackCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'41:SortModuleInstancesCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'43:SortMainStoreCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1042"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1042,10,1054,60)"), UNIQUE'Unds'ID{}("fce1af34f753265549dddb322850fb514b67fb2b25909d8d2b1df0f51c9e7b63")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(I)))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),inj{Val,KItem}(VALUE)),DotVar4)),_0,_1,_2) #as _17,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),_17,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0c0d49c77067383bc502a0056d1e229cb103b09fbfeafbe02a492f92bb7434c), contentStartColumn(10), contentStartLine(440), org.kframework.attributes.Location(Location(440,10,442,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule355LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortInt{},SortValStack{},SortVal{},SortCurModIdxCell{},SortLabelDepthCell{},SortCurFrameCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule355LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'17:SortCurFrameCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),VarDotVar4:SortMap{})),Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'17:SortCurFrameCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule355LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'17:SortCurFrameCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'17:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("440"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,10,442,48)"), UNIQUE'Unds'ID{}("c0c0d49c77067383bc502a0056d1e229cb103b09fbfeafbe02a492f92bb7434c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(I)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),_0),DotVar4)),_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),inj{Val,KItem}(VALUE)),DotVar4)),_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c119e61723a430d124d4c1bd1ea9f8fa5dfc2a5a392bfb13833dec6ed69ea0b0), contentStartColumn(10), contentStartLine(444), org.kframework.attributes.Location(Location(444,10,446,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule356LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortInt{},SortValStack{},SortVal{},SortKItem{},SortCurModIdxCell{},SortNextFreshIdCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule356LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule356LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),VarDotVar4:SortMap{})),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("444"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(444,10,446,55)"), UNIQUE'Unds'ID{}("c119e61723a430d124d4c1bd1ea9f8fa5dfc2a5a392bfb13833dec6ed69ea0b0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`local.tee__WASM_PlainInstr_Index`(inj{Int,Index}(I)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)) #as _17,`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),_0),DotVar4)),_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_17,`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),inj{Val,KItem}(VALUE)),DotVar4)),_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8979ec6b487bceffefe1c3847514a6313372bed3446bc56dc22fc3ccf2416ef), contentStartColumn(10), contentStartLine(448), org.kframework.attributes.Location(Location(448,10,450,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule357LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortInt{},SortValStack{},SortVal{},SortKItem{},SortCurModIdxCell{},SortNextFreshIdCell{},SortValstackCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{}) : SortGeneratedTopCell{}
  where rule357LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'17:SortValstackCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))),VarDotVar2:SortK{})),\and{SortValstackCell{}}(Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'17:SortValstackCell{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule357LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'17:SortValstackCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'17:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),VarDotVar4:SortMap{})),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("448"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(448,10,450,55)"), UNIQUE'Unds'ID{}("e8979ec6b487bceffefe1c3847514a6313372bed3446bc56dc22fc3ccf2416ef")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`loop___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,IS,OID'))~>DotVar2),_2,`<curFrame>`(_0,_1,`<labelDepth>`(DEPTH) #as _16,`<labelIds>`(IDS)),_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`loop__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_2,`<curFrame>`(_0,_1,_16,`<labelIds>`(`Map:update`(IDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH)))),_3,_4,_5,_6,_7,_8,_9),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID')))) ensures #token("true","Bool") [UNIQUE_ID(4908452ad1d920e7a5364f133058b8b0a80678dc60f6039baede3a821f912282), contentStartColumn(10), contentStartLine(206), org.kframework.attributes.Location(Location(206,10,210,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule358LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortIdentifier{},SortMap{},SortInstrs{},SortOptionalId{},SortTypeDecls{},SortLocalsCell{},SortCurModIdxCell{},SortLabelDepthCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule358LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},\and{SortLabelDepthCell{}}(Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'16:SortLabelDepthCell{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule358LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'2:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Lbl'-LT-'labelIds'-GT-'{}(LblMap'Coln'update{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("206"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,10,210,42)"), UNIQUE'Unds'ID{}("4908452ad1d920e7a5364f133058b8b0a80678dc60f6039baede3a821f912282")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`memory.grow_WASM_PlainInstr`(.KList))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),N)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7186f1c8d19e142f7ceddc4478c7e7f6af82d962ca86f4aca04abe7d29dabcba), contentStartColumn(10), contentStartLine(1119), org.kframework.attributes.Location(Location(1119,10,1120,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule359LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule359LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarN:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarN:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule359LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarN:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1119"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,10,1120,65)"), UNIQUE'Unds'ID{}("7186f1c8d19e142f7ceddc4478c7e7f6af82d962ca86f4aca04abe7d29dabcba")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`memory.size_WASM_PlainInstr`(.KList))~>DotVar2),_25,`<curFrame>`(_9,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_10,_11) #as _36,_26,_27,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_22,_23,_24)),DotVar7)) #as _39,_28,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,`<msize>`(SIZE),_1)),DotVar4)),_6,_7,_8) #as _41,_29,_30),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),SIZE))~>DotVar2),_25,_36,_26,_27,_39,_28,_41,_29,_30),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e51034f8dfa4d6625f13b4b3982690028888516ec3adc5a3e50b62f2bab2edbb), contentStartColumn(10), contentStartLine(1093), org.kframework.attributes.Location(Location(1093,10,1104,20)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule360LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortModuleInstCellMap{},SortInt{},SortMmaxCell{},SortMdataCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFuncsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFuncAddrCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortTabsCell{},SortMainStoreCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{}) : SortGeneratedTopCell{}
  where rule360LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarSIZE:SortInt{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMdataCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortValstackCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'30:SortNextFreshIdCell{},Var'Unds'36:SortCurFrameCell{},Var'Unds'39:SortModuleInstancesCell{},Var'Unds'4:SortTabsCell{},Var'Unds'41:SortMainStoreCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Var'Unds'25:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'9:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{}),Var'Unds'36:SortCurFrameCell{}),Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'39:SortModuleInstancesCell{}),Var'Unds'28:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'1:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'41:SortMainStoreCell{}),Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule360LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarSIZE:SortInt{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMdataCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortValstackCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'30:SortNextFreshIdCell{},Var'Unds'36:SortCurFrameCell{},Var'Unds'39:SortModuleInstancesCell{},Var'Unds'4:SortTabsCell{},Var'Unds'41:SortMainStoreCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarSIZE:SortInt{})),VarDotVar2:SortK{})),Var'Unds'25:SortValstackCell{},Var'Unds'36:SortCurFrameCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'39:SortModuleInstancesCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'41:SortMainStoreCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1093"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1093,10,1104,20)"), UNIQUE'Unds'ID{}("e51034f8dfa4d6625f13b4b3982690028888516ec3adc5a3e50b62f2bab2edbb")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`nop_WASM_PlainInstr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d97f6afcd42a4e8086747d49253fc3a2083d5c19e4fde92010d33a81282dfa72), contentStartColumn(10), contentStartLine(318), org.kframework.attributes.Location(Location(318,10,318,31)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule361LHS{}(SortGeneratedCounterCell{},SortK{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule361LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblnop'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule361LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("318"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,10,318,31)"), UNIQUE'Unds'ID{}("d97f6afcd42a4e8086747d49253fc3a2083d5c19e4fde92010d33a81282dfa72")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList))~>``inj{Frame,KItem}(FR) #as _14``~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_14~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98bc8d97fd85df5c2b3045bd8a2d5aecda3ed72571eb919edbcf56adc23109e5), contentStartColumn(10), contentStartLine(758), org.kframework.attributes.Location(Location(758,10,758,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule362LHS{}(SortGeneratedCounterCell{},SortK{},SortFrame{},SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule362LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFR:SortFrame{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),kseq{}(\and{SortKItem{}}(inj{SortFrame{}, SortKItem{}}(VarFR:SortFrame{}),Var'Unds'14:SortKItem{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule362LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFR:SortFrame{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'14:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("758"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(758,10,758,51)"), UNIQUE'Unds'ID{}("98bc8d97fd85df5c2b3045bd8a2d5aecda3ed72571eb919edbcf56adc23109e5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`select_WASM_PlainInstr`(.KList))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),C)),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,V2),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,V1),VALSTACK)))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Number}(`_=/=Int_`(C,#token("0","Int")),V1,V2)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a83f4d90235c5a607e1afc26f4f0bbba229f80deb0cb404cc95efe1088770129), contentStartColumn(10), contentStartLine(303), org.kframework.attributes.Location(Location(303,10,307,21)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule363LHS{}(SortInt{},SortGeneratedCounterCell{},SortK{},SortAValType{},SortNumber{},SortNumber{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule363LHS{}(VarC:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTYPE:SortAValType{},VarV1:SortNumber{},VarV2:SortNumber{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblselect'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarC:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},VarV2:SortNumber{}),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},VarV1:SortNumber{}),VarVALSTACK:SortValStack{})))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule363LHS{}(VarC:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTYPE:SortAValType{},VarV1:SortNumber{},VarV2:SortNumber{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortNumber{}}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarC:SortInt{},\dv{SortInt{}}("0")),VarV1:SortNumber{},VarV2:SortNumber{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("303"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,10,307,21)"), UNIQUE'Unds'ID{}("a83f4d90235c5a607e1afc26f4f0bbba229f80deb0cb404cc95efe1088770129")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(OID,TS,IS,FGS,AS,ES,INIS,S))~>DotVar2),_4,`<curFrame>`(_1,`<curModIdx>`(_0),_2,_3),_5,`<moduleIds>`(IDS),`<moduleInstances>`(`_ModuleInstCellMap_`(`.ModuleInstCellMap`(.KList),DotVar3)),`<nextModuleIdx>`(NEXT),_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Defns,KItem}(TS)~>inj{Defns,KItem}(IS)~>inj{Defns,KItem}(FGS)~>inj{Defns,KItem}(AS)~>inj{Defns,KItem}(ES)~>inj{Defns,KItem}(INIS)~>inj{Defns,KItem}(S)~>DotVar2),_4,`<curFrame>`(_1,`<curModIdx>`(inj{Int,OptionalInt}(NEXT)),_2,_3),_5,`<moduleIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(NEXT),`<moduleInst>`(`<modIdx>`(NEXT),initExportsCell(.KList),initTypeIdsCell(.KList),initTypesCell(.KList),initNextTypeIdxCell(.KList),initFuncIdsCell(.KList),initFuncAddrsCell(.KList),initNextFuncIdxCell(.KList),initTabIdsCell(.KList),initTabAddrsCell(.KList),initMemIdsCell(.KList),initMemAddrsCell(.KList),initGlobIdsCell(.KList),initGlobalAddrsCell(.KList),initNextGlobIdxCell(.KList))),DotVar3)),`<nextModuleIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63ea08b466e1b3964a3504a6965a96142fba0f48aa5dd4211d67697fdb3c7053), contentStartColumn(10), contentStartLine(1494), org.kframework.attributes.Location(Location(1494,10,1509,28)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule364LHS{}(SortDefns{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortDefns{},SortDefns{},SortMap{},SortDefns{},SortDefns{},SortInt{},SortOptionalId{},SortDefns{},SortDefns{},SortOptionalInt{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortValstackCell{},SortModuleRegistryCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule364LHS{}(VarAS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortModuleInstCellMap{},VarES:SortDefns{},VarFGS:SortDefns{},VarIDS:SortMap{},VarINIS:SortDefns{},VarIS:SortDefns{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarS:SortDefns{},VarTS:SortDefns{},Var'Unds'0:SortOptionalInt{},Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortValstackCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarOID:SortOptionalId{},VarTS:SortDefns{},VarIS:SortDefns{},VarFGS:SortDefns{},VarAS:SortDefns{},VarES:SortDefns{},VarINIS:SortDefns{},VarS:SortDefns{})),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(Var'Unds'0:SortOptionalInt{}),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Lbl'-LT-'moduleIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Stop'ModuleInstCellMap{}(),VarDotVar3:SortModuleInstCellMap{})),Lbl'-LT-'nextModuleIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule364LHS{}(VarAS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortModuleInstCellMap{},VarES:SortDefns{},VarFGS:SortDefns{},VarIDS:SortMap{},VarINIS:SortDefns{},VarIS:SortDefns{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarS:SortDefns{},VarTS:SortDefns{},Var'Unds'0:SortOptionalInt{},Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortValstackCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDefns{}, SortKItem{}}(VarTS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarIS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarFGS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarAS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarES:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarINIS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarS:SortDefns{}),VarDotVar2:SortK{})))))))),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarNEXT:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Lbl'-LT-'moduleIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarNEXT:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarNEXT:SortInt{}),LblinitExportsCell{}(),LblinitTypeIdsCell{}(),LblinitTypesCell{}(),LblinitNextTypeIdxCell{}(),LblinitFuncIdsCell{}(),LblinitFuncAddrsCell{}(),LblinitNextFuncIdxCell{}(),LblinitTabIdsCell{}(),LblinitTabAddrsCell{}(),LblinitMemIdsCell{}(),LblinitMemAddrsCell{}(),LblinitGlobIdsCell{}(),LblinitGlobalAddrsCell{}(),LblinitNextGlobIdxCell{}())),VarDotVar3:SortModuleInstCellMap{})),Lbl'-LT-'nextModuleIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1494"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1494,10,1509,28)"), UNIQUE'Unds'ID{}("63ea08b466e1b3964a3504a6965a96142fba0f48aa5dd4211d67697fdb3c7053")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(WIDTH,EA,_0))~>DotVar2),_26,`<curFrame>`(_10,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_11,_12) #as _37,_27,_28,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_23,_24,_25)),DotVar7)) #as _40,_29,`<mainStore>`(_3,_4,_5,_6,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_1,`<msize>`(SIZE),_2)),DotVar4)),_7,_8,_9) #as _42,_30,_31),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_26,_37,_27,_28,_40,_29,_42,_30,_31),DotVar0) requires `_>Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(0baf481453f08a12f11c827ad82916b7bd51f084b9303d19a031f2051f18b165), contentStartColumn(10), contentStartLine(978), org.kframework.attributes.Location(Location(978,10,990,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule365LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortModuleInstCellMap{},SortInt{},SortInt{},SortInt{},SortNumber{},SortMmaxCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortMdataCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortFuncsCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortCurFrameCell{},SortNextFuncAddrCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortTabsCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{}) : SortGeneratedTopCell{}
  where rule365LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortNumber{},Var'Unds'1:SortMmaxCell{},Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{},Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'2:SortMdataCell{},Var'Unds'20:SortTabIdsCell{},Var'Unds'21:SortTabAddrsCell{},Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{},Var'Unds'26:SortValstackCell{},Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},Var'Unds'29:SortNextModuleIdxCell{},Var'Unds'3:SortFuncsCell{},Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{},Var'Unds'37:SortCurFrameCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'40:SortModuleInstancesCell{},Var'Unds'42:SortMainStoreCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(VarWIDTH:SortInt{},VarEA:SortInt{},Var'Unds'0:SortNumber{})),VarDotVar2:SortK{})),Var'Unds'26:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'10:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{}),Var'Unds'37:SortCurFrameCell{}),Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'20:SortTabIdsCell{},Var'Unds'21:SortTabAddrsCell{},Var'Unds'22:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'40:SortModuleInstancesCell{}),Var'Unds'29:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'3:SortFuncsCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'1:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'2:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),Var'Unds'42:SortMainStoreCell{}),Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule365LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortNumber{},Var'Unds'1:SortMmaxCell{},Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{},Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'2:SortMdataCell{},Var'Unds'20:SortTabIdsCell{},Var'Unds'21:SortTabAddrsCell{},Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{},Var'Unds'26:SortValstackCell{},Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},Var'Unds'29:SortNextModuleIdxCell{},Var'Unds'3:SortFuncsCell{},Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{},Var'Unds'37:SortCurFrameCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'40:SortModuleInstancesCell{},Var'Unds'42:SortMainStoreCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'26:SortValstackCell{},Var'Unds'37:SortCurFrameCell{},Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},Var'Unds'40:SortModuleInstancesCell{},Var'Unds'29:SortNextModuleIdxCell{},Var'Unds'42:SortMainStoreCell{},Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("978"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(978,10,990,63)"), UNIQUE'Unds'ID{}("0baf481453f08a12f11c827ad82916b7bd51f084b9303d19a031f2051f18b165")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(WIDTH,EA,inj{Int,Number}(VAL)))~>DotVar2),_23,`<curFrame>`(_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _35,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22)),DotVar7)) #as _38,_26,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(DATA))),DotVar4)),_4,_5,_6),_27,_28),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_23,_35,_24,_25,_38,_26,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(DATA,EA,VAL,WIDTH)))),DotVar4)),_4,_5,_6),_27,_28),DotVar0) requires `_<=Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(96cd5b7abc1087029036c0cd7a58aba721f0629b12ab4c28047f859ef7eab9e8), contentStartColumn(10), contentStartLine(963), org.kframework.attributes.Location(Location(963,10,976,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  alias rule366LHS{}(SortInt{},SortInt{},SortByteMap{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMmaxCell{},SortModuleInstCellMap{},SortInt{},SortInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortExportsCell{},SortTypeIdsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncIdsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortTabsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortLocalsCell{},SortLabelDepthCell{},SortLabelIdsCell{}) : SortGeneratedTopCell{}
  where rule366LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMmaxCell{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(VarWIDTH:SortInt{},VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'23:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'35:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'38:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule366LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMmaxCell{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'23:SortValstackCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarEA:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{})))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("963"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(963,10,976,64)"), UNIQUE'Unds'ID{}("96cd5b7abc1087029036c0cd7a58aba721f0629b12ab4c28047f859ef7eab9e8")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`undefined_WASM-DATA_Val`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f196f6208a4e744d7c2aa3c4be5470bbe5222754731c61ced6799909e53943df), contentStartColumn(10), contentStartLine(189), org.kframework.attributes.Location(Location(189,10,189,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule367LHS{}(SortGeneratedCounterCell{},SortK{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule367LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblundefined'Unds'WASM-DATA'Unds'Val{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule367LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("189"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(189,10,189,40)"), UNIQUE'Unds'ID{}("f196f6208a4e744d7c2aa3c4be5470bbe5222754731c61ced6799909e53943df")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`unreachable_WASM_PlainInstr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2c6200b918fb49e2b1541cdc7e2157e3efb907fec9f729e083688599f828b8b5), contentStartColumn(10), contentStartLine(326), org.kframework.attributes.Location(Location(326,10,326,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule368LHS{}(SortGeneratedCounterCell{},SortK{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextFreshIdCell{}) : SortGeneratedTopCell{}
  where rule368LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblunreachable'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule368LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("326"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,10,326,42)"), UNIQUE'Unds'ID{}("2c6200b918fb49e2b1541cdc7e2157e3efb907fec9f729e083688599f828b8b5")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("-1","Int") #as _0,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(#token("1","Int"),_0,E) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb42fdb8d47684fe0754a59e24241769879512c74964fb4370764b280c2be8df), contentStartColumn(8), contentStartLine(881), org.kframework.attributes.Location(Location(881,8,881,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(\and{SortInt{}}(\dv{SortInt{}}("-1"),Var'Unds'0:SortInt{}),VarE:SortEndianness{},LblsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(\dv{SortInt{}}("1"),Var'Unds'0:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("881"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(881,8,881,67)"), UNIQUE'Unds'ID{}("eb42fdb8d47684fe0754a59e24241769879512c74964fb4370764b280c2be8df")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(I),#token("9","Int")),#token("8","Int")),I,E) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(952b7a87238b66d0a67d8de14089536952ea1301aaf02de206dcb998a414953c), contentStartColumn(8), contentStartLine(877), org.kframework.attributes.Location(Location(877,8,878,22)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},VarE:SortEndianness{},LblsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI:SortInt{}),\dv{SortInt{}}("9")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("877"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(877,8,878,22)"), UNIQUE'Unds'ID{}("952b7a87238b66d0a67d8de14089536952ea1301aaf02de206dcb998a414953c")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(`~Int_`(I)),#token("9","Int")),#token("8","Int")),I,E) requires `_<Int_`(I,#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(fd5609e7b5d53d83c40abbe06159dfe57f85733b7cc65ec7fcd0f875f3d70519), contentStartColumn(8), contentStartLine(879), org.kframework.attributes.Location(Location(879,8,880,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},VarE:SortEndianness{},LblsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(Lbl'Tild'Int'Unds'{}(VarI:SortInt{})),\dv{SortInt{}}("9")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("879"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(879,8,880,23)"), UNIQUE'Unds'ID{}("fd5609e7b5d53d83c40abbe06159dfe57f85733b7cc65ec7fcd0f875f3d70519")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,unsignedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(I),#token("8","Int")),#token("8","Int")),I,E) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2f8606bd48806c67696314387ebef888a62d153f7769fce58aff8c81c2c3fe8f), contentStartColumn(8), contentStartLine(874), org.kframework.attributes.Location(Location(874,8,875,22)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},VarE:SortEndianness{},LblunsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI:SortInt{}),\dv{SortInt{}}("8")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("874"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(874,8,875,22)"), UNIQUE'Unds'ID{}("2f8606bd48806c67696314387ebef888a62d153f7769fce58aff8c81c2c3fe8f")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("0","Int"),_0,_1)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad08d8ce571c0693310ac494b47ac920c1da18996f142d504e0de7d5e1c4d375), contentStartColumn(8), contentStartLine(876), org.kframework.attributes.Location(Location(876,8,876,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(\dv{SortInt{}}("0"),Var'Unds'0:SortEndianness{},Var'Unds'1:SortSignedness{}),
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("876"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(876,8,876,48)"), UNIQUE'Unds'ID{}("ad08d8ce571c0693310ac494b47ac920c1da18996f142d504e0de7d5e1c4d375")]

// rule `Map:lookup`(`Map:update`(MAP,KEY,VAL),KEY)=>VAL requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(62b2ada4bcfda605a44c00fb52dc346f75f57253bcb0b544f4b3450feae2f83a), contentStartColumn(10), contentStartLine(285), org.kframework.attributes.Location(Location(285,10,285,44)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblMap'Coln'lookup{}(LblMap'Coln'update{}(VarMAP:SortMap{},VarKEY:SortKItem{},VarVAL:SortKItem{}),VarKEY:SortKItem{}),
        VarVAL:SortKItem{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("285"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,10,285,44)"), simplification{}(), UNIQUE'Unds'ID{}("62b2ada4bcfda605a44c00fb52dc346f75f57253bcb0b544f4b3450feae2f83a")]

// rule `WasmInt`(VAL)=>inj{Int,WasmInt}(`WasmIntToken2Int(_)_WASM-TEXT_Int_WasmIntToken`(VAL)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d8920ee8503b76e495a294efeb4474a738703cae2f56152dc84bc1c43278672), contentStartColumn(10), contentStartLine(100), org.kframework.attributes.Location(Location(100,10,100,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmInt{},R} (
        LblWasmInt{}(VarVAL:SortWasmIntToken{}),
        inj{SortInt{}, SortWasmInt{}}(LblWasmIntToken2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'WasmIntToken{}(VarVAL:SortWasmIntToken{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("100"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,10,100,49)"), UNIQUE'Unds'ID{}("8d8920ee8503b76e495a294efeb4474a738703cae2f56152dc84bc1c43278672")]

// rule `WasmIntToken2Int(_)_WASM-TEXT_Int_WasmIntToken`(VAL)=>`WasmIntTokenString2Int(_)_WASM-TEXT_Int_String`(`replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(`WasmIntToken2String(_)_WASM-TEXT_String_WasmIntToken`(VAL),#token("\"_\"","String"),#token("\"\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9208ad14fb730a01b8216326b3374f20c6de40f6f2e4f9a5f9d7b695dcc7e020), contentStartColumn(10), contentStartLine(109), org.kframework.attributes.Location(Location(109,10,109,104)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblWasmIntToken2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'WasmIntToken{}(VarVAL:SortWasmIntToken{}),
        LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(LblWasmIntToken2String'LParUndsRParUnds'WASM-TEXT'Unds'String'Unds'WasmIntToken{}(VarVAL:SortWasmIntToken{}),\dv{SortString{}}("_"),\dv{SortString{}}("")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("109"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,10,109,104)"), UNIQUE'Unds'ID{}("9208ad14fb730a01b8216326b3374f20c6de40f6f2e4f9a5f9d7b695dcc7e020")]

// rule `WasmIntTokenString2Int(_)_WASM-TEXT_Int_String`(S)=>`String2Base(_,_)_STRING-COMMON_Int_String_Int`(S,#token("10","Int")) requires `_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,#token("\"0x\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(d21d624464f80a36fac6d1f39e081add665a38e1e9a52317a8a183e9da2d104a), contentStartColumn(10), contentStartLine(107), org.kframework.attributes.Location(Location(107,10,107,124)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(VarS:SortString{}),
        LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("10"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("107"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,10,107,124)"), UNIQUE'Unds'ID{}("d21d624464f80a36fac6d1f39e081add665a38e1e9a52317a8a183e9da2d104a")]

// rule `WasmIntTokenString2Int(_)_WASM-TEXT_Int_String`(S)=>`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(S,#token("\"0x\"","String"),#token("\"\"","String")),#token("16","Int")) requires `_=/=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,#token("\"0x\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(ce88384d148a15ea29d53f514f140a00cfb66cbd9da1afb8bf86a06b77ffc8bd), contentStartColumn(10), contentStartLine(106), org.kframework.attributes.Location(Location(106,10,106,124)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(VarS:SortString{}),
        LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortString{}}("")),\dv{SortInt{}}("16"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("106"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,10,106,124)"), UNIQUE'Unds'ID{}("ce88384d148a15ea29d53f514f140a00cfb66cbd9da1afb8bf86a06b77ffc8bd")]

// rule `_++__WASM-DATA_ValStack_ValStack_ValStack`(`.ValStack_WASM-DATA_ValStack`(.KList),VALSTACK')=>VALSTACK' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5ef453867f222d2110ff708a75f703787532fa68afff4d4de7c457827914a042), contentStartColumn(10), contentStartLine(343), org.kframework.attributes.Location(Location(343,10,343,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),VarVALSTACK'Apos':SortValStack{}),
        VarVALSTACK'Apos':SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("343"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(343,10,343,51)"), UNIQUE'Unds'ID{}("5ef453867f222d2110ff708a75f703787532fa68afff4d4de7c457827914a042")]

// rule `_++__WASM-DATA_ValStack_ValStack_ValStack`(`_:__WASM-DATA_ValStack_Val_ValStack`(SI,VALSTACK),VALSTACK')=>`_:__WASM-DATA_ValStack_Val_ValStack`(SI,`_++__WASM-DATA_ValStack_ValStack_ValStack`(VALSTACK,VALSTACK')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c491853c23a63f91ac7528b55dc76a0e892b8e581f204ae26294c096dcd3d74), contentStartColumn(10), contentStartLine(344), org.kframework.attributes.Location(Location(344,10,344,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarSI:SortVal{},VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{}),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarSI:SortVal{},Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("344"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,10,344,70)"), UNIQUE'Unds'ID{}("8c491853c23a63f91ac7528b55dc76a0e892b8e581f204ae26294c096dcd3d74")]

// rule `_+Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8b4ae4926d8ec7b1d5abaa5fed68fd6c7f3f5a21c76a51231394a2b36fbf995), contentStartColumn(10), contentStartLine(252), org.kframework.attributes.Location(Location(252,10,252,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("252"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(252,10,252,24)"), simplification{}(), UNIQUE'Unds'ID{}("d8b4ae4926d8ec7b1d5abaa5fed68fd6c7f3f5a21c76a51231394a2b36fbf995")]

// rule `_+Int_`(`_+Int_`(X,N),M)=>`_+Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd1f111a70bb9802e01754c9b95e7bbc5e924e2cd3749d93c73a02b7d01377a9), concrete(N, M), contentStartColumn(10), contentStartLine(259), org.kframework.attributes.Location(Location(259,10,259,48)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(X)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarN:SortInt{},VarM:SortInt{}), contentStartLine{}("259"), contentStartColumn{}("10"), symbolic{}(VarX:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(259,10,259,48)"), simplification{}(), UNIQUE'Unds'ID{}("bd1f111a70bb9802e01754c9b95e7bbc5e924e2cd3749d93c73a02b7d01377a9")]

// rule `_+Int_`(#token("0","Int"),X)=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b083c6c9ee76aabbd51c6f717fe0b6dbac93c08809d76f25497f0c0acb2b325), contentStartColumn(10), contentStartLine(253), org.kframework.attributes.Location(Location(253,10,253,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("253"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,10,253,24)"), simplification{}(), UNIQUE'Unds'ID{}("3b083c6c9ee76aabbd51c6f717fe0b6dbac93c08809d76f25497f0c0acb2b325")]

// rule `_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList),VTYPES')=>VTYPES' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d35fa9c53367f1a73332b14f346f0d2a4efd34d0d8c212edfbe311907295884), contentStartColumn(10), contentStartLine(172), org.kframework.attributes.Location(Location(172,10,172,42)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),VarVTYPES'Apos':SortValTypes{}),
        VarVTYPES'Apos':SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("172"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,10,172,42)"), UNIQUE'Unds'ID{}("1d35fa9c53367f1a73332b14f346f0d2a4efd34d0d8c212edfbe311907295884")]

// rule `_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(VT,VTYPES),VTYPES')=>`___WASM-DATA_ValTypes_ValType_ValTypes`(VT,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,VTYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(835e4b61b40bb197d895064374bd4dceb4a4fd2d45714acf3ad7ffbf5e8f6751), contentStartColumn(10), contentStartLine(173), org.kframework.attributes.Location(Location(173,10,173,56)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarVT:SortValType{},VarVTYPES:SortValTypes{}),VarVTYPES'Apos':SortValTypes{}),
        Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarVT:SortValType{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},VarVTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("173"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,10,173,56)"), UNIQUE'Unds'ID{}("835e4b61b40bb197d895064374bd4dceb4a4fd2d45714acf3ad7ffbf5e8f6751")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(`f32_WASM-DATA_FValType`(.KList) #as _1),inj{Cvtf64Op,CvtOp}(`demote_f64_WASM-NUMERIC_Cvtf64Op`(.KList)),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(_1,F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f10f4759a789773feb7d1a147158a7b941bda5fb6078ae0b7156a1e2be688890), contentStartColumn(10), contentStartLine(391), org.kframework.attributes.Location(Location(391,10,391,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(\and{SortFValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'1:SortFValType{})),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),VarF:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(Var'Unds'1:SortFValType{},VarF:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("391"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,10,391,50)"), UNIQUE'Unds'ID{}("f10f4759a789773feb7d1a147158a7b941bda5fb6078ae0b7156a1e2be688890")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(`f64_WASM-DATA_FValType`(.KList) #as _1),inj{Cvtf32Op,CvtOp}(`promote_f32_WASM-NUMERIC_Cvtf32Op`(.KList)),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(_1,F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da3b4fb578f929b5b4a6edfe27e0a2de9af2d9b635dc284e0305f6a847ad4e14), contentStartColumn(10), contentStartLine(387), org.kframework.attributes.Location(Location(387,10,387,50)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(\and{SortFValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'1:SortFValType{})),inj{SortCvtf32Op{}, SortCvtOp{}}(Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),VarF:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(Var'Unds'1:SortFValType{},VarF:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("387"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,10,387,50)"), UNIQUE'Unds'ID{}("da3b4fb578f929b5b4a6edfe27e0a2de9af2d9b635dc284e0305f6a847ad4e14")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList) #as _1),inj{Cvti64Op,CvtOp}(`wrap_i64_WASM-NUMERIC_Cvti64Op`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(_1,I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8dd5729c4e14166939a0c1a23c18b770ef4a40b31d0a9a3c1b2e630528330a7a), contentStartColumn(10), contentStartLine(355), org.kframework.attributes.Location(Location(355,10,355,46)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(\and{SortIValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'1:SortIValType{})),inj{SortCvti64Op{}, SortCvtOp{}}(Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},VarI:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("355"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,10,355,46)"), UNIQUE'Unds'ID{}("8dd5729c4e14166939a0c1a23c18b770ef4a40b31d0a9a3c1b2e630528330a7a")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(`i64_WASM-DATA_IValType`(.KList) #as _1),inj{Cvti32Op,CvtOp}(`extend_i32_s_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(_1,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(_1,`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c63818a167b34ba9a177b7cdf269601e9b16a348a7468cf58ff0e9e73e5fd14), contentStartColumn(10), contentStartLine(364), org.kframework.attributes.Location(Location(364,10,364,77)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'1:SortIValType{})),inj{SortCvti32Op{}, SortCvtOp{}}(Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("364"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,10,364,77)"), UNIQUE'Unds'ID{}("5c63818a167b34ba9a177b7cdf269601e9b16a348a7468cf58ff0e9e73e5fd14")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(`i64_WASM-DATA_IValType`(.KList) #as _1),inj{Cvti32Op,CvtOp}(`extend_i32_u_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(_1,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07eb5954932934b4a4ee7356d55c934f49ec918c514768716ef8402e695ece2a), contentStartColumn(10), contentStartLine(363), org.kframework.attributes.Location(Location(363,10,363,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'1:SortIValType{})),inj{SortCvti32Op{}, SortCvtOp{}}(Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("363"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,10,363,47)"), UNIQUE'Unds'ID{}("07eb5954932934b4a4ee7356d55c934f49ec918c514768716ef8402e695ece2a")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti32Op,CvtOp}(`convert_i32_s_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I))=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a67be1a104877fd01c4819a34f579f25669bfa46c4957cdc1ee1dd6ae8f514c5), contentStartColumn(10), contentStartLine(372), org.kframework.attributes.Location(Location(372,10,372,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti32Op{}, SortCvtOp{}}(Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("372"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,10,372,74)"), UNIQUE'Unds'ID{}("a67be1a104877fd01c4819a34f579f25669bfa46c4957cdc1ee1dd6ae8f514c5")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti32Op,CvtOp}(`convert_i32_u_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I) #as _3)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,_3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6fd0af46cf580588b67e2ca1fe35e18a26056493b6dd691da6460cc5b6e124f0), contentStartColumn(10), contentStartLine(373), org.kframework.attributes.Location(Location(373,10,373,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti32Op{}, SortCvtOp{}}(Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),\and{SortNumber{}}(inj{SortInt{}, SortNumber{}}(VarI:SortInt{}),Var'Unds'3:SortNumber{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},Var'Unds'3:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("373"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,10,373,60)"), UNIQUE'Unds'ID{}("6fd0af46cf580588b67e2ca1fe35e18a26056493b6dd691da6460cc5b6e124f0")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti64Op,CvtOp}(`convert_i64_s_WASM-NUMERIC_Cvti64Op`(.KList)),inj{Int,Number}(I))=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8cdb518790b993312c8f295d554cee94874187f185c89edbc1d0248b24cf188), contentStartColumn(10), contentStartLine(377), org.kframework.attributes.Location(Location(377,10,377,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti64Op{}, SortCvtOp{}}(Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("377"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,10,377,74)"), UNIQUE'Unds'ID{}("a8cdb518790b993312c8f295d554cee94874187f185c89edbc1d0248b24cf188")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti64Op,CvtOp}(`convert_i64_u_WASM-NUMERIC_Cvti64Op`(.KList)),inj{Int,Number}(I) #as _3)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,_3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e25e12feaac560bfa2bcb51c96f64f87046e43b4f1606699d50ba34af6dcd102), contentStartColumn(10), contentStartLine(378), org.kframework.attributes.Location(Location(378,10,378,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti64Op{}, SortCvtOp{}}(Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}()),\and{SortNumber{}}(inj{SortInt{}, SortNumber{}}(VarI:SortInt{}),Var'Unds'3:SortNumber{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},Var'Unds'3:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("378"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,10,378,60)"), UNIQUE'Unds'ID{}("e25e12feaac560bfa2bcb51c96f64f87046e43b4f1606699d50ba34af6dcd102")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_s_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)))) ensures #token("true","Bool") [UNIQUE_ID(0012eeae73a2fb893e0a0ee1ecf6129bc35ea30aa231fbdc8d27ee5d1aba195d), contentStartColumn(10), contentStartLine(404), org.kframework.attributes.Location(Location(404,10,405,159)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("404"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,10,405,159)"), UNIQUE'Unds'ID{}("0012eeae73a2fb893e0a0ee1ecf6129bc35ea30aa231fbdc8d27ee5d1aba195d")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_s_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(02444af74b36ddc9e4c83ffb9b749bbe224c5d61d8bcc79d2243f8cc4d56afce), contentStartColumn(10), contentStartLine(399), org.kframework.attributes.Location(Location(399,10,400,149)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("399"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,10,400,149)"), UNIQUE'Unds'ID{}("02444af74b36ddc9e4c83ffb9b749bbe224c5d61d8bcc79d2243f8cc4d56afce")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_u_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int")))) ensures #token("true","Bool") [UNIQUE_ID(49387e69d2f97b2916ca089f45ae68422504cc68c6be9d33d7601d3a3d0efb65), contentStartColumn(10), contentStartLine(406), org.kframework.attributes.Location(Location(406,10,407,140)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0")))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("406"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,10,407,140)"), UNIQUE'Unds'ID{}("49387e69d2f97b2916ca089f45ae68422504cc68c6be9d33d7601d3a3d0efb65")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_u_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(43e0ba7a5507180947e370e775fa56df30db4b8d9f5203e971665f6fa442b294), contentStartColumn(10), contentStartLine(401), org.kframework.attributes.Location(Location(401,10,402,130)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("401"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,10,402,130)"), UNIQUE'Unds'ID{}("43e0ba7a5507180947e370e775fa56df30db4b8d9f5203e971665f6fa442b294")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_s_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)))) ensures #token("true","Bool") [UNIQUE_ID(7b6c4a38b618c6b1423edf00cc209f4d03d9c0c15b67c4af89fcc1896b98e743), contentStartColumn(10), contentStartLine(416), org.kframework.attributes.Location(Location(416,10,417,159)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("416"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,10,417,159)"), UNIQUE'Unds'ID{}("7b6c4a38b618c6b1423edf00cc209f4d03d9c0c15b67c4af89fcc1896b98e743")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_s_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(c2772d5de27c88a200a4041615bb80461c8b5f0cb44eb379b5bf9680e29744d6), contentStartColumn(10), contentStartLine(411), org.kframework.attributes.Location(Location(411,10,412,149)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("411"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,10,412,149)"), UNIQUE'Unds'ID{}("c2772d5de27c88a200a4041615bb80461c8b5f0cb44eb379b5bf9680e29744d6")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_u_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int")))) ensures #token("true","Bool") [UNIQUE_ID(28277296c8f15585f8a18750d7ba8881e8a887f01325d964dd1096b478037097), contentStartColumn(10), contentStartLine(418), org.kframework.attributes.Location(Location(418,10,419,140)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0")))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("418"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,419,140)"), UNIQUE'Unds'ID{}("28277296c8f15585f8a18750d7ba8881e8a887f01325d964dd1096b478037097")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_u_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7af1db4f86a5dc9586a8dfb894e233dfb0d787cea70b612c15dbec257ce1dbae), contentStartColumn(10), contentStartLine(413), org.kframework.attributes.Location(Location(413,10,414,130)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("413"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(413,10,414,130)"), UNIQUE'Unds'ID{}("7af1db4f86a5dc9586a8dfb894e233dfb0d787cea70b612c15dbec257ce1dbae")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`abs_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`absFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ba3bea32d47899bf05d271e5cbf1fb1672513c22403f6301e6d87970fb7f8ee), contentStartColumn(10), contentStartLine(88), org.kframework.attributes.Location(Location(88,10,88,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("88"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,10,88,55)"), UNIQUE'Unds'ID{}("2ba3bea32d47899bf05d271e5cbf1fb1672513c22403f6301e6d87970fb7f8ee")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`ceil_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`ceilFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(183b92a078e3475852ae81ed12b1d5d71fe9dcecb46a3f387a291e8beea737a2), contentStartColumn(10), contentStartLine(92), org.kframework.attributes.Location(Location(92,10,92,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("92"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,10,92,55)"), UNIQUE'Unds'ID{}("183b92a078e3475852ae81ed12b1d5d71fe9dcecb46a3f387a291e8beea737a2")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`floor_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`floorFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(26394cc9f15a1e97235aa5e6691a903b5bd02dffc0ecd7c839bee7c0a35c0166), contentStartColumn(10), contentStartLine(91), org.kframework.attributes.Location(Location(91,10,91,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("91"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,10,91,55)"), UNIQUE'Unds'ID{}("26394cc9f15a1e97235aa5e6691a903b5bd02dffc0ecd7c839bee7c0a35c0166")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`nearest_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`Float2Int(_)_FLOAT_Int_Float`(F)))) requires `_andBool_`(`notBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)),`notBool_`(`_andBool_`(`_==Int_`(`Float2Int(_)_FLOAT_Int_Float`(F),#token("0","Int")),`signFloat(_)_FLOAT_Bool_Float`(F)))) ensures #token("true","Bool") [UNIQUE_ID(b6f254703121abde4c3237098eea75e46266d4b8e46aaba3e7227aad9c97aef5), contentStartColumn(10), contentStartLine(95), org.kframework.attributes.Location(Location(95,10,95,158)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),\dv{SortInt{}}("0")),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("95"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,10,95,158)"), UNIQUE'Unds'ID{}("b6f254703121abde4c3237098eea75e46266d4b8e46aaba3e7227aad9c97aef5")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`nearest_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,F)) requires `#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F) ensures #token("true","Bool") [UNIQUE_ID(f7b3e8fb929ef02019751f89f8ce9dff1d7991153d38d4b26c42fb40e4d78da9), contentStartColumn(10), contentStartLine(94), org.kframework.attributes.Location(Location(94,10,94,97)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarF:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("94"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,10,94,97)"), UNIQUE'Unds'ID{}("f7b3e8fb929ef02019751f89f8ce9dff1d7991153d38d4b26c42fb40e4d78da9")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`nearest_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,#token("-0.0","Float"))) requires `_andBool_`(`_andBool_`(`notBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)),`_==Int_`(`Float2Int(_)_FLOAT_Int_Float`(F),#token("0","Int"))),`signFloat(_)_FLOAT_Bool_Float`(F)) ensures #token("true","Bool") [UNIQUE_ID(2b71dc1974ea18aa92e15eb8c4182e9c593198b0202a4664383d9ae8a7fbae8b), contentStartColumn(10), contentStartLine(96), org.kframework.attributes.Location(Location(96,10,96,157)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),Lbl'UndsEqlsEqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),\dv{SortInt{}}("0"))),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},\dv{SortFloat{}}("-0.0")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("96"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,10,96,157)"), UNIQUE'Unds'ID{}("2b71dc1974ea18aa92e15eb8c4182e9c593198b0202a4664383d9ae8a7fbae8b")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`neg_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`--Float__FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(829b762435bbebdcfb3c0eb80ce8535a9b9f8c20ff08ef5c7373abc0d6fdbb37), contentStartColumn(10), contentStartLine(89), org.kframework.attributes.Location(Location(89,10,89,54)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("89"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,10,89,54)"), UNIQUE'Unds'ID{}("829b762435bbebdcfb3c0eb80ce8535a9b9f8c20ff08ef5c7373abc0d6fdbb37")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`sqrt_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`sqrtFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(14bda2d6a088b401d729851cc7d82b57a36cb9e89686166b818fd27848611242), contentStartColumn(10), contentStartLine(90), org.kframework.attributes.Location(Location(90,10,90,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("90"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,10,90,55)"), UNIQUE'Unds'ID{}("14bda2d6a088b401d729851cc7d82b57a36cb9e89686166b818fd27848611242")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`trunc_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e0d7ec66193c63ba13ca83f9ef08a65dcbe7f98fc0412226f95087a3779cee65), contentStartColumn(10), contentStartLine(93), org.kframework.attributes.Location(Location(93,10,93,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("93"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,10,93,55)"), UNIQUE'Unds'ID{}("e0d7ec66193c63ba13ca83f9ef08a65dcbe7f98fc0412226f95087a3779cee65")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,`clz_WASM-NUMERIC_IUnOp`(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`#minWidth(_)_WASM-NUMERIC_Int_Int`(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7fa06ed1d4b634c392b7bc2935b259590db03d14d30e16c2036ae17d962a4212), contentStartColumn(10), contentStartLine(39), org.kframework.attributes.Location(Location(39,10,39,73)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(),VarI1:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("39"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,10,39,73)"), UNIQUE'Unds'ID{}("7fa06ed1d4b634c392b7bc2935b259590db03d14d30e16c2036ae17d962a4212")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,`ctz_WASM-NUMERIC_IUnOp`(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(I1,#token("0","Int")),`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`#ctz(_)_WASM-NUMERIC_Int_Int`(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08c1af981f4901779ca64552c8c39ca20edf1811b996b7133cdd03fba160ddcd), contentStartColumn(10), contentStartLine(40), org.kframework.attributes.Location(Location(40,10,40,94)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}(),VarI1:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},\dv{SortInt{}}("0")),Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("40"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,10,40,94)"), UNIQUE'Unds'ID{}("08c1af981f4901779ca64552c8c39ca20edf1811b996b7133cdd03fba160ddcd")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,`popcnt_WASM-NUMERIC_IUnOp`(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#popcnt(_)_WASM-NUMERIC_Int_Int`(I1))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4d908977b745a6316061099a55a26a35066d4eb1b2ba1c1cdfdd15b660554826), contentStartColumn(10), contentStartLine(41), org.kframework.attributes.Location(Location(41,10,41,52)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}(),VarI1:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("41"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,10,41,52)"), UNIQUE'Unds'ID{}("4d908977b745a6316061099a55a26a35066d4eb1b2ba1c1cdfdd15b660554826")]

// rule `_.___WASM-NUMERIC_Val_IValType_TestOp_Int`(_0,`eqz_WASM-NUMERIC_TestOp`(.KList),I)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(I,#token("0","Int"))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7edf1f3a50ed16bd259fcde66c3904192e1dc033c86513db557acdd79036b4e8), contentStartColumn(10), contentStartLine(255), org.kframework.attributes.Location(Location(255,10,255,47)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(Var'Unds'0:SortIValType{},Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}(),VarI:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,255,47)"), UNIQUE'Unds'ID{}("7edf1f3a50ed16bd259fcde66c3904192e1dc033c86513db557acdd79036b4e8")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`copysign_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,F1)) requires `_==Bool_`(`signFloat(_)_FLOAT_Bool_Float`(F1),`signFloat(_)_FLOAT_Bool_Float`(F2)) ensures #token("true","Bool") [UNIQUE_ID(2635191619ba0fec745b4c078e1ada29b60f341e2e06af2ea463acc643842fbc), contentStartColumn(10), contentStartLine(234), org.kframework.attributes.Location(Location(234,10,234,119)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Bool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF1:SortFloat{}),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF2:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarF1:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("234"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,10,234,119)"), UNIQUE'Unds'ID{}("2635191619ba0fec745b4c078e1ada29b60f341e2e06af2ea463acc643842fbc")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`copysign_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`--Float__FLOAT_Float_Float`(F1))) requires `_=/=Bool_`(`signFloat(_)_FLOAT_Bool_Float`(F1),`signFloat(_)_FLOAT_Bool_Float`(F2)) ensures #token("true","Bool") [UNIQUE_ID(21908faa81d0a9d32e8644738db6e102b3228d387e32bfdacdc7c08aede5db5b), contentStartColumn(10), contentStartLine(235), org.kframework.attributes.Location(Location(235,10,235,119)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF1:SortFloat{}),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF2:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(VarF1:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("235"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,10,235,119)"), UNIQUE'Unds'ID{}("21908faa81d0a9d32e8644738db6e102b3228d387e32bfdacdc7c08aede5db5b")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`div_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_/Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e07102d780da9611ebe6bc8b4ba3b3152ef88c6b743aaee5949ba01d45df8b1c), contentStartColumn(10), contentStartLine(231), org.kframework.attributes.Location(Location(231,10,231,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("231"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,10,231,67)"), UNIQUE'Unds'ID{}("e07102d780da9611ebe6bc8b4ba3b3152ef88c6b743aaee5949ba01d45df8b1c")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatAdd(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_+Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22643064d0161f2dc7f1369f169293b78965f6fe4ccec53a5ee08e67994b18c6), contentStartColumn(10), contentStartLine(228), org.kframework.attributes.Location(Location(228,10,228,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},LblfloatAdd{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("228"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,10,228,67)"), UNIQUE'Unds'ID{}("22643064d0161f2dc7f1369f169293b78965f6fe4ccec53a5ee08e67994b18c6")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatMul(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_*Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d909059375308ba97ee71e917d250a5c83c06f324c3f3ff8593079cf8c218283), contentStartColumn(10), contentStartLine(230), org.kframework.attributes.Location(Location(230,10,230,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},LblfloatMul{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("230"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(230,10,230,67)"), UNIQUE'Unds'ID{}("d909059375308ba97ee71e917d250a5c83c06f324c3f3ff8593079cf8c218283")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatSub(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_-Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(67d4122c0258e7e14f6e058143a34dfbd4611f68d0325120bc8b7487dff9cdb3), contentStartColumn(10), contentStartLine(229), org.kframework.attributes.Location(Location(229,10,229,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},LblfloatSub{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("229"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(229,10,229,67)"), UNIQUE'Unds'ID{}("67d4122c0258e7e14f6e058143a34dfbd4611f68d0325120bc8b7487dff9cdb3")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`max_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`maxFloat(_,_)_FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96139c205caf3a8e18d8bad533341864706576af2fb2840462acc44bcd2de92d), contentStartColumn(10), contentStartLine(233), org.kframework.attributes.Location(Location(233,10,233,72)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblmaxFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("233"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,10,233,72)"), UNIQUE'Unds'ID{}("96139c205caf3a8e18d8bad533341864706576af2fb2840462acc44bcd2de92d")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`min_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`minFloat(_,_)_FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96cfa683b857ace06927094c5a4c4ce743b3064c89242871a5aa91db338ed03e), contentStartColumn(10), contentStartLine(232), org.kframework.attributes.Location(Location(232,10,232,72)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblminFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("232"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(232,10,232,72)"), UNIQUE'Unds'ID{}("96cfa683b857ace06927094c5a4c4ce743b3064c89242871a5aa91db338ed03e")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatEq(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8de34df9442055323be2f66493479c00e628c2577e0ddde6d01084d16aac0737), contentStartColumn(10), contentStartLine(331), org.kframework.attributes.Location(Location(331,10,331,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},LblfloatEq{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("331"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,10,331,64)"), UNIQUE'Unds'ID{}("8de34df9442055323be2f66493479c00e628c2577e0ddde6d01084d16aac0737")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatNe(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_=/=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(653124c3b9be19b953ecb034fa2c8dacd7bf06ee29c792e6022ca74a717ca1ef), contentStartColumn(10), contentStartLine(332), org.kframework.attributes.Location(Location(332,10,332,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},LblfloatNe{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("332"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,10,332,64)"), UNIQUE'Unds'ID{}("653124c3b9be19b953ecb034fa2c8dacd7bf06ee29c792e6022ca74a717ca1ef")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`ge_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bf27dfbde8df3fd8143ff5a985659112691f9f64f215e4f4b3b3ff8a8321eed), contentStartColumn(10), contentStartLine(330), org.kframework.attributes.Location(Location(330,10,330,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("330"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,10,330,64)"), UNIQUE'Unds'ID{}("6bf27dfbde8df3fd8143ff5a985659112691f9f64f215e4f4b3b3ff8a8321eed")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`gt_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72b1d2f7a837f8b94cc896d2220de5a77cdeeaa314671717ffe63e4241c96463), contentStartColumn(10), contentStartLine(328), org.kframework.attributes.Location(Location(328,10,328,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("328"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,10,328,64)"), UNIQUE'Unds'ID{}("72b1d2f7a837f8b94cc896d2220de5a77cdeeaa314671717ffe63e4241c96463")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`le_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dcf85193c6fd1f63415399a3bbd7d835e57b4ac7ebdf9aba5fe5a3de9893893d), contentStartColumn(10), contentStartLine(329), org.kframework.attributes.Location(Location(329,10,329,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("329"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(329,10,329,64)"), UNIQUE'Unds'ID{}("dcf85193c6fd1f63415399a3bbd7d835e57b4ac7ebdf9aba5fe5a3de9893893d")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`lt_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(190860470defb1e9f6958fa264ce649a385e35476bbdc4afd872cf19e07bf705), contentStartColumn(10), contentStartLine(327), org.kframework.attributes.Location(Location(327,10,327,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("327"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,10,327,64)"), UNIQUE'Unds'ID{}("190860470defb1e9f6958fa264ce649a385e35476bbdc4afd872cf19e07bf705")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`add_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3728b2d66ce92b184a0a7912bdafb0b236c4bef6ba354812a5b8cc1879dcf35a), contentStartColumn(10), contentStartLine(123), org.kframework.attributes.Location(Location(123,10,123,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("123"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,10,123,67)"), UNIQUE'Unds'ID{}("3728b2d66ce92b184a0a7912bdafb0b236c4bef6ba354812a5b8cc1879dcf35a")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`and_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_&Int_`(I1,I2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37f4d6fe1321a9b59f08b50443dc90b5d1189d4ddc69cdcd568f4deb23593f1d), contentStartColumn(10), contentStartLine(172), org.kframework.attributes.Location(Location(172,10,172,59)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("172"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,10,172,59)"), UNIQUE'Unds'ID{}("37f4d6fe1321a9b59f08b50443dc90b5d1189d4ddc69cdcd568f4deb23593f1d")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires `_andBool_`(`_=/=Int_`(I2,#token("0","Int")),`_=/=Int_`(`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(2715ff38a762bee20ecdcc846f2161afe53400a38bb6daed5371b5288c3386fa), contentStartColumn(10), contentStartLine(144), org.kframework.attributes.Location(Location(144,10,146,78)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,146,78)"), UNIQUE'Unds'ID{}("2715ff38a762bee20ecdcc846f2161afe53400a38bb6daed5371b5288c3386fa")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(928b3d6b3555500260833e14266d6a3912366b8f67c3d56f29519e9119919e5a), contentStartColumn(10), contentStartLine(148), org.kframework.attributes.Location(Location(148,10,149,26)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("148"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,10,149,26)"), UNIQUE'Unds'ID{}("928b3d6b3555500260833e14266d6a3912366b8f67c3d56f29519e9119919e5a")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_andBool_`(`_=/=Int_`(I2,#token("0","Int")),`_==Int_`(`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(60afa3783d38f17600378e1da7d2a832d28f826567b1449bb7c1178297b51f0c), contentStartColumn(10), contentStartLine(151), org.kframework.attributes.Location(Location(151,10,153,77)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("151"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,10,153,77)"), UNIQUE'Unds'ID{}("60afa3783d38f17600378e1da7d2a832d28f826567b1449bb7c1178297b51f0c")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_/Int_`(I1,I2))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2389a630aed2310ca00040fcd879a1731bdab2df98a11df250ad204f84a6a09f), contentStartColumn(10), contentStartLine(136), org.kframework.attributes.Location(Location(136,10,136,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("136"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,10,136,74)"), UNIQUE'Unds'ID{}("2389a630aed2310ca00040fcd879a1731bdab2df98a11df250ad204f84a6a09f")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b1e87cada1dd0ddcbb8200afb5948bf08f497d14a0f052b7374d81e090a18176), contentStartColumn(10), contentStartLine(137), org.kframework.attributes.Location(Location(137,10,137,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("137"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,10,137,74)"), UNIQUE'Unds'ID{}("b1e87cada1dd0ddcbb8200afb5948bf08f497d14a0f052b7374d81e090a18176")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`mul_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_*Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(caff992927547903c008bcca192d746c17399ca4d6261e84b31a0b0f3f348699), contentStartColumn(10), contentStartLine(125), org.kframework.attributes.Location(Location(125,10,125,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("125"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,10,125,67)"), UNIQUE'Unds'ID{}("caff992927547903c008bcca192d746c17399ca4d6261e84b31a0b0f3f348699")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`or_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_|Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a27fb3eff392b65c3eaa9ed308360b9aef44c24f5ca3d132357ed074d87c2fff), contentStartColumn(10), contentStartLine(173), org.kframework.attributes.Location(Location(173,10,173,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPipe'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("173"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,10,173,60)"), UNIQUE'Unds'ID{}("a27fb3eff392b65c3eaa9ed308360b9aef44c24f5ca3d132357ed074d87c2fff")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_%Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(768ed1c936a74300030da37ebc6d998bbb2bed2bddf9bb7a0964752303c79d72), contentStartColumn(10), contentStartLine(155), org.kframework.attributes.Location(Location(155,10,156,27)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPerc'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("155"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,10,156,27)"), UNIQUE'Unds'ID{}("768ed1c936a74300030da37ebc6d998bbb2bed2bddf9bb7a0964752303c79d72")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(7c64b7ce279d5addcf800d35364689bbf1bff82cf39d02dba0fcd0786e62d474), contentStartColumn(10), contentStartLine(158), org.kframework.attributes.Location(Location(158,10,159,26)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("158"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,10,159,26)"), UNIQUE'Unds'ID{}("7c64b7ce279d5addcf800d35364689bbf1bff82cf39d02dba0fcd0786e62d474")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_%Int_`(I1,I2))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(27c42df5b15d609a22670cdfcf76cd5ac2952352ec74dfe8324e3a1c56b2d486), contentStartColumn(10), contentStartLine(139), org.kframework.attributes.Location(Location(139,10,139,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("139"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,10,139,74)"), UNIQUE'Unds'ID{}("27c42df5b15d609a22670cdfcf76cd5ac2952352ec74dfe8324e3a1c56b2d486")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(9b8ec70b9950d727f0f7816661bb172a64fc3fd3b1d78a187dff56d6b683b9c5), contentStartColumn(10), contentStartLine(140), org.kframework.attributes.Location(Location(140,10,140,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("140"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,10,140,74)"), UNIQUE'Unds'ID{}("9b8ec70b9950d727f0f7816661bb172a64fc3fd3b1d78a187dff56d6b683b9c5")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rotl_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(`_<<Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>>Int_`(I1,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9264a48e2ebd8c79270b441de1669abd284bd830d6f247bc18ad71744fbed664), contentStartColumn(10), contentStartLine(201), org.kframework.attributes.Location(Location(201,10,201,144)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("201"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,10,201,144)"), UNIQUE'Unds'ID{}("9264a48e2ebd8c79270b441de1669abd284bd830d6f247bc18ad71744fbed664")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rotr_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(`_>>Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<<Int_`(I1,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(463f02d8e30521fb917c4a8c5590d246e5b254bdf0fcdfdc835ccebbfe52a45b), contentStartColumn(10), contentStartLine(202), org.kframework.attributes.Location(Location(202,10,202,144)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("202"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,10,202,144)"), UNIQUE'Unds'ID{}("463f02d8e30521fb917c4a8c5590d246e5b254bdf0fcdfdc835ccebbfe52a45b")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`shl_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_<<Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0814738b91b424420eba8545c3b7f8bf23c884e55d449162e073565bc25fe898), contentStartColumn(10), contentStartLine(187), org.kframework.attributes.Location(Location(187,10,187,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("187"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,10,187,82)"), UNIQUE'Unds'ID{}("0814738b91b424420eba8545c3b7f8bf23c884e55d449162e073565bc25fe898")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`shr_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_>>Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c86fa4c152852995c98c4c505d69b6a3813cbfdaf3b45064b6cc5544a9ecb191), contentStartColumn(10), contentStartLine(190), org.kframework.attributes.Location(Location(190,10,190,109)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("190"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,10,190,109)"), UNIQUE'Unds'ID{}("c86fa4c152852995c98c4c505d69b6a3813cbfdaf3b45064b6cc5544a9ecb191")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`shr_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_>>Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85783a1bf5aa0440eea2d466884833c4ba5144361c5d8d8c39fbf3446cb34a0e), contentStartColumn(10), contentStartLine(188), org.kframework.attributes.Location(Location(188,10,188,81)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("188"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,10,188,81)"), UNIQUE'Unds'ID{}("85783a1bf5aa0440eea2d466884833c4ba5144361c5d8d8c39fbf3446cb34a0e")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`sub_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_-Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1738ca2897d37d4a1f5e65ff2f0aaa73585e193a639401e8301eab2f4e472d3), contentStartColumn(10), contentStartLine(124), org.kframework.attributes.Location(Location(124,10,124,67)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("124"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,10,124,67)"), UNIQUE'Unds'ID{}("f1738ca2897d37d4a1f5e65ff2f0aaa73585e193a639401e8301eab2f4e472d3")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`xor_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_xorInt_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbdd943c7b550d45d7e49e5d9c96ac2f3324c71d2ea26a66244d2d8a8f5b3640), contentStartColumn(10), contentStartLine(174), org.kframework.attributes.Location(Location(174,10,174,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'xorInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("174"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,10,174,60)"), UNIQUE'Unds'ID{}("cbdd943c7b550d45d7e49e5d9c96ac2f3324c71d2ea26a66244d2d8a8f5b3640")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`ge_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6a9d7bfc3141c65c0bb1d5dfe23a502e6bd00fbc2d9b0cbb61687bb4a07b7301), contentStartColumn(10), contentStartLine(305), org.kframework.attributes.Location(Location(305,10,305,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("305"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,10,305,90)"), UNIQUE'Unds'ID{}("6a9d7bfc3141c65c0bb1d5dfe23a502e6bd00fbc2d9b0cbb61687bb4a07b7301")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`gt_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c3a8d9c2100bcdb9594af824d0f4edb5fcd74f8aa49995da1f85b2321bf109c4), contentStartColumn(10), contentStartLine(292), org.kframework.attributes.Location(Location(292,10,292,89)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("292"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,10,292,89)"), UNIQUE'Unds'ID{}("c3a8d9c2100bcdb9594af824d0f4edb5fcd74f8aa49995da1f85b2321bf109c4")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`le_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec90c8f2ecf4fbb53336ec3b8892308405f528ae32200a980445878787e8c576), contentStartColumn(10), contentStartLine(304), org.kframework.attributes.Location(Location(304,10,304,90)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("304"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,10,304,90)"), UNIQUE'Unds'ID{}("ec90c8f2ecf4fbb53336ec3b8892308405f528ae32200a980445878787e8c576")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`lt_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7af723160148f4d4ea0b096c4117b82e4512467154b3cc7625cfcb3bac753393), contentStartColumn(10), contentStartLine(291), org.kframework.attributes.Location(Location(291,10,291,89)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,291,89)"), UNIQUE'Unds'ID{}("7af723160148f4d4ea0b096c4117b82e4512467154b3cc7625cfcb3bac753393")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`eq_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(26ff285e99cc9179d857654a04512b4bda7a10275083b1799b9ff6bafd5433f8), contentStartColumn(10), contentStartLine(278), org.kframework.attributes.Location(Location(278,10,278,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("278"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,10,278,62)"), UNIQUE'Unds'ID{}("26ff285e99cc9179d857654a04512b4bda7a10275083b1799b9ff6bafd5433f8")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`ge_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a59c20ded52374322ef89567487b927927ddcfd4e64a02fc2c1a8f1bdd854854), contentStartColumn(10), contentStartLine(302), org.kframework.attributes.Location(Location(302,10,302,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("302"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,10,302,58)"), UNIQUE'Unds'ID{}("a59c20ded52374322ef89567487b927927ddcfd4e64a02fc2c1a8f1bdd854854")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`gt_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(caccb65de3b5f580688c5b04701de36260c36e2b5b8186533ee2c56c2b880d19), contentStartColumn(10), contentStartLine(289), org.kframework.attributes.Location(Location(289,10,289,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("289"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,10,289,57)"), UNIQUE'Unds'ID{}("caccb65de3b5f580688c5b04701de36260c36e2b5b8186533ee2c56c2b880d19")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`le_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e3762de558fb4306ce998d6b652b9e5b29aa66e33a5c02d26f7ca4561cf8e3bd), contentStartColumn(10), contentStartLine(301), org.kframework.attributes.Location(Location(301,10,301,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("301"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,10,301,58)"), UNIQUE'Unds'ID{}("e3762de558fb4306ce998d6b652b9e5b29aa66e33a5c02d26f7ca4561cf8e3bd")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`lt_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07deb820af5db9aaa4a5d91c039c3217187f1f23ccfa67a3cf2297ad0429c63e), contentStartColumn(10), contentStartLine(288), org.kframework.attributes.Location(Location(288,10,288,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("288"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,10,288,57)"), UNIQUE'Unds'ID{}("07deb820af5db9aaa4a5d91c039c3217187f1f23ccfa67a3cf2297ad0429c63e")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`ne_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_=/=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ab665f1a227d8b0607dfa20b9227d2343ddcea6b604ca3510c867d6595c4c19), contentStartColumn(10), contentStartLine(279), org.kframework.attributes.Location(Location(279,10,279,62)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("279"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,279,62)"), UNIQUE'Unds'ID{}("0ab665f1a227d8b0607dfa20b9227d2343ddcea6b604ca3510c867d6595c4c19")]

// rule `_<<Int_`(#token("0","Int") #as _0,X)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d402e237d3a3b4ebf2358cc61e77cbb3ec03989d9be016003b2916d1935a8e9), contentStartColumn(10), contentStartLine(255), org.kframework.attributes.Location(Location(255,10,255,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{}),VarX:SortInt{}),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,255,24)"), simplification{}(), UNIQUE'Unds'ID{}("2d402e237d3a3b4ebf2358cc61e77cbb3ec03989d9be016003b2916d1935a8e9")]

// rule `_<<Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d9cace14bde6a604c371ca45e9ea6900a124efc18d91742ed49ef2efd97baa33), contentStartColumn(10), contentStartLine(254), org.kframework.attributes.Location(Location(254,10,254,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("254"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,10,254,24)"), simplification{}(), UNIQUE'Unds'ID{}("d9cace14bde6a604c371ca45e9ea6900a124efc18d91742ed49ef2efd97baa33")]

// rule `_<<Int_`(`_<<Int_`(X,N),M)=>`_<<Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea5645de077215759bc27389bdc7e5fd50038120bac1997b27271b414d547b3a), contentStartColumn(10), contentStartLine(183), org.kframework.attributes.Location(Location(183,10,183,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("183"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,10,183,51)"), simplification{}(), UNIQUE'Unds'ID{}("ea5645de077215759bc27389bdc7e5fd50038120bac1997b27271b414d547b3a")]

// rule `_<=Int_`(#token("0","Int") #as _0,`_+Int_`(VAL1,VAL2))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(_0,VAL1),`_<=Int_`(_0,VAL2)) ensures #token("true","Bool") [UNIQUE_ID(bf87e35bdc42a37eaf1488aa26ee28415b660422b8b7157bf97d9d6a078766f3), contentStartColumn(10), contentStartLine(318), org.kframework.attributes.Location(Location(318,10,318,87)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Var'Unds'0:SortInt{},VarVAL1:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(Var'Unds'0:SortInt{},VarVAL2:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{}),Lbl'UndsPlus'Int'Unds'{}(VarVAL1:SortInt{},VarVAL2:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("318"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,10,318,87)"), simplification{}(), UNIQUE'Unds'ID{}("bf87e35bdc42a37eaf1488aa26ee28415b660422b8b7157bf97d9d6a078766f3")]

// rule `_<=Int_`(#token("0","Int") #as _0,`_<<Int_`(VAL,SHIFT))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(_0,VAL),`_<=Int_`(_0,SHIFT)) ensures #token("true","Bool") [UNIQUE_ID(c51ee6033062281369bcc346105590be67939a08f978d9796c688d3ee0233b2b), contentStartColumn(10), contentStartLine(317), org.kframework.attributes.Location(Location(317,10,317,88)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Var'Unds'0:SortInt{},VarVAL:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(Var'Unds'0:SortInt{},VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(VarVAL:SortInt{},VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("317"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,10,317,88)"), simplification{}(), UNIQUE'Unds'ID{}("c51ee6033062281369bcc346105590be67939a08f978d9796c688d3ee0233b2b")]

// rule `_<=Int_`(#token("0","Int"),`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_0,_1,_2))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a32db31ccfa4068ef95fd492fa50ba28e5927dad6df40272d0466741afb2722), contentStartColumn(10), contentStartLine(316), org.kframework.attributes.Location(Location(316,10,316,44)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'0:SortByteMap{},Var'Unds'1:SortInt{},Var'Unds'2:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("316"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,10,316,44)"), simplification{}(), UNIQUE'Unds'ID{}("1a32db31ccfa4068ef95fd492fa50ba28e5927dad6df40272d0466741afb2722")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), contentStartColumn(8), contentStartLine(663), org.kframework.attributes.Location(Location(663,8,663,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("663"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(663,8,663,63)"), UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80")]

// rule `_<Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_0,_1,WIDTH),MAX)=>#token("true","Bool") requires `_<=Int_`(`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),WIDTH)),MAX) ensures #token("true","Bool") [UNIQUE_ID(6a8876133db61270ca485d51b0b0ed742c4a2ec5983d74e481d6b34cd923f1e6), contentStartColumn(10), contentStartLine(320), org.kframework.attributes.Location(Location(320,10,320,102)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),VarWIDTH:SortInt{})),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'0:SortByteMap{},Var'Unds'1:SortInt{},VarWIDTH:SortInt{}),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("320"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,10,320,102)"), simplification{}(), UNIQUE'Unds'ID{}("6a8876133db61270ca485d51b0b0ed742c4a2ec5983d74e481d6b34cd923f1e6")]

// rule `_<Int_`(`_+Int_`(VAL1,VAL2),MAX)=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<Int_`(VAL1,MAX),`_<Int_`(VAL2,MAX)),`#distinctBits(_,_)_KWASM-LEMMAS_Bool_Int_Int`(VAL1,VAL2)) ensures #token("true","Bool") [UNIQUE_ID(69e33d5602dda33cf6fac778c8f85162df93f8c220900624b134c62831f68355), contentStartColumn(10), contentStartLine(322), org.kframework.attributes.Location(Location(322,10,322,140)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarVAL1:SortInt{},VarMAX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarVAL2:SortInt{},VarMAX:SortInt{})),Lbl'Hash'distinctBits'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'Int'Unds'Int{}(VarVAL1:SortInt{},VarVAL2:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarVAL1:SortInt{},VarVAL2:SortInt{}),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("322"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,10,322,140)"), simplification{}(), UNIQUE'Unds'ID{}("69e33d5602dda33cf6fac778c8f85162df93f8c220900624b134c62831f68355")]

// rule `_<Int_`(`_<<Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(_0,_1,WIDTH),SHIFT),MAX)=>#token("true","Bool") requires `_<=Int_`(`_^Int_`(#token("2","Int"),`_+Int_`(`_*Int_`(#token("8","Int"),WIDTH),SHIFT)),MAX) ensures #token("true","Bool") [UNIQUE_ID(bbde8be4d3dfc46c81afdb51e521003a9f8c00f4b4b7e36d0bb79da85540ab4c), contentStartColumn(10), contentStartLine(321), org.kframework.attributes.Location(Location(321,10,321,115)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),VarWIDTH:SortInt{}),VarSHIFT:SortInt{})),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(Var'Unds'0:SortByteMap{},Var'Unds'1:SortInt{},VarWIDTH:SortInt{}),VarSHIFT:SortInt{}),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("321"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,10,321,115)"), simplification{}(), UNIQUE'Unds'ID{}("bbde8be4d3dfc46c81afdb51e521003a9f8c00f4b4b7e36d0bb79da85540ab4c")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), contentStartColumn(8), contentStartLine(383), org.kframework.attributes.Location(Location(383,8,383,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("383"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,8,383,57)"), UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f")]

// rule `_=/=Float__FLOAT_Bool_Float_Float`(F1,F2)=>`notBool_`(`_==Float__FLOAT_Bool_Float_Float`(F1,F2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c87c7e74c316556cd4c45461f1ac4e722f5cade89974f4617cbb45396835a14), contentStartColumn(8), contentStartLine(592), org.kframework.attributes.Location(Location(592,8,592,61)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("592"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,8,592,61)"), UNIQUE'Unds'ID{}("7c87c7e74c316556cd4c45461f1ac4e722f5cade89974f4617cbb45396835a14")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), contentStartColumn(8), contentStartLine(520), org.kframework.attributes.Location(Location(520,8,520,53)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("520"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(520,8,520,53)"), UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), contentStartColumn(8), contentStartLine(955), org.kframework.attributes.Location(Location(955,8,955,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("955"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,8,955,45)"), UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), contentStartColumn(8), contentStartLine(651), org.kframework.attributes.Location(Location(651,8,651,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("651"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(651,8,651,65)"), UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7")]

// rule `_==Int_`(`#bool(_)_WASM-DATA_Int_Bool`(P),#token("0","Int"))=>`notBool_`(P) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d514429190f06f20179980b9512b0b94e5107f4e6da2f5ff439807ee95cd5a72), contentStartColumn(10), contentStartLine(16), org.kframework.attributes.Location(Location(16,10,16,39)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarP:SortBool{}),\dv{SortInt{}}("0")),
        LblnotBool'Unds'{}(VarP:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("16"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,10,16,39)"), simplification{}(), UNIQUE'Unds'ID{}("d514429190f06f20179980b9512b0b94e5107f4e6da2f5ff439807ee95cd5a72")]

// rule `_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2))=>`_==Int_`(I1,I2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8bf41fa14e6cef57ebcd77d165461911b0f45874319eafd20a311466ff77ac6f), contentStartColumn(8), contentStartLine(494), org.kframework.attributes.Location(Location(494,8,494,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}())),
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("494"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(494,8,494,40)"), UNIQUE'Unds'ID{}("8bf41fa14e6cef57ebcd77d165461911b0f45874319eafd20a311466ff77ac6f")]

// rule `_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2))=>`_==Bool_`(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51ca403f7048793055685a9e3a051e86807f14b2d4901ae81d0b4eedff7b1d77), contentStartColumn(8), contentStartLine(937), org.kframework.attributes.Location(Location(937,8,937,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}())),
        Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{},VarK2:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("937"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,8,937,43)"), UNIQUE'Unds'ID{}("51ca403f7048793055685a9e3a051e86807f14b2d4901ae81d0b4eedff7b1d77")]

// rule `_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2))=>`_==String__STRING-COMMON_Bool_String_String`(S1,S2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(512288fc69c52cbd01cf38881d419b391f66a3d428beddb746e0012a9f880325), contentStartColumn(8), contentStartLine(705), org.kframework.attributes.Location(Location(705,8,705,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}())),
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("705"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(705,8,705,49)"), UNIQUE'Unds'ID{}("512288fc69c52cbd01cf38881d419b391f66a3d428beddb746e0012a9f880325")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), contentStartColumn(8), contentStartLine(665), org.kframework.attributes.Location(Location(665,8,665,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("665"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(665,8,665,63)"), UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17")]

// rule `_>>Int_`(#token("0","Int") #as _0,X)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1cf22edfe70c5e6f01624499522c9b110616a96e9f7894de7508ebb4a51091b9), contentStartColumn(10), contentStartLine(257), org.kframework.attributes.Location(Location(257,10,257,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{}),VarX:SortInt{}),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("257"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,10,257,24)"), simplification{}(), UNIQUE'Unds'ID{}("1cf22edfe70c5e6f01624499522c9b110616a96e9f7894de7508ebb4a51091b9")]

// rule `_>>Int_`(X,N)=>#token("0","Int") requires `_<Int_`(X,`_^Int_`(#token("2","Int"),N)) ensures #token("true","Bool") [UNIQUE_ID(371d69d89580232dff00b9bc706f51df21e04c4a69cb45a61a93e40d3486e325), contentStartColumn(10), contentStartLine(179), org.kframework.attributes.Location(Location(179,10,179,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("179"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,10,179,60)"), simplification{}(), UNIQUE'Unds'ID{}("371d69d89580232dff00b9bc706f51df21e04c4a69cb45a61a93e40d3486e325")]

// rule `_>>Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(572bf49a8ddd18981c88d4573e09bebfa4ca9f0d3d1caaea04d9fa30b5d20c39), contentStartColumn(10), contentStartLine(256), org.kframework.attributes.Location(Location(256,10,256,24)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("256"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(256,10,256,24)"), simplification{}(), UNIQUE'Unds'ID{}("572bf49a8ddd18981c88d4573e09bebfa4ca9f0d3d1caaea04d9fa30b5d20c39")]

// rule `_>>Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH),SHIFT)=>`_>>Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,`_+Int_`(ADDR,#token("1","Int")),`_-Int_`(WIDTH,#token("1","Int"))),`_-Int_`(SHIFT,#token("8","Int"))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),ADDR),`_<Int_`(#token("0","Int"),WIDTH)),`_<=Int_`(#token("8","Int"),SHIFT)),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM)) ensures #token("true","Bool") [UNIQUE_ID(4b4afa0d805c88a681495df539a5de5d5b0f347d33bd89d9810269034236cfc6), contentStartColumn(10), contentStartLine(340), org.kframework.attributes.Location(Location(340,10,344,30)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("8"),VarSHIFT:SortInt{})),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),VarSHIFT:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("1")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),Lbl'Unds'-Int'Unds'{}(VarSHIFT:SortInt{},\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("340"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,10,344,30)"), simplification{}(), UNIQUE'Unds'ID{}("4b4afa0d805c88a681495df539a5de5d5b0f347d33bd89d9810269034236cfc6")]

// rule `_>>Int_`(`_+Int_`(Y,`_<<Int_`(X,M)),N)=>`_+Int_`(`_<<Int_`(X,`_-Int_`(M,N)),`_>>Int_`(Y,N)) requires `_>=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(187440eaa3c22ca40f1fd0dc1fec4af00bbbc6611ac5eb9c4e72afe5dd19d53d), contentStartColumn(10), contentStartLine(193), org.kframework.attributes.Location(Location(193,10,193,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),Lbl'Unds-GT--GT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("193"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,10,193,98)"), simplification{}(), UNIQUE'Unds'ID{}("187440eaa3c22ca40f1fd0dc1fec4af00bbbc6611ac5eb9c4e72afe5dd19d53d")]

// rule `_>>Int_`(`_+Int_`(`_<<Int_`(X,M),Y),N)=>`_+Int_`(`_<<Int_`(X,`_-Int_`(M,N)),`_>>Int_`(Y,N)) requires `_>=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(4f33d536634cab62ce7dcfcfe1c71a857038222fbf8daf3297b5b20b557a4a13), contentStartColumn(10), contentStartLine(192), org.kframework.attributes.Location(Location(192,10,192,98)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),Lbl'Unds-GT--GT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("192"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(192,10,192,98)"), simplification{}(), UNIQUE'Unds'ID{}("4f33d536634cab62ce7dcfcfe1c71a857038222fbf8daf3297b5b20b557a4a13")]

// rule `_>>Int_`(`_<<Int_`(X,N),M)=>`_<<Int_`(X,`_-Int_`(N,M)) requires `_>=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(e9eaafd699dbc93a406ee303b802789d8351cea45a9f9fe83772df9c853eb84b), contentStartColumn(10), contentStartLine(187), org.kframework.attributes.Location(Location(187,10,187,81)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("187"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,10,187,81)"), simplification{}(), UNIQUE'Unds'ID{}("e9eaafd699dbc93a406ee303b802789d8351cea45a9f9fe83772df9c853eb84b")]

// rule `_>>Int_`(`_<<Int_`(X,N),M)=>`_>>Int_`(X,`_-Int_`(M,N)) requires `notBool_`(`_>=Int_`(N,M)) ensures #token("true","Bool") [UNIQUE_ID(021d6e6901c2858e5bcf31629392b571c85ee15ff259f4bfc0c6bf31b1680c71), contentStartColumn(10), contentStartLine(188), org.kframework.attributes.Location(Location(188,10,188,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("188"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,10,188,82)"), simplification{}(), UNIQUE'Unds'ID{}("021d6e6901c2858e5bcf31629392b571c85ee15ff259f4bfc0c6bf31b1680c71")]

// rule `_>>Int_`(`_>>Int_`(X,N),M)=>`_>>Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66d16a528b6d21c25feff1dd7384e0d389acbfca14a50f732b8041b9a388530e), contentStartColumn(10), contentStartLine(182), org.kframework.attributes.Location(Location(182,10,182,51)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("182"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,10,182,51)"), simplification{}(), UNIQUE'Unds'ID{}("66d16a528b6d21c25feff1dd7384e0d389acbfca14a50f732b8041b9a388530e")]

// rule `_>>Int_`(`_modInt_`(X,POW),N)=>`_modInt_`(`_>>Int_`(X,N),`_/Int_`(POW,`_^Int_`(#token("2","Int"),N))) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(POW,`_^Int_`(#token("2","Int"),N)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(6c169929cf58dac8aa5756055d65b30d2d86a2b552ed93d03f7987fad074049f), contentStartColumn(10), contentStartLine(215), org.kframework.attributes.Location(Location(215,10,218,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),Lbl'UndsSlsh'Int'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("215"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,10,218,45)"), simplification{}(), UNIQUE'Unds'ID{}("6c169929cf58dac8aa5756055d65b30d2d86a2b552ed93d03f7987fad074049f")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), contentStartColumn(8), contentStartLine(664), org.kframework.attributes.Location(Location(664,8,664,52)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("664"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(664,8,664,52)"), UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0")]

// rule `___WASM_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _2,`(data_)_WASM-TEXT_MemorySpec_DataString`(DS))),DEFS)=>`___WASM_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(_2,inj{Limits,MemorySpec}(`___WASM-DATA_Limits_Int_Int`(`#lengthDataPages(_)_WASM_Int_DataString`(DS),`#lengthDataPages(_)_WASM_Int_DataString`(DS))))),`___WASM_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(inj{Identifier,Index}(ID),`(offset_)_WASM_Offset_Instrs`(`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_WasmInt`(`i32_WASM-DATA_IValType`(.KList),inj{Int,WasmInt}(#token("0","Int"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),DS)),DEFS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3c1876cdf043e90b96f7d76bfa15635b007132651357231bd80518b486c5e48c), contentStartColumn(10), contentStartLine(249), macro, org.kframework.attributes.Location(Location(249,10,252,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule `___WASM_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _2,`_(elem_)_WASM-TEXT_TableSpec_TableElemType_ElemSegment`(`funcref_WASM_TableElemType`(.KList) #as _4,ES))),DEFS)=>`___WASM_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(_2,inj{TableType,TableSpec}(`___WASM_TableType_Limits_TableElemType`(`___WASM-DATA_Limits_Int_Int`(`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES),`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES)),_4)))),`___WASM_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(inj{Identifier,Index}(ID),`(offset_)_WASM_Offset_Instrs`(`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_WasmInt`(`i32_WASM-DATA_IValType`(.KList),inj{Int,WasmInt}(#token("0","Int"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),ES)),DEFS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df2bbdba07c464a6d3833a7a15e42f000cd448bc390b0b940be66893020182c0), contentStartColumn(10), contentStartLine(265), macro, org.kframework.attributes.Location(Location(265,10,268,14)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule `_andBool_`(#token("false","Bool") #as _1,_0)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), contentStartColumn(8), contentStartLine(356), org.kframework.attributes.Location(Location(356,8,356,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("356"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,8,356,37)"), UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497")]

// rule `_andBool_`(#token("true","Bool") #as _0,B)=>B requires _0 ensures _0 [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), contentStartColumn(8), contentStartLine(354), org.kframework.attributes.Location(Location(354,8,354,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("354"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,8,354,37)"), UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f")]

// rule `_andBool_`(B,#token("true","Bool") #as _0)=>B requires _0 ensures _0 [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), contentStartColumn(8), contentStartLine(355), org.kframework.attributes.Location(Location(355,8,355,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{})),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("355"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,8,355,37)"), UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98")]

// rule `_andBool_`(_0,#token("false","Bool") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), contentStartColumn(8), contentStartLine(357), org.kframework.attributes.Location(Location(357,8,357,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("357"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,8,357,37)"), UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca")]

// rule `_andThenBool_`(#token("false","Bool") #as _1,_0)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), contentStartColumn(8), contentStartLine(361), org.kframework.attributes.Location(Location(361,8,361,36)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("361"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,8,361,36)"), UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d")]

// rule `_andThenBool_`(#token("true","Bool") #as _0,K)=>K requires _0 ensures _0 [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), contentStartColumn(8), contentStartLine(359), org.kframework.attributes.Location(Location(359,8,359,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{}),VarK:SortBool{}),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("359"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,8,359,37)"), UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689")]

// rule `_andThenBool_`(K,#token("true","Bool") #as _0)=>K requires _0 ensures _0 [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), contentStartColumn(8), contentStartLine(360), org.kframework.attributes.Location(Location(360,8,360,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{})),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("360"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,8,360,37)"), UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c")]

// rule `_andThenBool_`(_0,#token("false","Bool") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), contentStartColumn(8), contentStartLine(362), org.kframework.attributes.Location(Location(362,8,362,36)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("362"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,8,362,36)"), UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), contentStartColumn(8), contentStartLine(509), org.kframework.attributes.Location(Location(509,8,510,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'divInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("509"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,8,510,23)"), UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), contentStartColumn(8), contentStartLine(521), org.kframework.attributes.Location(Location(521,8,521,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("521"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,8,521,58)"), UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5")]

// rule `_impliesBool_`(#token("true","Bool") #as _0,B)=>B requires _0 ensures _0 [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), contentStartColumn(8), contentStartLine(378), org.kframework.attributes.Location(Location(378,8,378,36)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("378"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,8,378,36)"), UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), contentStartColumn(8), contentStartLine(381), org.kframework.attributes.Location(Location(381,8,381,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        LblnotBool'Unds'{}(VarB:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("381"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,8,381,45)"), UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96")]

// rule `_impliesBool_`(_0,#token("true","Bool") #as _1)=>_1 requires _1 ensures _1 [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), contentStartColumn(8), contentStartLine(380), org.kframework.attributes.Location(Location(380,8,380,39)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("380"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(380,8,380,39)"), UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712")]

// rule `_impliesBool_`(#token("false","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), contentStartColumn(8), contentStartLine(379), org.kframework.attributes.Location(Location(379,8,379,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\dv{SortBool{}}("false"),Var'Unds'0:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("379"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,8,379,40)"), UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e")]

// rule `_inBytes__WASM-DATA_Bool_Int_ByteMap`(I,`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(BM))=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Int,KItem}(I),BM),isInt(`Map:lookup`(BM,inj{Int,KItem}(I)))),`notBool_`(`isByte(_)_WASM-DATA_Bool_Int`(`project:Int`(`Map:lookup`(BM,inj{Int,KItem}(I)))))) ensures #token("true","Bool") [UNIQUE_ID(a77edf376646a843f8ee1ad508c7e5fb4e69947ed0939e65f259c374d749a2b6), contentStartColumn(10), contentStartLine(550), org.kframework.attributes.Location(Location(550,10,550,142)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),VarBM:SortMap{}),LblisInt{}(kseq{}(LblMap'Coln'lookup{}(VarBM:SortMap{},inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),dotk{}()))),LblnotBool'Unds'{}(LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarBM:SortMap{},inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),dotk{}()))))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(VarI:SortInt{},LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarBM:SortMap{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("550"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(550,10,550,142)"), UNIQUE'Unds'ID{}("a77edf376646a843f8ee1ad508c7e5fb4e69947ed0939e65f259c374d749a2b6")]

// rule `_inBytes__WASM-DATA_Bool_Int_ByteMap`(I,`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(BM))=>#token("false","Bool") requires `_andBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Int,KItem}(I),BM),`notBool_`(isInt(`Map:lookup`(BM,inj{Int,KItem}(I))))) ensures #token("true","Bool") [UNIQUE_ID(9f72194dcae1717c7cd32a5640542ba5a5eb0d08b11ec879da8c3b08993af7aa), contentStartColumn(10), contentStartLine(549), org.kframework.attributes.Location(Location(549,10,549,105)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),VarBM:SortMap{}),LblnotBool'Unds'{}(LblisInt{}(kseq{}(LblMap'Coln'lookup{}(VarBM:SortMap{},inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),dotk{}())))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(VarI:SortInt{},LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarBM:SortMap{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("549"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(549,10,549,105)"), UNIQUE'Unds'ID{}("9f72194dcae1717c7cd32a5640542ba5a5eb0d08b11ec879da8c3b08993af7aa")]

// rule `_inBytes__WASM-DATA_Bool_Int_ByteMap`(I,`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(BM))=>#token("false","Bool") requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Int,KItem}(I),BM)) ensures #token("true","Bool") [UNIQUE_ID(db43b8c291791eed0b9c562060c1b44da3b3bd4067493041ca950fb9b1b48a2c), contentStartColumn(10), contentStartLine(548), org.kframework.attributes.Location(Location(548,10,548,76)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),VarBM:SortMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(VarI:SortInt{},LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarBM:SortMap{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("548"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(548,10,548,76)"), UNIQUE'Unds'ID{}("db43b8c291791eed0b9c562060c1b44da3b3bd4067493041ca950fb9b1b48a2c")]

// rule `_inBytes__WASM-DATA_Bool_Int_ByteMap`(I,`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(BM))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Int,KItem}(I),BM),isInt(`Map:lookup`(BM,inj{Int,KItem}(I)))),`isByte(_)_WASM-DATA_Bool_Int`(`project:Int`(`Map:lookup`(BM,inj{Int,KItem}(I))))) ensures #token("true","Bool") [UNIQUE_ID(2a04b3ec441afdfb51e097031b2a1e1508f5230d69f63ac1f807a12db638498d), contentStartColumn(10), contentStartLine(551), org.kframework.attributes.Location(Location(551,10,551,142)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),VarBM:SortMap{}),LblisInt{}(kseq{}(LblMap'Coln'lookup{}(VarBM:SortMap{},inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),dotk{}()))),LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarBM:SortMap{},inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),dotk{}())))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inBytes'UndsUnds'WASM-DATA'Unds'Bool'Unds'Int'Unds'ByteMap{}(VarI:SortInt{},LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarBM:SortMap{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("551"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,10,551,142)"), UNIQUE'Unds'ID{}("2a04b3ec441afdfb51e097031b2a1e1508f5230d69f63ac1f807a12db638498d")]

// rule `_modInt_`(`_modInt_`(X,M) #as _0,N)=>_0 requires `_andBool_`(`_>Int_`(M,#token("0","Int")),`_<=Int_`(M,N)) ensures #token("true","Bool") [UNIQUE_ID(65e774073c80d26c43db7700e24cdff3dbf4428b0f8b9cc189bb170dcf0e9b01), contentStartColumn(10), contentStartLine(58), org.kframework.attributes.Location(Location(58,10,60,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(\and{SortInt{}}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),Var'Unds'0:SortInt{}),VarN:SortInt{}),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("58"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,10,60,25)"), simplification{}(), UNIQUE'Unds'ID{}("65e774073c80d26c43db7700e24cdff3dbf4428b0f8b9cc189bb170dcf0e9b01")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, contentStartColumn(5), contentStartLine(512), org.kframework.attributes.Location(Location(512,5,515,23)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), concrete{}(), contentStartLine{}("512"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(512,5,515,23)"), UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6")]

// rule `_modInt_`(X,N)=>X requires `_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<Int_`(X,N)) ensures #token("true","Bool") [UNIQUE_ID(3a397a001af2fcd0eaf3c29fa026cf37c07fb9b8d6245bae8906780b5e74f503), contentStartColumn(10), contentStartLine(40), org.kframework.attributes.Location(Location(40,10,42,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("40"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,10,42,25)"), simplification{}(), UNIQUE'Unds'ID{}("3a397a001af2fcd0eaf3c29fa026cf37c07fb9b8d6245bae8906780b5e74f503")]

// rule `_modInt_`(X,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))=>`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,X) requires `#inSignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,X) ensures #token("true","Bool") [UNIQUE_ID(9e2dd0e7c48b1ca34f44bbd9f294f2c5b11789a29e51acc0cc41979c24191ac6), contentStartColumn(10), contentStartLine(266), org.kframework.attributes.Location(Location(266,10,267,41)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})),
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("266"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,10,267,41)"), simplification{}(), UNIQUE'Unds'ID{}("9e2dd0e7c48b1ca34f44bbd9f294f2c5b11789a29e51acc0cc41979c24191ac6")]

// rule `_modInt_`(X,#token("1","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8783ea14c81ffed252b4e64dc47700fdbb020ab706b96979ff9e0949fab514dd), contentStartColumn(10), contentStartLine(51), org.kframework.attributes.Location(Location(51,10,51,25)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("1")),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("51"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,10,51,25)"), simplification{}(), UNIQUE'Unds'ID{}("8783ea14c81ffed252b4e64dc47700fdbb020ab706b96979ff9e0949fab514dd")]

// rule `_modInt_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH),MAX)=>`_modInt_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,`_-Int_`(WIDTH,#token("1","Int"))),MAX) requires `_andBool_`(`_andBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),MAX),`_<Int_`(#token("0","Int"),WIDTH)),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),`_-Int_`(WIDTH,#token("1","Int")))),MAX),#token("0","Int"))),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM)) ensures #token("true","Bool") [UNIQUE_ID(7852a7c7580ac8238c0ecf734065fc428699f6c2dcc8fea74594f257e66dcc38), contentStartColumn(10), contentStartLine(347), org.kframework.attributes.Location(Location(347,10,350,30)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarMAX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1")))),VarMAX:SortInt{}),\dv{SortInt{}}("0"))),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),VarMAX:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),VarMAX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("347"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(347,10,350,30)"), simplification{}(), UNIQUE'Unds'ID{}("7852a7c7580ac8238c0ecf734065fc428699f6c2dcc8fea74594f257e66dcc38")]

// rule `_modInt_`(`_+Int_`(X,`_<<Int_`(Y,N)),POW)=>`_modInt_`(X,POW) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),POW),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(dba96320df01ad0f1c486b71c323b192618ce52fb2c75e32c1ef72134fb11f7f), contentStartColumn(10), contentStartLine(234), org.kframework.attributes.Location(Location(234,10,237,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarPOW:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{})),VarPOW:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("234"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,10,237,45)"), simplification{}(), UNIQUE'Unds'ID{}("dba96320df01ad0f1c486b71c323b192618ce52fb2c75e32c1ef72134fb11f7f")]

// rule `_modInt_`(`_+Int_`(X,`_modInt_`(Y,M)),N)=>`_modInt_`(`_+Int_`(X,Y),N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(66853769494662ad9ac7997e37f44271055e0558640cccbee7150f1e242ee3a4), contentStartColumn(10), contentStartLine(138), org.kframework.attributes.Location(Location(138,10,141,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("138"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,10,141,34)"), simplification{}(), UNIQUE'Unds'ID{}("66853769494662ad9ac7997e37f44271055e0558640cccbee7150f1e242ee3a4")]

// rule `_modInt_`(`_+Int_`(Y,`_*Int_`(X,M)),N)=>`_modInt_`(Y,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7f90672b9160a12a7a5b8a47efa056b43e1c88c5e416313061eea640fbd4e975), contentStartColumn(10), contentStartLine(107), org.kframework.attributes.Location(Location(107,10,110,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'UndsStar'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("107"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,10,110,34)"), simplification{}(), UNIQUE'Unds'ID{}("7f90672b9160a12a7a5b8a47efa056b43e1c88c5e416313061eea640fbd4e975")]

// rule `_modInt_`(`_+Int_`(`_*Int_`(X,M),Y),N)=>`_modInt_`(Y,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(57f2735a8c9b79594a692a4207c31d018ccbb3e686c7065d7b0215195c77d953), contentStartColumn(10), contentStartLine(101), org.kframework.attributes.Location(Location(101,10,104,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("101"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,10,104,34)"), simplification{}(), UNIQUE'Unds'ID{}("57f2735a8c9b79594a692a4207c31d018ccbb3e686c7065d7b0215195c77d953")]

// rule `_modInt_`(`_+Int_`(`_<<Int_`(Y,N),X),POW)=>`_modInt_`(X,POW) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),POW),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(292b8e568af7181a06b7995c29c9e09370998a1461c04e5b877f5005e3e66506), contentStartColumn(10), contentStartLine(240), org.kframework.attributes.Location(Location(240,10,243,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarPOW:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}),VarX:SortInt{}),VarPOW:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("240"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,10,243,45)"), simplification{}(), UNIQUE'Unds'ID{}("292b8e568af7181a06b7995c29c9e09370998a1461c04e5b877f5005e3e66506")]

// rule `_modInt_`(`_+Int_`(`_modInt_`(X,M),Y),N)=>`_modInt_`(`_+Int_`(X,Y),N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(c2e5401ab6f9727b1c704b391f8a4559b53baa12ff89cc86573390d9f55604e5), contentStartColumn(10), contentStartLine(132), org.kframework.attributes.Location(Location(132,10,135,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("132"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,10,135,34)"), simplification{}(), UNIQUE'Unds'ID{}("c2e5401ab6f9727b1c704b391f8a4559b53baa12ff89cc86573390d9f55604e5")]

// rule `_modInt_`(`_<<Int_`(X,N),M)=>#token("0","Int") requires `_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),M),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(24a7740fb7c5ea6beb2a049a1eabd875fc80bc5000c77d5a5147ad21619317b8), contentStartColumn(10), contentStartLine(171), org.kframework.attributes.Location(Location(171,10,172,43)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarM:SortInt{}),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("171"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,10,172,43)"), simplification{}(), UNIQUE'Unds'ID{}("24a7740fb7c5ea6beb2a049a1eabd875fc80bc5000c77d5a5147ad21619317b8")]

// rule `_modInt_`(`_<<Int_`(X,N),M)=>#token("0","Int") requires `_<Int_`(M,`_^Int_`(#token("2","Int"),N)) ensures #token("true","Bool") [UNIQUE_ID(587c10aa7693b7c15febd47a7cb952f48ac1bf0f27910cd6d55f10b6eb0de07c), contentStartColumn(10), contentStartLine(180), org.kframework.attributes.Location(Location(180,10,180,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarM:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("180"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,60)"), simplification{}(), UNIQUE'Unds'ID{}("587c10aa7693b7c15febd47a7cb952f48ac1bf0f27910cd6d55f10b6eb0de07c")]

// rule `_modInt_`(`_<<Int_`(X,N),POW)=>`_<<Int_`(`_modInt_`(X,`_/Int_`(POW,`_^Int_`(#token("2","Int"),N))),N) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(POW,`_^Int_`(#token("2","Int"),N)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(90668a7e426a05f766e9fe00c1c049933a8655cf7f5380d535204462ba5f0b08), contentStartColumn(10), contentStartLine(221), org.kframework.attributes.Location(Location(221,10,224,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarPOW:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},Lbl'UndsSlsh'Int'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}))),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("221"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,10,224,45)"), simplification{}(), UNIQUE'Unds'ID{}("90668a7e426a05f766e9fe00c1c049933a8655cf7f5380d535204462ba5f0b08")]

// rule `_modInt_`(`_modInt_`(X,M),N)=>`_modInt_`(X,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(954ff401dc83a70760be2a54cfa53262059f898ffcc88c478eceaa7704cfa3d9), contentStartColumn(10), contentStartLine(75), org.kframework.attributes.Location(Location(75,10,78,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("75"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,10,78,34)"), simplification{}(), UNIQUE'Unds'ID{}("954ff401dc83a70760be2a54cfa53262059f898ffcc88c478eceaa7704cfa3d9")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("true","Bool") #as _1,_0)=>_1 requires _1 ensures _1 [UNIQUE_ID(5dfb98d49c2983e9eac3a11a13792236ca26a956835ab97349bcd01d11f63a51), contentStartColumn(8), contentStartLine(368), org.kframework.attributes.Location(Location(368,8,368,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("368"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(368,8,368,34)"), UNIQUE'Unds'ID{}("5dfb98d49c2983e9eac3a11a13792236ca26a956835ab97349bcd01d11f63a51")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c382e30c30e5d297c0dcf23e21714a4fb9ab844afff2437a995d2e4379ac22c8), contentStartColumn(8), contentStartLine(371), org.kframework.attributes.Location(Location(371,8,371,32)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("371"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,8,371,32)"), UNIQUE'Unds'ID{}("c382e30c30e5d297c0dcf23e21714a4fb9ab844afff2437a995d2e4379ac22c8")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(_0,#token("true","Bool") #as _1)=>_1 requires _1 ensures _1 [UNIQUE_ID(0cd71a2e6180fcbaf817fdcded5a5e68f59b5eb6d14a2dc2be83729bf264f7c6), contentStartColumn(8), contentStartLine(369), org.kframework.attributes.Location(Location(369,8,369,34)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("369"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(369,8,369,34)"), UNIQUE'Unds'ID{}("0cd71a2e6180fcbaf817fdcded5a5e68f59b5eb6d14a2dc2be83729bf264f7c6")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc141041c3f424eab4159b85971a8f6888c5e602c3b29505bc623a976293d974), contentStartColumn(8), contentStartLine(370), org.kframework.attributes.Location(Location(370,8,370,32)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("370"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,8,370,32)"), UNIQUE'Unds'ID{}("fc141041c3f424eab4159b85971a8f6888c5e602c3b29505bc623a976293d974")]

// rule `_orElseBool_`(#token("true","Bool") #as _1,_0)=>_1 requires _1 ensures _1 [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), contentStartColumn(8), contentStartLine(373), org.kframework.attributes.Location(Location(373,8,373,33)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("373"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,8,373,33)"), UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), contentStartColumn(8), contentStartLine(376), org.kframework.attributes.Location(Location(376,8,376,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("false")),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("376"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,8,376,37)"), UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480")]

// rule `_orElseBool_`(_0,#token("true","Bool") #as _1)=>_1 requires _1 ensures _1 [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), contentStartColumn(8), contentStartLine(374), org.kframework.attributes.Location(Location(374,8,374,33)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("374"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(374,8,374,33)"), UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), contentStartColumn(8), contentStartLine(375), org.kframework.attributes.Location(Location(375,8,375,37)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\dv{SortBool{}}("false"),VarK:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("375"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,8,375,37)"), UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf")]

// rule `_up/Int__WASM_Int_Int_Int`(I1,I2)=>`_/Int_`(`_+Int_`(I1,`_-Int_`(I2,#token("1","Int"))),I2) requires `_>Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(828cf8002b1684fb793149bba520dbbcfcd2822d7735ef1d9a542a118a4e141a), contentStartColumn(10), contentStartLine(1266), org.kframework.attributes.Location(Location(1266,10,1266,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("1"))),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("1266"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1266,10,1266,74)"), UNIQUE'Unds'ID{}("828cf8002b1684fb793149bba520dbbcfcd2822d7735ef1d9a542a118a4e141a")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), contentStartColumn(8), contentStartLine(366), org.kframework.attributes.Location(Location(366,8,366,38)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},VarB:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("366"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(366,8,366,38)"), UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), contentStartColumn(8), contentStartLine(365), org.kframework.attributes.Location(Location(365,8,365,38)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("365"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,8,365,38)"), UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), contentStartColumn(8), contentStartLine(364), org.kframework.attributes.Location(Location(364,8,364,38)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("364"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,8,364,38)"), UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf")]

// rule `asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)=>`_->__WASM-DATA_FuncType_VecType_VecType`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`param_WASM_TypeKeyWord`(.KList),TDECLS),`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d937c22ef566147865ac2d54f678e6d2edd429f4537c3c681f8ba4e69d8f1332), contentStartColumn(10), contentStartLine(584), org.kframework.attributes.Location(Location(584,10,584,121)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}),
        Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("584"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(584,10,584,121)"), UNIQUE'Unds'ID{}("d937c22ef566147865ac2d54f678e6d2edd429f4537c3c681f8ba4e69d8f1332")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,`(type_)_WASM_TypeUse_Index`(TFIDX))=>`project:FuncType`(`Map:lookup`(TYPES,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TYPEIDS,TFIDX)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29cccb9002b918cfd7207d7b155ff63b6e2026c21696cb5c7db09704672e03d6), contentStartColumn(10), contentStartLine(586), org.kframework.attributes.Location(Location(586,10,586,113)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(VarTFIDX:SortIndex{})),
        Lblproject'Coln'FuncType{}(kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTYPEIDS:SortMap{},VarTFIDX:SortIndex{}))),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("586"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,10,586,113)"), UNIQUE'Unds'ID{}("29cccb9002b918cfd7207d7b155ff63b6e2026c21696cb5c7db09704672e03d6")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,`(type_)__WASM_TypeUse_Index_TypeDecls`(TFIDX,TDECLS))=>`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS) requires `_==K_`(`Map:lookup`(TYPES,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TYPEIDS,TFIDX))),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)))) ensures #token("true","Bool") [UNIQUE_ID(a5f3024b32022ae3e0ae6dbce6f5ac86ea694f05308f446909c87dbc1ae26bac), contentStartColumn(10), contentStartLine(587), org.kframework.attributes.Location(Location(587,10,588,92)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTYPEIDS:SortMap{},VarTFIDX:SortIndex{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),dotk{}())),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarTFIDX:SortIndex{},VarTDECLS:SortTypeDecls{})),
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("587"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,10,588,92)"), UNIQUE'Unds'ID{}("a5f3024b32022ae3e0ae6dbce6f5ac86ea694f05308f446909c87dbc1ae26bac")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(_0,_1,inj{TypeDecls,TypeUse}(TDECLS))=>`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8fb9e77c3566501599df8e1116e8310a7463e11a83ce82e88882b022043c255e), contentStartColumn(10), contentStartLine(585), org.kframework.attributes.Location(Location(585,10,585,82)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(Var'Unds'0:SortMap{},Var'Unds'1:SortMap{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{})),
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("585"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,10,585,82)"), UNIQUE'Unds'ID{}("8fb9e77c3566501599df8e1116e8310a7463e11a83ce82e88882b022043c255e")]

// rule `asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(`(mut_)_WASM_TextFormatGlobalType_AValType`(T))=>`___WASM_GlobalType_Mut_AValType`(`var_WASM-DATA_Mut`(.KList),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(62ed802f6ae90c7ed81c877169f61802b20738ba06adeafb234e8fec814c5eae), contentStartColumn(10), contentStartLine(468), org.kframework.attributes.Location(Location(468,10,468,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalType{},R} (
        LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(VarT:SortAValType{})),
        Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(Lblvar'Unds'WASM-DATA'Unds'Mut{}(),VarT:SortAValType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("468"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(468,10,468,49)"), UNIQUE'Unds'ID{}("62ed802f6ae90c7ed81c877169f61802b20738ba06adeafb234e8fec814c5eae")]

// rule `asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(inj{AValType,TextFormatGlobalType}(T))=>`___WASM_GlobalType_Mut_AValType`(`const_WASM-DATA_Mut`(.KList),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e09e3984cd8aa21196a38bdedd607884614283d5de0096be85441ffb55620e53), contentStartColumn(10), contentStartLine(469), org.kframework.attributes.Location(Location(469,10,469,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalType{},R} (
        LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(inj{SortAValType{}, SortTextFormatGlobalType{}}(VarT:SortAValType{})),
        Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(Lblconst'Unds'WASM-DATA'Unds'Mut{}(),VarT:SortAValType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("469"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(469,10,469,49)"), UNIQUE'Unds'ID{}("e09e3984cd8aa21196a38bdedd607884614283d5de0096be85441ffb55620e53")]

// rule `asLocalType(_)_WASM_VecType_LocalDecls`(LDECLS)=>`#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(LDECLS,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41e9845e55d7423fe8eb8325740e06660bc4dbd46c4eb6f3e129877422255fe8), contentStartColumn(11), contentStartLine(630), org.kframework.attributes.Location(Location(630,11,630,65)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        LblasLocalType'LParUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls{}(VarLDECLS:SortLocalDecls{}),
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("630"), contentStartColumn{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(630,11,630,65)"), UNIQUE'Unds'ID{}("41e9845e55d7423fe8eb8325740e06660bc4dbd46c4eb6f3e129877422255fe8")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), contentStartColumn(8), contentStartLine(505), org.kframework.attributes.Location(Location(505,8,505,85)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("505"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,8,505,85)"), UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), contentStartColumn(8), contentStartLine(674), org.kframework.attributes.Location(Location(674,8,675,60)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("674"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(674,8,675,60)"), UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), contentStartColumn(8), contentStartLine(672), org.kframework.attributes.Location(Location(672,8,673,59)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("672"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(672,8,673,59)"), UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), contentStartColumn(8), contentStartLine(667), org.kframework.attributes.Location(Location(667,8,667,431)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("667"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(667,8,667,431)"), UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), contentStartColumn(8), contentStartLine(668), org.kframework.attributes.Location(Location(668,8,668,32)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("668"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(668,8,668,32)"), UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), contentStartColumn(8), contentStartLine(524), org.kframework.attributes.Location(Location(524,8,524,28)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("524"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,8,524,28)"), UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b")]

// rule `gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(TKW,TDECLS)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7db45af4cfaf84b6e5b4ab42b2a0bb01a87520d370804d98d7e01714109ed9a2), contentStartColumn(11), contentStartLine(559), org.kframework.attributes.Location(Location(559,11,559,86)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("559"), contentStartColumn{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,11,559,86)"), UNIQUE'Unds'ID{}("7db45af4cfaf84b6e5b4ab42b2a0bb01a87520d370804d98d7e01714109ed9a2")]

// rule getGeneratedCounterCell(`<generatedTop>`(DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblgetGeneratedCounterCell{}(Lbl'-LT-'generatedTop'-GT-'{}(VarDotVar0:SortWasmCell{},VarCell:SortGeneratedCounterCell{})),
        VarCell:SortGeneratedCounterCell{}),
      \top{R}()))
  []

// rule initCurFrameCell(.KList)=>`<curFrame>`(initLocalsCell(.KList),initCurModIdxCell(.KList),initLabelDepthCell(.KList),initLabelIdsCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCell{},R} (
        LblinitCurFrameCell{}(),
        Lbl'-LT-'curFrame'-GT-'{}(LblinitLocalsCell{}(),LblinitCurModIdxCell{}(),LblinitLabelDepthCell{}(),LblinitLabelIdsCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initCurModIdxCell(.KList)=>`<curModIdx>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurModIdxCell{},R} (
        LblinitCurModIdxCell{}(),
        Lbl'-LT-'curModIdx'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}()]

// rule initDeterministicMemoryGrowthCell(.KList)=>`<deterministicMemoryGrowth>`(#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCell{},R} (
        LblinitDeterministicMemoryGrowthCell{}(),
        Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(\dv{SortBool{}}("true"))),
      \top{R}()))
  [initializer{}()]

// rule initExportsCell(.KList)=>`<exports>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportsCell{},R} (
        LblinitExportsCell{}(),
        Lbl'-LT-'exports'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFAddrCell(.KList)=>`<fAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFAddrCell{},R} (
        LblinitFAddrCell{}(),
        Lbl'-LT-'fAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initFCodeCell(.KList)=>`<fCode>`(inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFCodeCell{},R} (
        LblinitFCodeCell{}(),
        Lbl'-LT-'fCode'-GT-'{}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),
      \top{R}()))
  [initializer{}()]

// rule initFLocalCell(.KList)=>`<fLocal>`(`.Type_WASM-DATA_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFLocalCell{},R} (
        LblinitFLocalCell{}(),
        Lbl'-LT-'fLocal'-GT-'{}(Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())),
      \top{R}()))
  [initializer{}()]

// rule initFModInstCell(.KList)=>`<fModInst>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFModInstCell{},R} (
        LblinitFModInstCell{}(),
        Lbl'-LT-'fModInst'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initFTypeCell(.KList)=>`<fType>`(`.Type_WASM-DATA_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFTypeCell{},R} (
        LblinitFTypeCell{}(),
        Lbl'-LT-'fType'-GT-'{}(Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())),
      \top{R}()))
  [initializer{}()]

// rule initFuncAddrsCell(.KList)=>`<funcAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncAddrsCell{},R} (
        LblinitFuncAddrsCell{}(),
        Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFuncDefCell(.KList)=>`FuncDefCellMapItem`(initFAddrCell(.KList),`<funcDef>`(initFAddrCell(.KList),initFCodeCell(.KList),initFTypeCell(.KList),initFLocalCell(.KList),initFModInstCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCellMap{},R} (
        LblinitFuncDefCell{}(),
        LblFuncDefCellMapItem{}(LblinitFAddrCell{}(),Lbl'-LT-'funcDef'-GT-'{}(LblinitFAddrCell{}(),LblinitFCodeCell{}(),LblinitFTypeCell{}(),LblinitFLocalCell{}(),LblinitFModInstCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initFuncIdsCell(.KList)=>`<funcIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncIdsCell{},R} (
        LblinitFuncIdsCell{}(),
        Lbl'-LT-'funcIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFuncsCell(.KList)=>`<funcs>`(`.FuncDefCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCell{},R} (
        LblinitFuncsCell{}(),
        Lbl'-LT-'funcs'-GT-'{}(Lbl'Stop'FuncDefCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initGAddrCell(.KList)=>`<gAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGAddrCell{},R} (
        LblinitGAddrCell{}(),
        Lbl'-LT-'gAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGMutCell(.KList)=>`<gMut>`(`.Mut_WASM-DATA_Mut`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGMutCell{},R} (
        LblinitGMutCell{}(),
        Lbl'-LT-'gMut'-GT-'{}(Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}())),
      \top{R}()))
  [initializer{}()]

// rule initGValueCell(.KList)=>`<gValue>`(`undefined_WASM-DATA_Val`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGValueCell{},R} (
        LblinitGValueCell{}(),
        Lbl'-LT-'gValue'-GT-'{}(Lblundefined'Unds'WASM-DATA'Unds'Val{}())),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblinitGeneratedCounterCell{}(),
        Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initWasmCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        LblinitGeneratedTopCell{}(VarInit:SortMap{}),
        Lbl'-LT-'generatedTop'-GT-'{}(LblinitWasmCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobIdsCell(.KList)=>`<globIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobIdsCell{},R} (
        LblinitGlobIdsCell{}(),
        Lbl'-LT-'globIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobalAddrsCell(.KList)=>`<globalAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalAddrsCell{},R} (
        LblinitGlobalAddrsCell{}(),
        Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobalInstCell(.KList)=>`GlobalInstCellMapItem`(initGAddrCell(.KList),`<globalInst>`(initGAddrCell(.KList),initGValueCell(.KList),initGMutCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCellMap{},R} (
        LblinitGlobalInstCell{}(),
        LblGlobalInstCellMapItem{}(LblinitGAddrCell{}(),Lbl'-LT-'globalInst'-GT-'{}(LblinitGAddrCell{}(),LblinitGValueCell{}(),LblinitGMutCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initGlobalsCell(.KList)=>`<globals>`(`.GlobalInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCell{},R} (
        LblinitGlobalsCell{}(),
        Lbl'-LT-'globals'-GT-'{}(Lbl'Stop'GlobalInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initKCell(Init)=>`<k>`(inj{Stmts,KItem}(`text2abstract(_)_WASM_Stmts_Stmts`(`project:Stmts`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar"))))))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        LblinitKCell{}(VarInit:SortMap{}),
        Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(Lblproject'Coln'Stmts{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}())))),dotk{}()))),
      \top{R}()))
  [initializer{}()]

// rule initLabelDepthCell(.KList)=>`<labelDepth>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelDepthCell{},R} (
        LblinitLabelDepthCell{}(),
        Lbl'-LT-'labelDepth'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initLabelIdsCell(.KList)=>`<labelIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelIdsCell{},R} (
        LblinitLabelIdsCell{}(),
        Lbl'-LT-'labelIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initLocalsCell(.KList)=>`<locals>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalsCell{},R} (
        LblinitLocalsCell{}(),
        Lbl'-LT-'locals'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMAddrCell(.KList)=>`<mAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMAddrCell{},R} (
        LblinitMAddrCell{}(),
        Lbl'-LT-'mAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initMainStoreCell(.KList)=>`<mainStore>`(initFuncsCell(.KList),initNextFuncAddrCell(.KList),initTabsCell(.KList),initNextTabAddrCell(.KList),initMemsCell(.KList),initNextMemAddrCell(.KList),initGlobalsCell(.KList),initNextGlobAddrCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCell{},R} (
        LblinitMainStoreCell{}(),
        Lbl'-LT-'mainStore'-GT-'{}(LblinitFuncsCell{}(),LblinitNextFuncAddrCell{}(),LblinitTabsCell{}(),LblinitNextTabAddrCell{}(),LblinitMemsCell{}(),LblinitNextMemAddrCell{}(),LblinitGlobalsCell{}(),LblinitNextGlobAddrCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initMdataCell(.KList)=>`<mdata>`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`.Map`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMdataCell{},R} (
        LblinitMdataCell{}(),
        Lbl'-LT-'mdata'-GT-'{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'Stop'Map{}()))),
      \top{R}()))
  [initializer{}()]

// rule initMemAddrsCell(.KList)=>`<memAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemAddrsCell{},R} (
        LblinitMemAddrsCell{}(),
        Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMemIdsCell(.KList)=>`<memIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemIdsCell{},R} (
        LblinitMemIdsCell{}(),
        Lbl'-LT-'memIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMemInstCell(.KList)=>`MemInstCellMapItem`(initMAddrCell(.KList),`<memInst>`(initMAddrCell(.KList),initMmaxCell(.KList),initMsizeCell(.KList),initMdataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCellMap{},R} (
        LblinitMemInstCell{}(),
        LblMemInstCellMapItem{}(LblinitMAddrCell{}(),Lbl'-LT-'memInst'-GT-'{}(LblinitMAddrCell{}(),LblinitMmaxCell{}(),LblinitMsizeCell{}(),LblinitMdataCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initMemsCell(.KList)=>`<mems>`(`.MemInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCell{},R} (
        LblinitMemsCell{}(),
        Lbl'-LT-'mems'-GT-'{}(Lbl'Stop'MemInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initMmaxCell(.KList)=>`<mmax>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMmaxCell{},R} (
        LblinitMmaxCell{}(),
        Lbl'-LT-'mmax'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}()]

// rule initModIdxCell(.KList)=>`<modIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModIdxCell{},R} (
        LblinitModIdxCell{}(),
        Lbl'-LT-'modIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initModuleIdsCell(.KList)=>`<moduleIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleIdsCell{},R} (
        LblinitModuleIdsCell{}(),
        Lbl'-LT-'moduleIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initModuleInstCell(.KList)=>`ModuleInstCellMapItem`(initModIdxCell(.KList),`<moduleInst>`(initModIdxCell(.KList),initExportsCell(.KList),initTypeIdsCell(.KList),initTypesCell(.KList),initNextTypeIdxCell(.KList),initFuncIdsCell(.KList),initFuncAddrsCell(.KList),initNextFuncIdxCell(.KList),initTabIdsCell(.KList),initTabAddrsCell(.KList),initMemIdsCell(.KList),initMemAddrsCell(.KList),initGlobIdsCell(.KList),initGlobalAddrsCell(.KList),initNextGlobIdxCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCellMap{},R} (
        LblinitModuleInstCell{}(),
        LblModuleInstCellMapItem{}(LblinitModIdxCell{}(),Lbl'-LT-'moduleInst'-GT-'{}(LblinitModIdxCell{}(),LblinitExportsCell{}(),LblinitTypeIdsCell{}(),LblinitTypesCell{}(),LblinitNextTypeIdxCell{}(),LblinitFuncIdsCell{}(),LblinitFuncAddrsCell{}(),LblinitNextFuncIdxCell{}(),LblinitTabIdsCell{}(),LblinitTabAddrsCell{}(),LblinitMemIdsCell{}(),LblinitMemAddrsCell{}(),LblinitGlobIdsCell{}(),LblinitGlobalAddrsCell{}(),LblinitNextGlobIdxCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initModuleInstancesCell(.KList)=>`<moduleInstances>`(`.ModuleInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCell{},R} (
        LblinitModuleInstancesCell{}(),
        Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Stop'ModuleInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initModuleRegistryCell(.KList)=>`<moduleRegistry>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleRegistryCell{},R} (
        LblinitModuleRegistryCell{}(),
        Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMsizeCell(.KList)=>`<msize>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMsizeCell{},R} (
        LblinitMsizeCell{}(),
        Lbl'-LT-'msize'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextFreshIdCell(.KList)=>`<nextFreshId>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFreshIdCell{},R} (
        LblinitNextFreshIdCell{}(),
        Lbl'-LT-'nextFreshId'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextFuncAddrCell(.KList)=>`<nextFuncAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncAddrCell{},R} (
        LblinitNextFuncAddrCell{}(),
        Lbl'-LT-'nextFuncAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextFuncIdxCell(.KList)=>`<nextFuncIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncIdxCell{},R} (
        LblinitNextFuncIdxCell{}(),
        Lbl'-LT-'nextFuncIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextGlobAddrCell(.KList)=>`<nextGlobAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobAddrCell{},R} (
        LblinitNextGlobAddrCell{}(),
        Lbl'-LT-'nextGlobAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextGlobIdxCell(.KList)=>`<nextGlobIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobIdxCell{},R} (
        LblinitNextGlobIdxCell{}(),
        Lbl'-LT-'nextGlobIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextMemAddrCell(.KList)=>`<nextMemAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextMemAddrCell{},R} (
        LblinitNextMemAddrCell{}(),
        Lbl'-LT-'nextMemAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextModuleIdxCell(.KList)=>`<nextModuleIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextModuleIdxCell{},R} (
        LblinitNextModuleIdxCell{}(),
        Lbl'-LT-'nextModuleIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextTabAddrCell(.KList)=>`<nextTabAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTabAddrCell{},R} (
        LblinitNextTabAddrCell{}(),
        Lbl'-LT-'nextTabAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextTypeIdxCell(.KList)=>`<nextTypeIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTypeIdxCell{},R} (
        LblinitNextTypeIdxCell{}(),
        Lbl'-LT-'nextTypeIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initTAddrCell(.KList)=>`<tAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTAddrCell{},R} (
        LblinitTAddrCell{}(),
        Lbl'-LT-'tAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initTabAddrsCell(.KList)=>`<tabAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabAddrsCell{},R} (
        LblinitTabAddrsCell{}(),
        Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTabIdsCell(.KList)=>`<tabIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabIdsCell{},R} (
        LblinitTabIdsCell{}(),
        Lbl'-LT-'tabIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTabInstCell(.KList)=>`TabInstCellMapItem`(initTAddrCell(.KList),`<tabInst>`(initTAddrCell(.KList),initTmaxCell(.KList),initTsizeCell(.KList),initTdataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCellMap{},R} (
        LblinitTabInstCell{}(),
        LblTabInstCellMapItem{}(LblinitTAddrCell{}(),Lbl'-LT-'tabInst'-GT-'{}(LblinitTAddrCell{}(),LblinitTmaxCell{}(),LblinitTsizeCell{}(),LblinitTdataCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initTabsCell(.KList)=>`<tabs>`(`.TabInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCell{},R} (
        LblinitTabsCell{}(),
        Lbl'-LT-'tabs'-GT-'{}(Lbl'Stop'TabInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initTdataCell(.KList)=>`<tdata>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTdataCell{},R} (
        LblinitTdataCell{}(),
        Lbl'-LT-'tdata'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTmaxCell(.KList)=>`<tmax>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTmaxCell{},R} (
        LblinitTmaxCell{}(),
        Lbl'-LT-'tmax'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}()]

// rule initTsizeCell(.KList)=>`<tsize>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTsizeCell{},R} (
        LblinitTsizeCell{}(),
        Lbl'-LT-'tsize'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initTypeIdsCell(.KList)=>`<typeIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeIdsCell{},R} (
        LblinitTypeIdsCell{}(),
        Lbl'-LT-'typeIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTypesCell(.KList)=>`<types>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypesCell{},R} (
        LblinitTypesCell{}(),
        Lbl'-LT-'types'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initValstackCell(.KList)=>`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValstackCell{},R} (
        LblinitValstackCell{}(),
        Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),
      \top{R}()))
  [initializer{}()]

// rule initWasmCell(Init)=>`<wasm>`(initKCell(Init),initValstackCell(.KList),initCurFrameCell(.KList),initModuleRegistryCell(.KList),initModuleIdsCell(.KList),initModuleInstancesCell(.KList),initNextModuleIdxCell(.KList),initMainStoreCell(.KList),initDeterministicMemoryGrowthCell(.KList),initNextFreshIdCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCell{},R} (
        LblinitWasmCell{}(VarInit:SortMap{}),
        Lbl'-LT-'wasm'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitValstackCell{}(),LblinitCurFrameCell{}(),LblinitModuleRegistryCell{}(),LblinitModuleIdsCell{}(),LblinitModuleInstancesCell{}(),LblinitNextModuleIdxCell{}(),LblinitMainStoreCell{}(),LblinitDeterministicMemoryGrowthCell{}(),LblinitNextFreshIdCell{}())),
      \top{R}()))
  [initializer{}()]

// rule inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(OID,`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),TUSE)))=>inj{ImportDefn,Defn}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM_ImportDesc_OptionalId_TypeUse`(OID,TUSE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58ba1bb9206445d5db96e3cfbeb44d322b8dcdfc1d9e960d2fb89feda2ea3df7), contentStartColumn(10), contentStartLine(360), macro, org.kframework.attributes.Location(Location(360,10,360,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule inj{GlobalDefn,Defn}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(OID,`___WASM-TEXT_GlobalSpec_InlineImport_TextFormatGlobalType`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),TYP)))=>inj{ImportDefn,Defn}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(global__)_WASM_ImportDesc_OptionalId_TextFormatGlobalType`(OID,TYP))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9de9db5ebb0b76e11d90bf23dd6cad68ff9dc26754923097777919c8c955aeb7), contentStartColumn(10), contentStartLine(359), macro, org.kframework.attributes.Location(Location(359,10,359,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule inj{MemoryDefn,Defn}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(OID,`___WASM-TEXT_MemorySpec_InlineImport_MemType`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),MT)))=>inj{ImportDefn,Defn}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(memory__)_WASM_ImportDesc_OptionalId_MemType`(OID,MT))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2c5dd4bc285a2c01f0f34fc63f9b722add3ef95cb18a053f3777f47af8b126d3), contentStartColumn(10), contentStartLine(362), macro, org.kframework.attributes.Location(Location(362,10,362,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule inj{TableDefn,Defn}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(OID,`___WASM-TEXT_TableSpec_InlineImport_TableType`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),TT)))=>inj{ImportDefn,Defn}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(table__)_WASM_ImportDesc_OptionalId_TableType`(OID,TT))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(36097bfc4aea209765ea2ef14d865008e6fb47e3c93575bc4a3101acf533e2d3), contentStartColumn(10), contentStartLine(361), macro, org.kframework.attributes.Location(Location(361,10,361,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
// rule `is#Layout`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:Sort'Hash'Layout{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{Sort'Hash'Layout{}, SortKItem{}}(Var'Unds'1:Sort'Hash'Layout{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'Layout{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#Layout`(inj{#Layout,KItem}(#Layout))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'Layout{}(kseq{}(inj{Sort'Hash'Layout{}, SortKItem{}}(Var'Hash'Layout:Sort'Hash'Layout{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAValType{}, SortKItem{}}(Var'Unds'1:SortAValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAValType(inj{AValType,KItem}(AValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAValType{}(kseq{}(inj{SortAValType{}, SortKItem{}}(VarAValType:SortAValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAlignArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAlignArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAlignArg{}, SortKItem{}}(Var'Unds'0:SortAlignArg{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlignArg{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAlignArg(inj{AlignArg,KItem}(AlignArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlignArg{}(kseq{}(inj{SortAlignArg{}, SortKItem{}}(VarAlignArg:SortAlignArg{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAlloc(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAlloc{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAlloc{}, SortKItem{}}(Var'Unds'1:SortAlloc{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlloc{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAlloc(inj{Alloc,KItem}(Alloc))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlloc{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(VarAlloc:SortAlloc{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAllocatedKind(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAllocatedKind{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(Var'Unds'0:SortAllocatedKind{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAllocatedKind{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAllocatedKind(inj{AllocatedKind,KItem}(AllocatedKind))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAllocatedKind{}(kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(VarAllocatedKind:SortAllocatedKind{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBlockInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBlockInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Var'Unds'1:SortBlockInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBlockInstr(inj{BlockInstr,KItem}(BlockInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockInstr{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(VarBlockInstr:SortBlockInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'0:SortBool{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `isByte(_)_WASM-DATA_Bool_Int`(I)=>`_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<Int_`(I,#token("256","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c812f5891174020e6ed77e763d3702ec4c3e7d5e9e1a3e9df5b995fd66ce7d0b), contentStartColumn(10), contentStartLine(547), org.kframework.attributes.Location(Location(547,10,547,68)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisByte'LParUndsRParUnds'WASM-DATA'Unds'Bool'Unds'Int{}(VarI:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("256")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("547"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,10,547,68)"), UNIQUE'Unds'ID{}("c812f5891174020e6ed77e763d3702ec4c3e7d5e9e1a3e9df5b995fd66ce7d0b")]

// rule isByteMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortByteMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortByteMap{}, SortKItem{}}(Var'Unds'0:SortByteMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisByteMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isByteMap(inj{ByteMap,KItem}(ByteMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisByteMap{}(kseq{}(inj{SortByteMap{}, SortKItem{}}(VarByteMap:SortByteMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBytes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBytes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBytes{}, SortKItem{}}(Var'Unds'1:SortBytes{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBytes{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBytes(inj{Bytes,KItem}(Bytes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBytes{}(kseq{}(inj{SortBytes{}, SortKItem{}}(VarBytes:SortBytes{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCell{}, SortKItem{}}(Var'Unds'1:SortCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCell(inj{Cell,KItem}(Cell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isContext(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortContext{}, SortKItem{}}(Var'Unds'0:SortContext{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisContext{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isContext(inj{Context,KItem}(Context))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisContext{}(kseq{}(inj{SortContext{}, SortKItem{}}(VarContext:SortContext{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurFrameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(Var'Unds'0:SortCurFrameCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCell(inj{CurFrameCell,KItem}(CurFrameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCell{}(kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(VarCurFrameCell:SortCurFrameCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurFrameCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(Var'Unds'1:SortCurFrameCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCellFragment(inj{CurFrameCellFragment,KItem}(CurFrameCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellFragment{}(kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(VarCurFrameCellFragment:SortCurFrameCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurFrameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(Var'Unds'1:SortCurFrameCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCellOpt(inj{CurFrameCellOpt,KItem}(CurFrameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellOpt{}(kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(VarCurFrameCellOpt:SortCurFrameCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurModIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurModIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(Var'Unds'1:SortCurModIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurModIdxCell(inj{CurModIdxCell,KItem}(CurModIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCell{}(kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(VarCurModIdxCell:SortCurModIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurModIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurModIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortCurModIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurModIdxCellOpt(inj{CurModIdxCellOpt,KItem}(CurModIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCellOpt{}(kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(VarCurModIdxCellOpt:SortCurModIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvtOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvtOp{}, SortKItem{}}(Var'Unds'0:SortCvtOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtOp(inj{CvtOp,KItem}(CvtOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtOp{}(kseq{}(inj{SortCvtOp{}, SortKItem{}}(VarCvtOp:SortCvtOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtf32Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCvtf32Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(Var'Unds'1:SortCvtf32Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf32Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtf32Op(inj{Cvtf32Op,KItem}(Cvtf32Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf32Op{}(kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(VarCvtf32Op:SortCvtf32Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtf64Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCvtf64Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(Var'Unds'1:SortCvtf64Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf64Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtf64Op(inj{Cvtf64Op,KItem}(Cvtf64Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf64Op{}(kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(VarCvtf64Op:SortCvtf64Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvti32Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvti32Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvti32Op{}, SortKItem{}}(Var'Unds'0:SortCvti32Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti32Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvti32Op(inj{Cvti32Op,KItem}(Cvti32Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti32Op{}(kseq{}(inj{SortCvti32Op{}, SortKItem{}}(VarCvti32Op:SortCvti32Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvti64Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvti64Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvti64Op{}, SortKItem{}}(Var'Unds'0:SortCvti64Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti64Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvti64Op(inj{Cvti64Op,KItem}(Cvti64Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti64Op{}(kseq{}(inj{SortCvti64Op{}, SortKItem{}}(VarCvti64Op:SortCvti64Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDataDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDataDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDataDefn{}, SortKItem{}}(Var'Unds'1:SortDataDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDataDefn(inj{DataDefn,KItem}(DataDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataDefn{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(VarDataDefn:SortDataDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDataString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDataString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDataString{}, SortKItem{}}(Var'Unds'1:SortDataString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDataString(inj{DataString,KItem}(DataString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataString{}(kseq{}(inj{SortDataString{}, SortKItem{}}(VarDataString:SortDataString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefn{}, SortKItem{}}(Var'Unds'0:SortDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefn(inj{Defn,KItem}(Defn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefn{}(kseq{}(inj{SortDefn{}, SortKItem{}}(VarDefn:SortDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefns(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefns{}, SortKItem{}}(Var'Unds'1:SortDefns{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefns{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefns(inj{Defns,KItem}(Defns))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefns{}(kseq{}(inj{SortDefns{}, SortKItem{}}(VarDefns:SortDefns{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeterministicMemoryGrowthCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeterministicMemoryGrowthCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(Var'Unds'1:SortDeterministicMemoryGrowthCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeterministicMemoryGrowthCell(inj{DeterministicMemoryGrowthCell,KItem}(DeterministicMemoryGrowthCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCell{}(kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(VarDeterministicMemoryGrowthCell:SortDeterministicMemoryGrowthCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeterministicMemoryGrowthCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDeterministicMemoryGrowthCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(Var'Unds'0:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeterministicMemoryGrowthCellOpt(inj{DeterministicMemoryGrowthCellOpt,KItem}(DeterministicMemoryGrowthCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCellOpt{}(kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(VarDeterministicMemoryGrowthCellOpt:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElemDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElemDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortElemDefn{}, SortKItem{}}(Var'Unds'1:SortElemDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElemDefn(inj{ElemDefn,KItem}(ElemDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemDefn{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(VarElemDefn:SortElemDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElemSegment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortElemSegment{}, SortKItem{}}(Var'Unds'1:SortElemSegment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemSegment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElemSegment(inj{ElemSegment,KItem}(ElemSegment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemSegment{}(kseq{}(inj{SortElemSegment{}, SortKItem{}}(VarElemSegment:SortElemSegment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEmptyStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEmptyStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(Var'Unds'1:SortEmptyStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEmptyStmt(inj{EmptyStmt,KItem}(EmptyStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmt{}(kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(VarEmptyStmt:SortEmptyStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEmptyStmts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortEmptyStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Var'Unds'0:SortEmptyStmts{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmts{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEmptyStmts(inj{EmptyStmts,KItem}(EmptyStmts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmts{}(kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(VarEmptyStmts:SortEmptyStmts{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEndianness(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEndianness{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEndianness{}, SortKItem{}}(Var'Unds'1:SortEndianness{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEndianness{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEndianness(inj{Endianness,KItem}(Endianness))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEndianness{}(kseq{}(inj{SortEndianness{}, SortKItem{}}(VarEndianness:SortEndianness{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExportDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExportDefn{}, SortKItem{}}(Var'Unds'1:SortExportDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportDefn(inj{ExportDefn,KItem}(ExportDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportDefn{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(VarExportDefn:SortExportDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortExportsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExportsCell{}, SortKItem{}}(Var'Unds'0:SortExportsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportsCell(inj{ExportsCell,KItem}(ExportsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCell{}(kseq{}(inj{SortExportsCell{}, SortKItem{}}(VarExportsCell:SortExportsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExportsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(Var'Unds'1:SortExportsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportsCellOpt(inj{ExportsCellOpt,KItem}(ExportsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCellOpt{}(kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(VarExportsCellOpt:SortExportsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExternval(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortExternval{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExternval{}, SortKItem{}}(Var'Unds'0:SortExternval{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExternval{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExternval(inj{Externval,KItem}(Externval))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExternval{}(kseq{}(inj{SortExternval{}, SortKItem{}}(VarExternval:SortExternval{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFAddrCell{}, SortKItem{}}(Var'Unds'1:SortFAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFAddrCell(inj{FAddrCell,KItem}(FAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCell{}(kseq{}(inj{SortFAddrCell{}, SortKItem{}}(VarFAddrCell:SortFAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortFAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFAddrCellOpt(inj{FAddrCellOpt,KItem}(FAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCellOpt{}(kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(VarFAddrCellOpt:SortFAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFBinOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFBinOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFBinOp{}, SortKItem{}}(Var'Unds'1:SortFBinOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFBinOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFBinOp(inj{FBinOp,KItem}(FBinOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFBinOp{}(kseq{}(inj{SortFBinOp{}, SortKItem{}}(VarFBinOp:SortFBinOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFCodeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFCodeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFCodeCell{}, SortKItem{}}(Var'Unds'1:SortFCodeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFCodeCell(inj{FCodeCell,KItem}(FCodeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCell{}(kseq{}(inj{SortFCodeCell{}, SortKItem{}}(VarFCodeCell:SortFCodeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFCodeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFCodeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(Var'Unds'1:SortFCodeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFCodeCellOpt(inj{FCodeCellOpt,KItem}(FCodeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCellOpt{}(kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(VarFCodeCellOpt:SortFCodeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFLocalCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFLocalCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFLocalCell{}, SortKItem{}}(Var'Unds'1:SortFLocalCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFLocalCell(inj{FLocalCell,KItem}(FLocalCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCell{}(kseq{}(inj{SortFLocalCell{}, SortKItem{}}(VarFLocalCell:SortFLocalCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFLocalCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFLocalCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(Var'Unds'0:SortFLocalCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFLocalCellOpt(inj{FLocalCellOpt,KItem}(FLocalCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCellOpt{}(kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(VarFLocalCellOpt:SortFLocalCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFModInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFModInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFModInstCell{}, SortKItem{}}(Var'Unds'1:SortFModInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFModInstCell(inj{FModInstCell,KItem}(FModInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCell{}(kseq{}(inj{SortFModInstCell{}, SortKItem{}}(VarFModInstCell:SortFModInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFModInstCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFModInstCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(Var'Unds'1:SortFModInstCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFModInstCellOpt(inj{FModInstCellOpt,KItem}(FModInstCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCellOpt{}(kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(VarFModInstCellOpt:SortFModInstCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFRelOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFRelOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFRelOp{}, SortKItem{}}(Var'Unds'0:SortFRelOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFRelOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFRelOp(inj{FRelOp,KItem}(FRelOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFRelOp{}(kseq{}(inj{SortFRelOp{}, SortKItem{}}(VarFRelOp:SortFRelOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFTypeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFTypeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFTypeCell{}, SortKItem{}}(Var'Unds'0:SortFTypeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFTypeCell(inj{FTypeCell,KItem}(FTypeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCell{}(kseq{}(inj{SortFTypeCell{}, SortKItem{}}(VarFTypeCell:SortFTypeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFTypeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFTypeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(Var'Unds'0:SortFTypeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFTypeCellOpt(inj{FTypeCellOpt,KItem}(FTypeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCellOpt{}(kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(VarFTypeCellOpt:SortFTypeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFUnOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFUnOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFUnOp{}, SortKItem{}}(Var'Unds'0:SortFUnOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFUnOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFUnOp(inj{FUnOp,KItem}(FUnOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFUnOp{}(kseq{}(inj{SortFUnOp{}, SortKItem{}}(VarFUnOp:SortFUnOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFVal{}, SortKItem{}}(Var'Unds'0:SortFVal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFVal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFVal(inj{FVal,KItem}(FVal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFVal{}(kseq{}(inj{SortFVal{}, SortKItem{}}(VarFVal:SortFVal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFValType{}, SortKItem{}}(Var'Unds'1:SortFValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFValType(inj{FValType,KItem}(FValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFValType{}(kseq{}(inj{SortFValType{}, SortKItem{}}(VarFValType:SortFValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'1:SortFloat{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFoldedInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFoldedInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Var'Unds'0:SortFoldedInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFoldedInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFoldedInstr(inj{FoldedInstr,KItem}(FoldedInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFoldedInstr{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(VarFoldedInstr:SortFoldedInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFrame(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFrame{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFrame{}, SortKItem{}}(Var'Unds'0:SortFrame{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFrame{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFrame(inj{Frame,KItem}(Frame))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFrame{}(kseq{}(inj{SortFrame{}, SortKItem{}}(VarFrame:SortFrame{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(Var'Unds'1:SortFuncAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncAddrsCell(inj{FuncAddrsCell,KItem}(FuncAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCell{}(kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(VarFuncAddrsCell:SortFuncAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(Var'Unds'0:SortFuncAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncAddrsCellOpt(inj{FuncAddrsCellOpt,KItem}(FuncAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCellOpt{}(kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(VarFuncAddrsCellOpt:SortFuncAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(Var'Unds'0:SortFuncDefCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCell(inj{FuncDefCell,KItem}(FuncDefCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCell{}(kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(VarFuncDefCell:SortFuncDefCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(Var'Unds'0:SortFuncDefCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCellFragment(inj{FuncDefCellFragment,KItem}(FuncDefCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellFragment{}(kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(VarFuncDefCellFragment:SortFuncDefCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(Var'Unds'0:SortFuncDefCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCellMap(inj{FuncDefCellMap,KItem}(FuncDefCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellMap{}(kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(VarFuncDefCellMap:SortFuncDefCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Var'Unds'0:SortFuncDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefn(inj{FuncDefn,KItem}(FuncDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefn{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(VarFuncDefn:SortFuncDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(Var'Unds'0:SortFuncIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdsCell(inj{FuncIdsCell,KItem}(FuncIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCell{}(kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(VarFuncIdsCell:SortFuncIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdsCellOpt(inj{FuncIdsCellOpt,KItem}(FuncIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCellOpt{}(kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(VarFuncIdsCellOpt:SortFuncIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncSpec{}, SortKItem{}}(Var'Unds'1:SortFuncSpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncSpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncSpec(inj{FuncSpec,KItem}(FuncSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncSpec{}(kseq{}(inj{SortFuncSpec{}, SortKItem{}}(VarFuncSpec:SortFuncSpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncType{}, SortKItem{}}(Var'Unds'0:SortFuncType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncType(inj{FuncType,KItem}(FuncType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncType{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(VarFuncType:SortFuncType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncsCell{}, SortKItem{}}(Var'Unds'1:SortFuncsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCell(inj{FuncsCell,KItem}(FuncsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCell{}(kseq{}(inj{SortFuncsCell{}, SortKItem{}}(VarFuncsCell:SortFuncsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(Var'Unds'0:SortFuncsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCellFragment(inj{FuncsCellFragment,KItem}(FuncsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellFragment{}(kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(VarFuncsCellFragment:SortFuncsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCellOpt(inj{FuncsCellOpt,KItem}(FuncsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellOpt{}(kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(VarFuncsCellOpt:SortFuncsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGAddrCell{}, SortKItem{}}(Var'Unds'1:SortGAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGAddrCell(inj{GAddrCell,KItem}(GAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCell{}(kseq{}(inj{SortGAddrCell{}, SortKItem{}}(VarGAddrCell:SortGAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortGAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGAddrCellOpt(inj{GAddrCellOpt,KItem}(GAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCellOpt{}(kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(VarGAddrCellOpt:SortGAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGMutCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGMutCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGMutCell{}, SortKItem{}}(Var'Unds'1:SortGMutCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGMutCell(inj{GMutCell,KItem}(GMutCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCell{}(kseq{}(inj{SortGMutCell{}, SortKItem{}}(VarGMutCell:SortGMutCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGMutCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGMutCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(Var'Unds'1:SortGMutCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGMutCellOpt(inj{GMutCellOpt,KItem}(GMutCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCellOpt{}(kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(VarGMutCellOpt:SortGMutCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGValueCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGValueCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGValueCell{}, SortKItem{}}(Var'Unds'0:SortGValueCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGValueCell(inj{GValueCell,KItem}(GValueCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCell{}(kseq{}(inj{SortGValueCell{}, SortKItem{}}(VarGValueCell:SortGValueCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGValueCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGValueCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(Var'Unds'0:SortGValueCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGValueCellOpt(inj{GValueCellOpt,KItem}(GValueCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCellOpt{}(kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(VarGValueCellOpt:SortGValueCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedTopCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'0:SortGeneratedTopCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(Var'Unds'1:SortGlobIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobIdsCell(inj{GlobIdsCell,KItem}(GlobIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCell{}(kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(VarGlobIdsCell:SortGlobIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortGlobIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobIdsCellOpt(inj{GlobIdsCellOpt,KItem}(GlobIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCellOpt{}(kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(VarGlobIdsCellOpt:SortGlobIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(Var'Unds'1:SortGlobalAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalAddrsCell(inj{GlobalAddrsCell,KItem}(GlobalAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCell{}(kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(VarGlobalAddrsCell:SortGlobalAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(Var'Unds'0:SortGlobalAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalAddrsCellOpt(inj{GlobalAddrsCellOpt,KItem}(GlobalAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCellOpt{}(kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(VarGlobalAddrsCellOpt:SortGlobalAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Var'Unds'1:SortGlobalDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalDefn(inj{GlobalDefn,KItem}(GlobalDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalDefn{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(VarGlobalDefn:SortGlobalDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(Var'Unds'1:SortGlobalInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCell(inj{GlobalInstCell,KItem}(GlobalInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCell{}(kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(VarGlobalInstCell:SortGlobalInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortGlobalInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCellFragment(inj{GlobalInstCellFragment,KItem}(GlobalInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellFragment{}(kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(VarGlobalInstCellFragment:SortGlobalInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(Var'Unds'0:SortGlobalInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCellMap(inj{GlobalInstCellMap,KItem}(GlobalInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellMap{}(kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(VarGlobalInstCellMap:SortGlobalInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(Var'Unds'0:SortGlobalSpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalSpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalSpec(inj{GlobalSpec,KItem}(GlobalSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalSpec{}(kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(VarGlobalSpec:SortGlobalSpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalType{}, SortKItem{}}(Var'Unds'0:SortGlobalType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalType(inj{GlobalType,KItem}(GlobalType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalType{}(kseq{}(inj{SortGlobalType{}, SortKItem{}}(VarGlobalType:SortGlobalType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(Var'Unds'1:SortGlobalsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCell(inj{GlobalsCell,KItem}(GlobalsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCell{}(kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(VarGlobalsCell:SortGlobalsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(Var'Unds'1:SortGlobalsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCellFragment(inj{GlobalsCellFragment,KItem}(GlobalsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellFragment{}(kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(VarGlobalsCellFragment:SortGlobalsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(Var'Unds'0:SortGlobalsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCellOpt(inj{GlobalsCellOpt,KItem}(GlobalsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellOpt{}(kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(VarGlobalsCellOpt:SortGlobalsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIBinOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIBinOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIBinOp{}, SortKItem{}}(Var'Unds'0:SortIBinOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIBinOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIBinOp(inj{IBinOp,KItem}(IBinOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIBinOp{}(kseq{}(inj{SortIBinOp{}, SortKItem{}}(VarIBinOp:SortIBinOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIRelOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIRelOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIRelOp{}, SortKItem{}}(Var'Unds'1:SortIRelOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIRelOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIRelOp(inj{IRelOp,KItem}(IRelOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIRelOp{}(kseq{}(inj{SortIRelOp{}, SortKItem{}}(VarIRelOp:SortIRelOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIUnOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIUnOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIUnOp{}, SortKItem{}}(Var'Unds'0:SortIUnOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIUnOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIUnOp(inj{IUnOp,KItem}(IUnOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIUnOp{}(kseq{}(inj{SortIUnOp{}, SortKItem{}}(VarIUnOp:SortIUnOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIVal{}, SortKItem{}}(Var'Unds'1:SortIVal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIVal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIVal(inj{IVal,KItem}(IVal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIVal{}(kseq{}(inj{SortIVal{}, SortKItem{}}(VarIVal:SortIVal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIValType{}, SortKItem{}}(Var'Unds'1:SortIValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIValType(inj{IValType,KItem}(IValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIValType{}(kseq{}(inj{SortIValType{}, SortKItem{}}(VarIValType:SortIValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdentifier(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdentifier{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'1:SortIdentifier{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifier{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdentifier(inj{Identifier,KItem}(Identifier))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifier{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarIdentifier:SortIdentifier{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdentifierToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdentifierToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(Var'Unds'1:SortIdentifierToken{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifierToken{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdentifierToken(inj{IdentifierToken,KItem}(IdentifierToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifierToken{}(kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(VarIdentifierToken:SortIdentifierToken{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isImportDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortImportDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortImportDefn{}, SortKItem{}}(Var'Unds'1:SortImportDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isImportDefn(inj{ImportDefn,KItem}(ImportDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDefn{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(VarImportDefn:SortImportDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isImportDesc(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortImportDesc{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortImportDesc{}, SortKItem{}}(Var'Unds'1:SortImportDesc{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDesc{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isImportDesc(inj{ImportDesc,KItem}(ImportDesc))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDesc{}(kseq{}(inj{SortImportDesc{}, SortKItem{}}(VarImportDesc:SortImportDesc{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIndex(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIndex{}, SortKItem{}}(Var'Unds'1:SortIndex{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIndex{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIndex(inj{Index,KItem}(Index))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIndex{}(kseq{}(inj{SortIndex{}, SortKItem{}}(VarIndex:SortIndex{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `isInfinite(_)_FLOAT_Bool_Float`(F)=>`_orBool__BOOL_Bool_Bool_Bool`(`_>Float__FLOAT_Bool_Float_Float`(F,`maxValueFloat(_,_)_FLOAT_Float_Int_Int`(`precisionFloat(_)_FLOAT_Int_Float`(F),`exponentBitsFloat(_)_FLOAT_Int_Float`(F))),`_<Float__FLOAT_Bool_Float_Float`(F,`--Float__FLOAT_Float_Float`(`maxValueFloat(_,_)_FLOAT_Float_Int_Int`(`precisionFloat(_)_FLOAT_Int_Float`(F),`exponentBitsFloat(_)_FLOAT_Int_Float`(F))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1921cfc9fdc5a38109d143ca5ca0b4c7c29e2c5885a62a62d9a7e0df6dae68f), contentStartColumn(8), contentStartLine(599), org.kframework.attributes.Location(Location(599,8,599,173)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF:SortFloat{},LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}))),Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF:SortFloat{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("599"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,8,599,173)"), UNIQUE'Unds'ID{}("d1921cfc9fdc5a38109d143ca5ca0b4c7c29e2c5885a62a62d9a7e0df6dae68f")]

// rule isInlineExport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInlineExport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInlineExport{}, SortKItem{}}(Var'Unds'0:SortInlineExport{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineExport{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInlineExport(inj{InlineExport,KItem}(InlineExport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineExport{}(kseq{}(inj{SortInlineExport{}, SortKItem{}}(VarInlineExport:SortInlineExport{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInlineImport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInlineImport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInlineImport{}, SortKItem{}}(Var'Unds'0:SortInlineImport{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineImport{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInlineImport(inj{InlineImport,KItem}(InlineImport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineImport{}(kseq{}(inj{SortInlineImport{}, SortKItem{}}(VarInlineImport:SortInlineImport{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInstr{}, SortKItem{}}(Var'Unds'0:SortInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstr(inj{Instr,KItem}(Instr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstr{}(kseq{}(inj{SortInstr{}, SortKItem{}}(VarInstr:SortInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstrs(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInstrs{}, SortKItem{}}(Var'Unds'1:SortInstrs{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrs{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstrs(inj{Instrs,KItem}(Instrs))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrs{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarInstrs:SortInstrs{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'0:SortInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisK{}(VarK:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'1:SortKCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'1:SortKCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'1:SortKConfigVar{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(Var'Unds'0:SortKItem{},dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(kseq{}(VarKItem:SortKItem{},dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabel(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabel{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabel{}, SortKItem{}}(Var'Unds'1:SortLabel{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabel{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabel(inj{Label,KItem}(Label))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabel{}(kseq{}(inj{SortLabel{}, SortKItem{}}(VarLabel:SortLabel{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelDepthCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabelDepthCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelDepthCell{}, SortKItem{}}(Var'Unds'1:SortLabelDepthCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelDepthCell(inj{LabelDepthCell,KItem}(LabelDepthCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCell{}(kseq{}(inj{SortLabelDepthCell{}, SortKItem{}}(VarLabelDepthCell:SortLabelDepthCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelDepthCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabelDepthCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelDepthCellOpt{}, SortKItem{}}(Var'Unds'1:SortLabelDepthCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelDepthCellOpt(inj{LabelDepthCellOpt,KItem}(LabelDepthCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCellOpt{}(kseq{}(inj{SortLabelDepthCellOpt{}, SortKItem{}}(VarLabelDepthCellOpt:SortLabelDepthCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLabelIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelIdsCell{}, SortKItem{}}(Var'Unds'0:SortLabelIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelIdsCell(inj{LabelIdsCell,KItem}(LabelIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCell{}(kseq{}(inj{SortLabelIdsCell{}, SortKItem{}}(VarLabelIdsCell:SortLabelIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLabelIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortLabelIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelIdsCellOpt(inj{LabelIdsCellOpt,KItem}(LabelIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCellOpt{}(kseq{}(inj{SortLabelIdsCellOpt{}, SortKItem{}}(VarLabelIdsCellOpt:SortLabelIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLimits(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLimits{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLimits{}, SortKItem{}}(Var'Unds'0:SortLimits{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLimits{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLimits(inj{Limits,KItem}(Limits))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLimits{}(kseq{}(inj{SortLimits{}, SortKItem{}}(VarLimits:SortLimits{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'0:SortList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLoadOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLoadOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLoadOp{}, SortKItem{}}(Var'Unds'0:SortLoadOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLoadOp(inj{LoadOp,KItem}(LoadOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOp{}(kseq{}(inj{SortLoadOp{}, SortKItem{}}(VarLoadOp:SortLoadOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLoadOpM(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLoadOpM{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLoadOpM{}, SortKItem{}}(Var'Unds'1:SortLoadOpM{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOpM{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLoadOpM(inj{LoadOpM,KItem}(LoadOpM))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOpM{}(kseq{}(inj{SortLoadOpM{}, SortKItem{}}(VarLoadOpM:SortLoadOpM{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalDecl{}, SortKItem{}}(Var'Unds'1:SortLocalDecl{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecl{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalDecl(inj{LocalDecl,KItem}(LocalDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecl{}(kseq{}(inj{SortLocalDecl{}, SortKItem{}}(VarLocalDecl:SortLocalDecl{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalDecls(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalDecls{}, SortKItem{}}(Var'Unds'0:SortLocalDecls{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecls{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalDecls(inj{LocalDecls,KItem}(LocalDecls))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecls{}(kseq{}(inj{SortLocalDecls{}, SortKItem{}}(VarLocalDecls:SortLocalDecls{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalsCell{}, SortKItem{}}(Var'Unds'1:SortLocalsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalsCell(inj{LocalsCell,KItem}(LocalsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCell{}(kseq{}(inj{SortLocalsCell{}, SortKItem{}}(VarLocalsCell:SortLocalsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(Var'Unds'1:SortLocalsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalsCellOpt(inj{LocalsCellOpt,KItem}(LocalsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCellOpt{}(kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(VarLocalsCellOpt:SortLocalsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMAddrCell{}, SortKItem{}}(Var'Unds'0:SortMAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMAddrCell(inj{MAddrCell,KItem}(MAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCell{}(kseq{}(inj{SortMAddrCell{}, SortKItem{}}(VarMAddrCell:SortMAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortMAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMAddrCellOpt(inj{MAddrCellOpt,KItem}(MAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCellOpt{}(kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(VarMAddrCellOpt:SortMAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMInt{}, SortKItem{}}(Var'Unds'1:SortMInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMInt(inj{MInt,KItem}(MInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMInt{}(kseq{}(inj{SortMInt{}, SortKItem{}}(VarMInt:SortMInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMainStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(Var'Unds'0:SortMainStoreCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCell(inj{MainStoreCell,KItem}(MainStoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCell{}(kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(VarMainStoreCell:SortMainStoreCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMainStoreCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(Var'Unds'1:SortMainStoreCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCellFragment(inj{MainStoreCellFragment,KItem}(MainStoreCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellFragment{}(kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(VarMainStoreCellFragment:SortMainStoreCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMainStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(Var'Unds'1:SortMainStoreCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCellOpt(inj{MainStoreCellOpt,KItem}(MainStoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellOpt{}(kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(VarMainStoreCellOpt:SortMainStoreCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'1:SortMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMdataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMdataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMdataCell{}, SortKItem{}}(Var'Unds'1:SortMdataCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMdataCell(inj{MdataCell,KItem}(MdataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCell{}(kseq{}(inj{SortMdataCell{}, SortKItem{}}(VarMdataCell:SortMdataCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMdataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMdataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(Var'Unds'1:SortMdataCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMdataCellOpt(inj{MdataCellOpt,KItem}(MdataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCellOpt{}(kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(VarMdataCellOpt:SortMdataCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(Var'Unds'0:SortMemAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemAddrsCell(inj{MemAddrsCell,KItem}(MemAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCell{}(kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(VarMemAddrsCell:SortMemAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortMemAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemAddrsCellOpt(inj{MemAddrsCellOpt,KItem}(MemAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCellOpt{}(kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(VarMemAddrsCellOpt:SortMemAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemArg{}, SortKItem{}}(Var'Unds'0:SortMemArg{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemArg{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemArg(inj{MemArg,KItem}(MemArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemArg{}(kseq{}(inj{SortMemArg{}, SortKItem{}}(VarMemArg:SortMemArg{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(Var'Unds'0:SortMemIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemIdsCell(inj{MemIdsCell,KItem}(MemIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCell{}(kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(VarMemIdsCell:SortMemIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortMemIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemIdsCellOpt(inj{MemIdsCellOpt,KItem}(MemIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCellOpt{}(kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(VarMemIdsCellOpt:SortMemIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemInstCell{}, SortKItem{}}(Var'Unds'0:SortMemInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCell(inj{MemInstCell,KItem}(MemInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCell{}(kseq{}(inj{SortMemInstCell{}, SortKItem{}}(VarMemInstCell:SortMemInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortMemInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCellFragment(inj{MemInstCellFragment,KItem}(MemInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellFragment{}(kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(VarMemInstCellFragment:SortMemInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(Var'Unds'1:SortMemInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCellMap(inj{MemInstCellMap,KItem}(MemInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellMap{}(kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(VarMemInstCellMap:SortMemInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemType{}, SortKItem{}}(Var'Unds'1:SortMemType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemType(inj{MemType,KItem}(MemType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemType{}(kseq{}(inj{SortMemType{}, SortKItem{}}(VarMemType:SortMemType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemoryDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemoryDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Var'Unds'1:SortMemoryDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemoryDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemoryDefn(inj{MemoryDefn,KItem}(MemoryDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemoryDefn{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(VarMemoryDefn:SortMemoryDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemorySpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemorySpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemorySpec{}, SortKItem{}}(Var'Unds'1:SortMemorySpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemorySpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemorySpec(inj{MemorySpec,KItem}(MemorySpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemorySpec{}(kseq{}(inj{SortMemorySpec{}, SortKItem{}}(VarMemorySpec:SortMemorySpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemsCell{}, SortKItem{}}(Var'Unds'1:SortMemsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCell(inj{MemsCell,KItem}(MemsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCell{}(kseq{}(inj{SortMemsCell{}, SortKItem{}}(VarMemsCell:SortMemsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(Var'Unds'0:SortMemsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCellFragment(inj{MemsCellFragment,KItem}(MemsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellFragment{}(kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(VarMemsCellFragment:SortMemsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(Var'Unds'0:SortMemsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCellOpt(inj{MemsCellOpt,KItem}(MemsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellOpt{}(kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(VarMemsCellOpt:SortMemsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMmaxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMmaxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMmaxCell{}, SortKItem{}}(Var'Unds'0:SortMmaxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMmaxCell(inj{MmaxCell,KItem}(MmaxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCell{}(kseq{}(inj{SortMmaxCell{}, SortKItem{}}(VarMmaxCell:SortMmaxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMmaxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMmaxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(Var'Unds'1:SortMmaxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMmaxCellOpt(inj{MmaxCellOpt,KItem}(MmaxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCellOpt{}(kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(VarMmaxCellOpt:SortMmaxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModIdxCell{}, SortKItem{}}(Var'Unds'1:SortModIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModIdxCell(inj{ModIdxCell,KItem}(ModIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCell{}(kseq{}(inj{SortModIdxCell{}, SortKItem{}}(VarModIdxCell:SortModIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortModIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModIdxCellOpt(inj{ModIdxCellOpt,KItem}(ModIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCellOpt{}(kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(VarModIdxCellOpt:SortModIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Var'Unds'1:SortModuleDecl{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleDecl{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleDecl(inj{ModuleDecl,KItem}(ModuleDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleDecl{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(VarModuleDecl:SortModuleDecl{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(Var'Unds'1:SortModuleIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdsCell(inj{ModuleIdsCell,KItem}(ModuleIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCell{}(kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(VarModuleIdsCell:SortModuleIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdsCellOpt(inj{ModuleIdsCellOpt,KItem}(ModuleIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCellOpt{}(kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(VarModuleIdsCellOpt:SortModuleIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(Var'Unds'1:SortModuleInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCell(inj{ModuleInstCell,KItem}(ModuleInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCell{}(kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(VarModuleInstCell:SortModuleInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortModuleInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCellFragment(inj{ModuleInstCellFragment,KItem}(ModuleInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellFragment{}(kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(VarModuleInstCellFragment:SortModuleInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(Var'Unds'0:SortModuleInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCellMap(inj{ModuleInstCellMap,KItem}(ModuleInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellMap{}(kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(VarModuleInstCellMap:SortModuleInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstancesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(Var'Unds'0:SortModuleInstancesCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCell(inj{ModuleInstancesCell,KItem}(ModuleInstancesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCell{}(kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(VarModuleInstancesCell:SortModuleInstancesCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstancesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(Var'Unds'1:SortModuleInstancesCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCellFragment(inj{ModuleInstancesCellFragment,KItem}(ModuleInstancesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellFragment{}(kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(VarModuleInstancesCellFragment:SortModuleInstancesCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstancesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleInstancesCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCellOpt(inj{ModuleInstancesCellOpt,KItem}(ModuleInstancesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellOpt{}(kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(VarModuleInstancesCellOpt:SortModuleInstancesCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleRegistryCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleRegistryCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(Var'Unds'1:SortModuleRegistryCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleRegistryCell(inj{ModuleRegistryCell,KItem}(ModuleRegistryCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCell{}(kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(VarModuleRegistryCell:SortModuleRegistryCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleRegistryCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleRegistryCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleRegistryCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleRegistryCellOpt(inj{ModuleRegistryCellOpt,KItem}(ModuleRegistryCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCellOpt{}(kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(VarModuleRegistryCellOpt:SortModuleRegistryCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMsizeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMsizeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMsizeCell{}, SortKItem{}}(Var'Unds'0:SortMsizeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMsizeCell(inj{MsizeCell,KItem}(MsizeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCell{}(kseq{}(inj{SortMsizeCell{}, SortKItem{}}(VarMsizeCell:SortMsizeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMsizeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMsizeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(Var'Unds'0:SortMsizeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMsizeCellOpt(inj{MsizeCellOpt,KItem}(MsizeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCellOpt{}(kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(VarMsizeCellOpt:SortMsizeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMut(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMut{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMut{}, SortKItem{}}(Var'Unds'1:SortMut{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMut{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMut(inj{Mut,KItem}(Mut))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMut{}(kseq{}(inj{SortMut{}, SortKItem{}}(VarMut:SortMut{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNValType{}, SortKItem{}}(Var'Unds'0:SortNValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNValType(inj{NValType,KItem}(NValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNValType{}(kseq{}(inj{SortNValType{}, SortKItem{}}(VarNValType:SortNValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFreshIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFreshIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFreshIdCell{}, SortKItem{}}(Var'Unds'1:SortNextFreshIdCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFreshIdCell(inj{NextFreshIdCell,KItem}(NextFreshIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCell{}(kseq{}(inj{SortNextFreshIdCell{}, SortKItem{}}(VarNextFreshIdCell:SortNextFreshIdCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFreshIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFreshIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFreshIdCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextFreshIdCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFreshIdCellOpt(inj{NextFreshIdCellOpt,KItem}(NextFreshIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCellOpt{}(kseq{}(inj{SortNextFreshIdCellOpt{}, SortKItem{}}(VarNextFreshIdCellOpt:SortNextFreshIdCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextFuncAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(Var'Unds'0:SortNextFuncAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncAddrCell(inj{NextFuncAddrCell,KItem}(NextFuncAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCell{}(kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(VarNextFuncAddrCell:SortNextFuncAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFuncAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextFuncAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncAddrCellOpt(inj{NextFuncAddrCellOpt,KItem}(NextFuncAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCellOpt{}(kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(VarNextFuncAddrCellOpt:SortNextFuncAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFuncIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextFuncIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncIdxCell(inj{NextFuncIdxCell,KItem}(NextFuncIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCell{}(kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(VarNextFuncIdxCell:SortNextFuncIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextFuncIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextFuncIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncIdxCellOpt(inj{NextFuncIdxCellOpt,KItem}(NextFuncIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCellOpt{}(kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(VarNextFuncIdxCellOpt:SortNextFuncIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextGlobAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobAddrCell(inj{NextGlobAddrCell,KItem}(NextGlobAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCell{}(kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(VarNextGlobAddrCell:SortNextGlobAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextGlobAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobAddrCellOpt(inj{NextGlobAddrCellOpt,KItem}(NextGlobAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCellOpt{}(kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(VarNextGlobAddrCellOpt:SortNextGlobAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextGlobIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobIdxCell(inj{NextGlobIdxCell,KItem}(NextGlobIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCell{}(kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(VarNextGlobIdxCell:SortNextGlobIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextGlobIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextGlobIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobIdxCellOpt(inj{NextGlobIdxCellOpt,KItem}(NextGlobIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCellOpt{}(kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(VarNextGlobIdxCellOpt:SortNextGlobIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextMemAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextMemAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextMemAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextMemAddrCell(inj{NextMemAddrCell,KItem}(NextMemAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCell{}(kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(VarNextMemAddrCell:SortNextMemAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextMemAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextMemAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextMemAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextMemAddrCellOpt(inj{NextMemAddrCellOpt,KItem}(NextMemAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCellOpt{}(kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(VarNextMemAddrCellOpt:SortNextMemAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextModuleIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextModuleIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextModuleIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextModuleIdxCell(inj{NextModuleIdxCell,KItem}(NextModuleIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCell{}(kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(VarNextModuleIdxCell:SortNextModuleIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextModuleIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextModuleIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextModuleIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextModuleIdxCellOpt(inj{NextModuleIdxCellOpt,KItem}(NextModuleIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCellOpt{}(kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(VarNextModuleIdxCellOpt:SortNextModuleIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTabAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTabAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextTabAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTabAddrCell(inj{NextTabAddrCell,KItem}(NextTabAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCell{}(kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(VarNextTabAddrCell:SortNextTabAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTabAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTabAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextTabAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTabAddrCellOpt(inj{NextTabAddrCellOpt,KItem}(NextTabAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCellOpt{}(kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(VarNextTabAddrCellOpt:SortNextTabAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTypeIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTypeIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextTypeIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTypeIdxCell(inj{NextTypeIdxCell,KItem}(NextTypeIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCell{}(kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(VarNextTypeIdxCell:SortNextTypeIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTypeIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTypeIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextTypeIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTypeIdxCellOpt(inj{NextTypeIdxCellOpt,KItem}(NextTypeIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCellOpt{}(kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(VarNextTypeIdxCellOpt:SortNextTypeIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNumber(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNumber{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNumber{}, SortKItem{}}(Var'Unds'1:SortNumber{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumber{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNumber(inj{Number,KItem}(Number))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumber{}(kseq{}(inj{SortNumber{}, SortKItem{}}(VarNumber:SortNumber{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOffset(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOffset{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOffset{}, SortKItem{}}(Var'Unds'1:SortOffset{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffset{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOffset(inj{Offset,KItem}(Offset))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffset{}(kseq{}(inj{SortOffset{}, SortKItem{}}(VarOffset:SortOffset{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOffsetArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOffsetArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOffsetArg{}, SortKItem{}}(Var'Unds'1:SortOffsetArg{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffsetArg{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOffsetArg(inj{OffsetArg,KItem}(OffsetArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffsetArg{}(kseq{}(inj{SortOffsetArg{}, SortKItem{}}(VarOffsetArg:SortOffsetArg{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOptionalId{}, SortKItem{}}(Var'Unds'1:SortOptionalId{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalId{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalId(inj{OptionalId,KItem}(OptionalId))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalId{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOptionalId:SortOptionalId{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOptionalInt{}, SortKItem{}}(Var'Unds'1:SortOptionalInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalInt(inj{OptionalInt,KItem}(OptionalInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalInt{}(kseq{}(inj{SortOptionalInt{}, SortKItem{}}(VarOptionalInt:SortOptionalInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPlainInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPlainInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Var'Unds'1:SortPlainInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPlainInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPlainInstr(inj{PlainInstr,KItem}(PlainInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPlainInstr{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPlainInstr:SortPlainInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'1:SortSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSignedness(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSignedness{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSignedness{}, SortKItem{}}(Var'Unds'1:SortSignedness{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSignedness{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSignedness(inj{Signedness,KItem}(Signedness))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSignedness{}(kseq{}(inj{SortSignedness{}, SortKItem{}}(VarSignedness:SortSignedness{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStartDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStartDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStartDefn{}, SortKItem{}}(Var'Unds'0:SortStartDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStartDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStartDefn(inj{StartDefn,KItem}(StartDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStartDefn{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(VarStartDefn:SortStartDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'1:SortStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStmts{}, SortKItem{}}(Var'Unds'1:SortStmts{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmts{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmts(inj{Stmts,KItem}(Stmts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmts{}(kseq{}(inj{SortStmts{}, SortKItem{}}(VarStmts:SortStmts{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStoreOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStoreOp{}, SortKItem{}}(Var'Unds'1:SortStoreOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreOp(inj{StoreOp,KItem}(StoreOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOp{}(kseq{}(inj{SortStoreOp{}, SortKItem{}}(VarStoreOp:SortStoreOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreOpM(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStoreOpM{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStoreOpM{}, SortKItem{}}(Var'Unds'0:SortStoreOpM{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOpM{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreOpM(inj{StoreOpM,KItem}(StoreOpM))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOpM{}(kseq{}(inj{SortStoreOpM{}, SortKItem{}}(VarStoreOpM:SortStoreOpM{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'1:SortString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTAddrCell{}, SortKItem{}}(Var'Unds'0:SortTAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTAddrCell(inj{TAddrCell,KItem}(TAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCell{}(kseq{}(inj{SortTAddrCell{}, SortKItem{}}(VarTAddrCell:SortTAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortTAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTAddrCellOpt(inj{TAddrCellOpt,KItem}(TAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCellOpt{}(kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(VarTAddrCellOpt:SortTAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(Var'Unds'0:SortTabAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabAddrsCell(inj{TabAddrsCell,KItem}(TabAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCell{}(kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(VarTabAddrsCell:SortTabAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabAddrsCellOpt(inj{TabAddrsCellOpt,KItem}(TabAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCellOpt{}(kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(VarTabAddrsCellOpt:SortTabAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(Var'Unds'0:SortTabIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabIdsCell(inj{TabIdsCell,KItem}(TabIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCell{}(kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(VarTabIdsCell:SortTabIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabIdsCellOpt(inj{TabIdsCellOpt,KItem}(TabIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCellOpt{}(kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(VarTabIdsCellOpt:SortTabIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabInstCell{}, SortKItem{}}(Var'Unds'0:SortTabInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCell(inj{TabInstCell,KItem}(TabInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCell{}(kseq{}(inj{SortTabInstCell{}, SortKItem{}}(VarTabInstCell:SortTabInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortTabInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCellFragment(inj{TabInstCellFragment,KItem}(TabInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellFragment{}(kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(VarTabInstCellFragment:SortTabInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(Var'Unds'0:SortTabInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCellMap(inj{TabInstCellMap,KItem}(TabInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellMap{}(kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(VarTabInstCellMap:SortTabInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableDefn{}, SortKItem{}}(Var'Unds'0:SortTableDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableDefn(inj{TableDefn,KItem}(TableDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableDefn{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(VarTableDefn:SortTableDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableElemType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableElemType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableElemType{}, SortKItem{}}(Var'Unds'0:SortTableElemType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableElemType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableElemType(inj{TableElemType,KItem}(TableElemType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableElemType{}(kseq{}(inj{SortTableElemType{}, SortKItem{}}(VarTableElemType:SortTableElemType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTableSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableSpec{}, SortKItem{}}(Var'Unds'1:SortTableSpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableSpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableSpec(inj{TableSpec,KItem}(TableSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableSpec{}(kseq{}(inj{SortTableSpec{}, SortKItem{}}(VarTableSpec:SortTableSpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableType{}, SortKItem{}}(Var'Unds'0:SortTableType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableType(inj{TableType,KItem}(TableType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableType{}(kseq{}(inj{SortTableType{}, SortKItem{}}(VarTableType:SortTableType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabsCell{}, SortKItem{}}(Var'Unds'0:SortTabsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCell(inj{TabsCell,KItem}(TabsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCell{}(kseq{}(inj{SortTabsCell{}, SortKItem{}}(VarTabsCell:SortTabsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(Var'Unds'0:SortTabsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCellFragment(inj{TabsCellFragment,KItem}(TabsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellFragment{}(kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(VarTabsCellFragment:SortTabsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCellOpt(inj{TabsCellOpt,KItem}(TabsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellOpt{}(kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(VarTabsCellOpt:SortTabsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTdataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTdataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTdataCell{}, SortKItem{}}(Var'Unds'0:SortTdataCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTdataCell(inj{TdataCell,KItem}(TdataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCell{}(kseq{}(inj{SortTdataCell{}, SortKItem{}}(VarTdataCell:SortTdataCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTdataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTdataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(Var'Unds'1:SortTdataCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTdataCellOpt(inj{TdataCellOpt,KItem}(TdataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCellOpt{}(kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(VarTdataCellOpt:SortTdataCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTestOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTestOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTestOp{}, SortKItem{}}(Var'Unds'1:SortTestOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTestOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTestOp(inj{TestOp,KItem}(TestOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTestOp{}(kseq{}(inj{SortTestOp{}, SortKItem{}}(VarTestOp:SortTestOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTextFormatGlobalType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTextFormatGlobalType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(Var'Unds'1:SortTextFormatGlobalType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextFormatGlobalType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTextFormatGlobalType(inj{TextFormatGlobalType,KItem}(TextFormatGlobalType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextFormatGlobalType{}(kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(VarTextFormatGlobalType:SortTextFormatGlobalType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTmaxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTmaxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTmaxCell{}, SortKItem{}}(Var'Unds'0:SortTmaxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTmaxCell(inj{TmaxCell,KItem}(TmaxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCell{}(kseq{}(inj{SortTmaxCell{}, SortKItem{}}(VarTmaxCell:SortTmaxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTmaxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTmaxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(Var'Unds'0:SortTmaxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTmaxCellOpt(inj{TmaxCellOpt,KItem}(TmaxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCellOpt{}(kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(VarTmaxCellOpt:SortTmaxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTsizeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTsizeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTsizeCell{}, SortKItem{}}(Var'Unds'1:SortTsizeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTsizeCell(inj{TsizeCell,KItem}(TsizeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCell{}(kseq{}(inj{SortTsizeCell{}, SortKItem{}}(VarTsizeCell:SortTsizeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTsizeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTsizeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(Var'Unds'1:SortTsizeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTsizeCellOpt(inj{TsizeCellOpt,KItem}(TsizeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCellOpt{}(kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(VarTsizeCellOpt:SortTsizeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'1:SortType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisType{}(kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeDecl{}, SortKItem{}}(Var'Unds'1:SortTypeDecl{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecl{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDecl(inj{TypeDecl,KItem}(TypeDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecl{}(kseq{}(inj{SortTypeDecl{}, SortKItem{}}(VarTypeDecl:SortTypeDecl{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDecls(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeDecls{}, SortKItem{}}(Var'Unds'0:SortTypeDecls{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecls{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDecls(inj{TypeDecls,KItem}(TypeDecls))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecls{}(kseq{}(inj{SortTypeDecls{}, SortKItem{}}(VarTypeDecls:SortTypeDecls{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Var'Unds'1:SortTypeDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDefn(inj{TypeDefn,KItem}(TypeDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDefn{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(VarTypeDefn:SortTypeDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(Var'Unds'1:SortTypeIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeIdsCell(inj{TypeIdsCell,KItem}(TypeIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCell{}(kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(VarTypeIdsCell:SortTypeIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTypeIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeIdsCellOpt(inj{TypeIdsCellOpt,KItem}(TypeIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCellOpt{}(kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(VarTypeIdsCellOpt:SortTypeIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeKeyWord(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeKeyWord{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(Var'Unds'1:SortTypeKeyWord{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeKeyWord{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeKeyWord(inj{TypeKeyWord,KItem}(TypeKeyWord))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeKeyWord{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTypeKeyWord:SortTypeKeyWord{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeUse(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeUse{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeUse{}, SortKItem{}}(Var'Unds'0:SortTypeUse{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeUse{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeUse(inj{TypeUse,KItem}(TypeUse))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeUse{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarTypeUse:SortTypeUse{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypesCell{}, SortKItem{}}(Var'Unds'0:SortTypesCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesCell(inj{TypesCell,KItem}(TypesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCell{}(kseq{}(inj{SortTypesCell{}, SortKItem{}}(VarTypesCell:SortTypesCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(Var'Unds'0:SortTypesCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesCellOpt(inj{TypesCellOpt,KItem}(TypesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCellOpt{}(kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(VarTypesCellOpt:SortTypesCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'1:SortVal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVal{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValStack(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValStack{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValStack{}, SortKItem{}}(Var'Unds'1:SortValStack{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValStack{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValStack(inj{ValStack,KItem}(ValStack))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValStack{}(kseq{}(inj{SortValStack{}, SortKItem{}}(VarValStack:SortValStack{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValType{}, SortKItem{}}(Var'Unds'1:SortValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValType(inj{ValType,KItem}(ValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValType{}(kseq{}(inj{SortValType{}, SortKItem{}}(VarValType:SortValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValTypes{}, SortKItem{}}(Var'Unds'1:SortValTypes{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValTypes{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValTypes(inj{ValTypes,KItem}(ValTypes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValTypes{}(kseq{}(inj{SortValTypes{}, SortKItem{}}(VarValTypes:SortValTypes{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValstackCell{}, SortKItem{}}(Var'Unds'1:SortValstackCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValstackCell(inj{ValstackCell,KItem}(ValstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCell{}(kseq{}(inj{SortValstackCell{}, SortKItem{}}(VarValstackCell:SortValstackCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortValstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(Var'Unds'0:SortValstackCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValstackCellOpt(inj{ValstackCellOpt,KItem}(ValstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCellOpt{}(kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(VarValstackCellOpt:SortValstackCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVecType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortVecType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVecType{}, SortKItem{}}(Var'Unds'0:SortVecType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVecType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVecType(inj{VecType,KItem}(VecType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVecType{}(kseq{}(inj{SortVecType{}, SortKItem{}}(VarVecType:SortVecType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmCell{}, SortKItem{}}(Var'Unds'0:SortWasmCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCell(inj{WasmCell,KItem}(WasmCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCell{}(kseq{}(inj{SortWasmCell{}, SortKItem{}}(VarWasmCell:SortWasmCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(Var'Unds'0:SortWasmCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCellFragment(inj{WasmCellFragment,KItem}(WasmCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellFragment{}(kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(VarWasmCellFragment:SortWasmCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(Var'Unds'1:SortWasmCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCellOpt(inj{WasmCellOpt,KItem}(WasmCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellOpt{}(kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(VarWasmCellOpt:SortWasmCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmInt{}, SortKItem{}}(Var'Unds'1:SortWasmInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmInt(inj{WasmInt,KItem}(WasmInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmInt{}(kseq{}(inj{SortWasmInt{}, SortKItem{}}(VarWasmInt:SortWasmInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmIntToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmIntToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(Var'Unds'0:SortWasmIntToken{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmIntToken{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmIntToken(inj{WasmIntToken,KItem}(WasmIntToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmIntToken{}(kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(VarWasmIntToken:SortWasmIntToken{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmString{}, SortKItem{}}(Var'Unds'1:SortWasmString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmString(inj{WasmString,KItem}(WasmString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmString{}(kseq{}(inj{SortWasmString{}, SortKItem{}}(VarWasmString:SortWasmString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmStringToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmStringToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(Var'Unds'1:SortWasmStringToken{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmStringToken{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmStringToken(inj{WasmStringToken,KItem}(WasmStringToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmStringToken{}(kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(VarWasmStringToken:SortWasmStringToken{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `lengthValTypes(_)_WASM-DATA_Int_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b652f07baeba9e1ec86466e58967cbd46c22ef8f81d35db5eb45d60713cafdca), contentStartColumn(10), contentStartLine(138), org.kframework.attributes.Location(Location(138,10,138,40)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}()),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("138"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,10,138,40)"), UNIQUE'Unds'ID{}("b652f07baeba9e1ec86466e58967cbd46c22ef8f81d35db5eb45d60713cafdca")]

// rule `lengthValTypes(_)_WASM-DATA_Int_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(V,VS))=>`_+Int_`(#token("1","Int"),`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(VS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c22252974ffbf453293482239e229c56fc319e70087739a72d6dbe46a64f6fca), contentStartColumn(10), contentStartLine(139), org.kframework.attributes.Location(Location(139,10,139,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarV:SortValType{},VarVS:SortValTypes{})),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarVS:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("139"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,10,139,64)"), UNIQUE'Unds'ID{}("c22252974ffbf453293482239e229c56fc319e70087739a72d6dbe46a64f6fca")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), contentStartColumn(8), contentStartLine(517), org.kframework.attributes.Location(Location(517,8,517,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("517"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(517,8,517,57)"), UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), contentStartColumn(8), contentStartLine(518), org.kframework.attributes.Location(Location(518,8,518,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI2:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("518"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(518,8,518,57)"), UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3")]

// rule `notBool_`(#token("true","Bool") #as _0)=>#token("false","Bool") requires _0 ensures _0 [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), contentStartColumn(8), contentStartLine(351), org.kframework.attributes.Location(Location(351,8,351,29)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{})),
        \dv{SortBool{}}("false")),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("351"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,8,351,29)"), UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), contentStartColumn(8), contentStartLine(352), org.kframework.attributes.Location(Location(352,8,352,29)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\dv{SortBool{}}("false")),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("352"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,8,352,29)"), UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415")]

// rule `project:AValType`(inj{AValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAValType{},R} (
        Lblproject'Coln'AValType{}(kseq{}(inj{SortAValType{}, SortKItem{}}(VarK:SortAValType{}),dotk{}())),
        VarK:SortAValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:AlignArg`(inj{AlignArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAlignArg{},R} (
        Lblproject'Coln'AlignArg{}(kseq{}(inj{SortAlignArg{}, SortKItem{}}(VarK:SortAlignArg{}),dotk{}())),
        VarK:SortAlignArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:Alloc`(inj{Alloc,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAlloc{},R} (
        Lblproject'Coln'Alloc{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(VarK:SortAlloc{}),dotk{}())),
        VarK:SortAlloc{}),
      \top{R}()))
  [projection{}()]

// rule `project:AllocatedKind`(inj{AllocatedKind,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAllocatedKind{},R} (
        Lblproject'Coln'AllocatedKind{}(kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(VarK:SortAllocatedKind{}),dotk{}())),
        VarK:SortAllocatedKind{}),
      \top{R}()))
  [projection{}()]

// rule `project:BlockInstr`(inj{BlockInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBlockInstr{},R} (
        Lblproject'Coln'BlockInstr{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(VarK:SortBlockInstr{}),dotk{}())),
        VarK:SortBlockInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblproject'Coln'Bool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())),
        VarK:SortBool{}),
      \top{R}()))
  [projection{}()]

// rule `project:ByteMap`(inj{ByteMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lblproject'Coln'ByteMap{}(kseq{}(inj{SortByteMap{}, SortKItem{}}(VarK:SortByteMap{}),dotk{}())),
        VarK:SortByteMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bytes`(inj{Bytes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lblproject'Coln'Bytes{}(kseq{}(inj{SortBytes{}, SortKItem{}}(VarK:SortBytes{}),dotk{}())),
        VarK:SortBytes{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cell`(inj{Cell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCell{},R} (
        Lblproject'Coln'Cell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarK:SortCell{}),dotk{}())),
        VarK:SortCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:Context`(inj{Context,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortContext{},R} (
        Lblproject'Coln'Context{}(kseq{}(inj{SortContext{}, SortKItem{}}(VarK:SortContext{}),dotk{}())),
        VarK:SortContext{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCell`(inj{CurFrameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCell{},R} (
        Lblproject'Coln'CurFrameCell{}(kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(VarK:SortCurFrameCell{}),dotk{}())),
        VarK:SortCurFrameCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCellFragment`(inj{CurFrameCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCellFragment{},R} (
        Lblproject'Coln'CurFrameCellFragment{}(kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(VarK:SortCurFrameCellFragment{}),dotk{}())),
        VarK:SortCurFrameCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCellOpt`(inj{CurFrameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCellOpt{},R} (
        Lblproject'Coln'CurFrameCellOpt{}(kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(VarK:SortCurFrameCellOpt{}),dotk{}())),
        VarK:SortCurFrameCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurModIdxCell`(inj{CurModIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurModIdxCell{},R} (
        Lblproject'Coln'CurModIdxCell{}(kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(VarK:SortCurModIdxCell{}),dotk{}())),
        VarK:SortCurModIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurModIdxCellOpt`(inj{CurModIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurModIdxCellOpt{},R} (
        Lblproject'Coln'CurModIdxCellOpt{}(kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(VarK:SortCurModIdxCellOpt{}),dotk{}())),
        VarK:SortCurModIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CvtOp`(inj{CvtOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvtOp{},R} (
        Lblproject'Coln'CvtOp{}(kseq{}(inj{SortCvtOp{}, SortKItem{}}(VarK:SortCvtOp{}),dotk{}())),
        VarK:SortCvtOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvtf32Op`(inj{Cvtf32Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvtf32Op{},R} (
        Lblproject'Coln'Cvtf32Op{}(kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(VarK:SortCvtf32Op{}),dotk{}())),
        VarK:SortCvtf32Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvtf64Op`(inj{Cvtf64Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvtf64Op{},R} (
        Lblproject'Coln'Cvtf64Op{}(kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(VarK:SortCvtf64Op{}),dotk{}())),
        VarK:SortCvtf64Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvti32Op`(inj{Cvti32Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvti32Op{},R} (
        Lblproject'Coln'Cvti32Op{}(kseq{}(inj{SortCvti32Op{}, SortKItem{}}(VarK:SortCvti32Op{}),dotk{}())),
        VarK:SortCvti32Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvti64Op`(inj{Cvti64Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvti64Op{},R} (
        Lblproject'Coln'Cvti64Op{}(kseq{}(inj{SortCvti64Op{}, SortKItem{}}(VarK:SortCvti64Op{}),dotk{}())),
        VarK:SortCvti64Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:DataDefn`(inj{DataDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDataDefn{},R} (
        Lblproject'Coln'DataDefn{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(VarK:SortDataDefn{}),dotk{}())),
        VarK:SortDataDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:DataString`(inj{DataString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDataString{},R} (
        Lblproject'Coln'DataString{}(kseq{}(inj{SortDataString{}, SortKItem{}}(VarK:SortDataString{}),dotk{}())),
        VarK:SortDataString{}),
      \top{R}()))
  [projection{}()]

// rule `project:Defn`(inj{Defn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefn{},R} (
        Lblproject'Coln'Defn{}(kseq{}(inj{SortDefn{}, SortKItem{}}(VarK:SortDefn{}),dotk{}())),
        VarK:SortDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:Defns`(inj{Defns,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'Defns{}(kseq{}(inj{SortDefns{}, SortKItem{}}(VarK:SortDefns{}),dotk{}())),
        VarK:SortDefns{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeterministicMemoryGrowthCell`(inj{DeterministicMemoryGrowthCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCell{},R} (
        Lblproject'Coln'DeterministicMemoryGrowthCell{}(kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(VarK:SortDeterministicMemoryGrowthCell{}),dotk{}())),
        VarK:SortDeterministicMemoryGrowthCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeterministicMemoryGrowthCellOpt`(inj{DeterministicMemoryGrowthCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCellOpt{},R} (
        Lblproject'Coln'DeterministicMemoryGrowthCellOpt{}(kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(VarK:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())),
        VarK:SortDeterministicMemoryGrowthCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElemDefn`(inj{ElemDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortElemDefn{},R} (
        Lblproject'Coln'ElemDefn{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(VarK:SortElemDefn{}),dotk{}())),
        VarK:SortElemDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElemSegment`(inj{ElemSegment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortElemSegment{},R} (
        Lblproject'Coln'ElemSegment{}(kseq{}(inj{SortElemSegment{}, SortKItem{}}(VarK:SortElemSegment{}),dotk{}())),
        VarK:SortElemSegment{}),
      \top{R}()))
  [projection{}()]

// rule `project:EmptyStmt`(inj{EmptyStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEmptyStmt{},R} (
        Lblproject'Coln'EmptyStmt{}(kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(VarK:SortEmptyStmt{}),dotk{}())),
        VarK:SortEmptyStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:EmptyStmts`(inj{EmptyStmts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEmptyStmts{},R} (
        Lblproject'Coln'EmptyStmts{}(kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(VarK:SortEmptyStmts{}),dotk{}())),
        VarK:SortEmptyStmts{}),
      \top{R}()))
  [projection{}()]

// rule `project:Endianness`(inj{Endianness,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEndianness{},R} (
        Lblproject'Coln'Endianness{}(kseq{}(inj{SortEndianness{}, SortKItem{}}(VarK:SortEndianness{}),dotk{}())),
        VarK:SortEndianness{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportDefn`(inj{ExportDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportDefn{},R} (
        Lblproject'Coln'ExportDefn{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(VarK:SortExportDefn{}),dotk{}())),
        VarK:SortExportDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportsCell`(inj{ExportsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportsCell{},R} (
        Lblproject'Coln'ExportsCell{}(kseq{}(inj{SortExportsCell{}, SortKItem{}}(VarK:SortExportsCell{}),dotk{}())),
        VarK:SortExportsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportsCellOpt`(inj{ExportsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportsCellOpt{},R} (
        Lblproject'Coln'ExportsCellOpt{}(kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(VarK:SortExportsCellOpt{}),dotk{}())),
        VarK:SortExportsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Externval`(inj{Externval,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExternval{},R} (
        Lblproject'Coln'Externval{}(kseq{}(inj{SortExternval{}, SortKItem{}}(VarK:SortExternval{}),dotk{}())),
        VarK:SortExternval{}),
      \top{R}()))
  [projection{}()]

// rule `project:FAddrCell`(inj{FAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFAddrCell{},R} (
        Lblproject'Coln'FAddrCell{}(kseq{}(inj{SortFAddrCell{}, SortKItem{}}(VarK:SortFAddrCell{}),dotk{}())),
        VarK:SortFAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FAddrCellOpt`(inj{FAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFAddrCellOpt{},R} (
        Lblproject'Coln'FAddrCellOpt{}(kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(VarK:SortFAddrCellOpt{}),dotk{}())),
        VarK:SortFAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FBinOp`(inj{FBinOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFBinOp{},R} (
        Lblproject'Coln'FBinOp{}(kseq{}(inj{SortFBinOp{}, SortKItem{}}(VarK:SortFBinOp{}),dotk{}())),
        VarK:SortFBinOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FCodeCell`(inj{FCodeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFCodeCell{},R} (
        Lblproject'Coln'FCodeCell{}(kseq{}(inj{SortFCodeCell{}, SortKItem{}}(VarK:SortFCodeCell{}),dotk{}())),
        VarK:SortFCodeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FCodeCellOpt`(inj{FCodeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFCodeCellOpt{},R} (
        Lblproject'Coln'FCodeCellOpt{}(kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(VarK:SortFCodeCellOpt{}),dotk{}())),
        VarK:SortFCodeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FLocalCell`(inj{FLocalCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFLocalCell{},R} (
        Lblproject'Coln'FLocalCell{}(kseq{}(inj{SortFLocalCell{}, SortKItem{}}(VarK:SortFLocalCell{}),dotk{}())),
        VarK:SortFLocalCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FLocalCellOpt`(inj{FLocalCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFLocalCellOpt{},R} (
        Lblproject'Coln'FLocalCellOpt{}(kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(VarK:SortFLocalCellOpt{}),dotk{}())),
        VarK:SortFLocalCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FModInstCell`(inj{FModInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFModInstCell{},R} (
        Lblproject'Coln'FModInstCell{}(kseq{}(inj{SortFModInstCell{}, SortKItem{}}(VarK:SortFModInstCell{}),dotk{}())),
        VarK:SortFModInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FModInstCellOpt`(inj{FModInstCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFModInstCellOpt{},R} (
        Lblproject'Coln'FModInstCellOpt{}(kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(VarK:SortFModInstCellOpt{}),dotk{}())),
        VarK:SortFModInstCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FRelOp`(inj{FRelOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFRelOp{},R} (
        Lblproject'Coln'FRelOp{}(kseq{}(inj{SortFRelOp{}, SortKItem{}}(VarK:SortFRelOp{}),dotk{}())),
        VarK:SortFRelOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FTypeCell`(inj{FTypeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFTypeCell{},R} (
        Lblproject'Coln'FTypeCell{}(kseq{}(inj{SortFTypeCell{}, SortKItem{}}(VarK:SortFTypeCell{}),dotk{}())),
        VarK:SortFTypeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FTypeCellOpt`(inj{FTypeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFTypeCellOpt{},R} (
        Lblproject'Coln'FTypeCellOpt{}(kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(VarK:SortFTypeCellOpt{}),dotk{}())),
        VarK:SortFTypeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FUnOp`(inj{FUnOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFUnOp{},R} (
        Lblproject'Coln'FUnOp{}(kseq{}(inj{SortFUnOp{}, SortKItem{}}(VarK:SortFUnOp{}),dotk{}())),
        VarK:SortFUnOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FVal`(inj{FVal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lblproject'Coln'FVal{}(kseq{}(inj{SortFVal{}, SortKItem{}}(VarK:SortFVal{}),dotk{}())),
        VarK:SortFVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:FValType`(inj{FValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFValType{},R} (
        Lblproject'Coln'FValType{}(kseq{}(inj{SortFValType{}, SortKItem{}}(VarK:SortFValType{}),dotk{}())),
        VarK:SortFValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFloat{},R} (
        Lblproject'Coln'Float{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())),
        VarK:SortFloat{}),
      \top{R}()))
  [projection{}()]

// rule `project:FoldedInstr`(inj{FoldedInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFoldedInstr{},R} (
        Lblproject'Coln'FoldedInstr{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(VarK:SortFoldedInstr{}),dotk{}())),
        VarK:SortFoldedInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Frame`(inj{Frame,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFrame{},R} (
        Lblproject'Coln'Frame{}(kseq{}(inj{SortFrame{}, SortKItem{}}(VarK:SortFrame{}),dotk{}())),
        VarK:SortFrame{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncAddrsCell`(inj{FuncAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncAddrsCell{},R} (
        Lblproject'Coln'FuncAddrsCell{}(kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(VarK:SortFuncAddrsCell{}),dotk{}())),
        VarK:SortFuncAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncAddrsCellOpt`(inj{FuncAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncAddrsCellOpt{},R} (
        Lblproject'Coln'FuncAddrsCellOpt{}(kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(VarK:SortFuncAddrsCellOpt{}),dotk{}())),
        VarK:SortFuncAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCell`(inj{FuncDefCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCell{},R} (
        Lblproject'Coln'FuncDefCell{}(kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(VarK:SortFuncDefCell{}),dotk{}())),
        VarK:SortFuncDefCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCellFragment`(inj{FuncDefCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCellFragment{},R} (
        Lblproject'Coln'FuncDefCellFragment{}(kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(VarK:SortFuncDefCellFragment{}),dotk{}())),
        VarK:SortFuncDefCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCellMap`(inj{FuncDefCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCellMap{},R} (
        Lblproject'Coln'FuncDefCellMap{}(kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(VarK:SortFuncDefCellMap{}),dotk{}())),
        VarK:SortFuncDefCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefn`(inj{FuncDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefn{},R} (
        Lblproject'Coln'FuncDefn{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(VarK:SortFuncDefn{}),dotk{}())),
        VarK:SortFuncDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdsCell`(inj{FuncIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncIdsCell{},R} (
        Lblproject'Coln'FuncIdsCell{}(kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(VarK:SortFuncIdsCell{}),dotk{}())),
        VarK:SortFuncIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdsCellOpt`(inj{FuncIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncIdsCellOpt{},R} (
        Lblproject'Coln'FuncIdsCellOpt{}(kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(VarK:SortFuncIdsCellOpt{}),dotk{}())),
        VarK:SortFuncIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncSpec`(inj{FuncSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncSpec{},R} (
        Lblproject'Coln'FuncSpec{}(kseq{}(inj{SortFuncSpec{}, SortKItem{}}(VarK:SortFuncSpec{}),dotk{}())),
        VarK:SortFuncSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncType`(inj{FuncType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        Lblproject'Coln'FuncType{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(VarK:SortFuncType{}),dotk{}())),
        VarK:SortFuncType{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCell`(inj{FuncsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCell{},R} (
        Lblproject'Coln'FuncsCell{}(kseq{}(inj{SortFuncsCell{}, SortKItem{}}(VarK:SortFuncsCell{}),dotk{}())),
        VarK:SortFuncsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCellFragment`(inj{FuncsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCellFragment{},R} (
        Lblproject'Coln'FuncsCellFragment{}(kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(VarK:SortFuncsCellFragment{}),dotk{}())),
        VarK:SortFuncsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCellOpt`(inj{FuncsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCellOpt{},R} (
        Lblproject'Coln'FuncsCellOpt{}(kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(VarK:SortFuncsCellOpt{}),dotk{}())),
        VarK:SortFuncsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GAddrCell`(inj{GAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGAddrCell{},R} (
        Lblproject'Coln'GAddrCell{}(kseq{}(inj{SortGAddrCell{}, SortKItem{}}(VarK:SortGAddrCell{}),dotk{}())),
        VarK:SortGAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GAddrCellOpt`(inj{GAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGAddrCellOpt{},R} (
        Lblproject'Coln'GAddrCellOpt{}(kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(VarK:SortGAddrCellOpt{}),dotk{}())),
        VarK:SortGAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GMutCell`(inj{GMutCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGMutCell{},R} (
        Lblproject'Coln'GMutCell{}(kseq{}(inj{SortGMutCell{}, SortKItem{}}(VarK:SortGMutCell{}),dotk{}())),
        VarK:SortGMutCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GMutCellOpt`(inj{GMutCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGMutCellOpt{},R} (
        Lblproject'Coln'GMutCellOpt{}(kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(VarK:SortGMutCellOpt{}),dotk{}())),
        VarK:SortGMutCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GValueCell`(inj{GValueCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGValueCell{},R} (
        Lblproject'Coln'GValueCell{}(kseq{}(inj{SortGValueCell{}, SortKItem{}}(VarK:SortGValueCell{}),dotk{}())),
        VarK:SortGValueCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GValueCellOpt`(inj{GValueCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGValueCellOpt{},R} (
        Lblproject'Coln'GValueCellOpt{}(kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(VarK:SortGValueCellOpt{}),dotk{}())),
        VarK:SortGValueCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        Lblproject'Coln'GeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())),
        VarK:SortGeneratedCounterCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCellOpt{},R} (
        Lblproject'Coln'GeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())),
        VarK:SortGeneratedCounterCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        Lblproject'Coln'GeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())),
        VarK:SortGeneratedTopCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCellFragment{},R} (
        Lblproject'Coln'GeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())),
        VarK:SortGeneratedTopCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobIdsCell`(inj{GlobIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobIdsCell{},R} (
        Lblproject'Coln'GlobIdsCell{}(kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(VarK:SortGlobIdsCell{}),dotk{}())),
        VarK:SortGlobIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobIdsCellOpt`(inj{GlobIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobIdsCellOpt{},R} (
        Lblproject'Coln'GlobIdsCellOpt{}(kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(VarK:SortGlobIdsCellOpt{}),dotk{}())),
        VarK:SortGlobIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalAddrsCell`(inj{GlobalAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalAddrsCell{},R} (
        Lblproject'Coln'GlobalAddrsCell{}(kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(VarK:SortGlobalAddrsCell{}),dotk{}())),
        VarK:SortGlobalAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalAddrsCellOpt`(inj{GlobalAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalAddrsCellOpt{},R} (
        Lblproject'Coln'GlobalAddrsCellOpt{}(kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(VarK:SortGlobalAddrsCellOpt{}),dotk{}())),
        VarK:SortGlobalAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalDefn`(inj{GlobalDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalDefn{},R} (
        Lblproject'Coln'GlobalDefn{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(VarK:SortGlobalDefn{}),dotk{}())),
        VarK:SortGlobalDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCell`(inj{GlobalInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCell{},R} (
        Lblproject'Coln'GlobalInstCell{}(kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(VarK:SortGlobalInstCell{}),dotk{}())),
        VarK:SortGlobalInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCellFragment`(inj{GlobalInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCellFragment{},R} (
        Lblproject'Coln'GlobalInstCellFragment{}(kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(VarK:SortGlobalInstCellFragment{}),dotk{}())),
        VarK:SortGlobalInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCellMap`(inj{GlobalInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCellMap{},R} (
        Lblproject'Coln'GlobalInstCellMap{}(kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(VarK:SortGlobalInstCellMap{}),dotk{}())),
        VarK:SortGlobalInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalSpec`(inj{GlobalSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalSpec{},R} (
        Lblproject'Coln'GlobalSpec{}(kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(VarK:SortGlobalSpec{}),dotk{}())),
        VarK:SortGlobalSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalType`(inj{GlobalType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalType{},R} (
        Lblproject'Coln'GlobalType{}(kseq{}(inj{SortGlobalType{}, SortKItem{}}(VarK:SortGlobalType{}),dotk{}())),
        VarK:SortGlobalType{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCell`(inj{GlobalsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCell{},R} (
        Lblproject'Coln'GlobalsCell{}(kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(VarK:SortGlobalsCell{}),dotk{}())),
        VarK:SortGlobalsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCellFragment`(inj{GlobalsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCellFragment{},R} (
        Lblproject'Coln'GlobalsCellFragment{}(kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(VarK:SortGlobalsCellFragment{}),dotk{}())),
        VarK:SortGlobalsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCellOpt`(inj{GlobalsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCellOpt{},R} (
        Lblproject'Coln'GlobalsCellOpt{}(kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(VarK:SortGlobalsCellOpt{}),dotk{}())),
        VarK:SortGlobalsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IBinOp`(inj{IBinOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIBinOp{},R} (
        Lblproject'Coln'IBinOp{}(kseq{}(inj{SortIBinOp{}, SortKItem{}}(VarK:SortIBinOp{}),dotk{}())),
        VarK:SortIBinOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IRelOp`(inj{IRelOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIRelOp{},R} (
        Lblproject'Coln'IRelOp{}(kseq{}(inj{SortIRelOp{}, SortKItem{}}(VarK:SortIRelOp{}),dotk{}())),
        VarK:SortIRelOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IUnOp`(inj{IUnOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIUnOp{},R} (
        Lblproject'Coln'IUnOp{}(kseq{}(inj{SortIUnOp{}, SortKItem{}}(VarK:SortIUnOp{}),dotk{}())),
        VarK:SortIUnOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IVal`(inj{IVal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIVal{},R} (
        Lblproject'Coln'IVal{}(kseq{}(inj{SortIVal{}, SortKItem{}}(VarK:SortIVal{}),dotk{}())),
        VarK:SortIVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:IValType`(inj{IValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIValType{},R} (
        Lblproject'Coln'IValType{}(kseq{}(inj{SortIValType{}, SortKItem{}}(VarK:SortIValType{}),dotk{}())),
        VarK:SortIValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:Identifier`(inj{Identifier,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdentifier{},R} (
        Lblproject'Coln'Identifier{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarK:SortIdentifier{}),dotk{}())),
        VarK:SortIdentifier{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdentifierToken`(inj{IdentifierToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdentifierToken{},R} (
        Lblproject'Coln'IdentifierToken{}(kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(VarK:SortIdentifierToken{}),dotk{}())),
        VarK:SortIdentifierToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:ImportDefn`(inj{ImportDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortImportDefn{},R} (
        Lblproject'Coln'ImportDefn{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(VarK:SortImportDefn{}),dotk{}())),
        VarK:SortImportDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ImportDesc`(inj{ImportDesc,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortImportDesc{},R} (
        Lblproject'Coln'ImportDesc{}(kseq{}(inj{SortImportDesc{}, SortKItem{}}(VarK:SortImportDesc{}),dotk{}())),
        VarK:SortImportDesc{}),
      \top{R}()))
  [projection{}()]

// rule `project:Index`(inj{Index,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIndex{},R} (
        Lblproject'Coln'Index{}(kseq{}(inj{SortIndex{}, SortKItem{}}(VarK:SortIndex{}),dotk{}())),
        VarK:SortIndex{}),
      \top{R}()))
  [projection{}()]

// rule `project:InlineExport`(inj{InlineExport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInlineExport{},R} (
        Lblproject'Coln'InlineExport{}(kseq{}(inj{SortInlineExport{}, SortKItem{}}(VarK:SortInlineExport{}),dotk{}())),
        VarK:SortInlineExport{}),
      \top{R}()))
  [projection{}()]

// rule `project:InlineImport`(inj{InlineImport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInlineImport{},R} (
        Lblproject'Coln'InlineImport{}(kseq{}(inj{SortInlineImport{}, SortKItem{}}(VarK:SortInlineImport{}),dotk{}())),
        VarK:SortInlineImport{}),
      \top{R}()))
  [projection{}()]

// rule `project:Instr`(inj{Instr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lblproject'Coln'Instr{}(kseq{}(inj{SortInstr{}, SortKItem{}}(VarK:SortInstr{}),dotk{}())),
        VarK:SortInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Instrs`(inj{Instrs,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'Instrs{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarK:SortInstrs{}),dotk{}())),
        VarK:SortInstrs{}),
      \top{R}()))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'Int{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())),
        VarK:SortInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortK{},R} (
        Lblproject'Coln'K{}(VarK:SortK{}),
        VarK:SortK{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        Lblproject'Coln'KCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())),
        VarK:SortKCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCellOpt{},R} (
        Lblproject'Coln'KCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())),
        VarK:SortKCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        Lblproject'Coln'KItem{}(kseq{}(VarK:SortKItem{},dotk{}())),
        VarK:SortKItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:Label`(inj{Label,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabel{},R} (
        Lblproject'Coln'Label{}(kseq{}(inj{SortLabel{}, SortKItem{}}(VarK:SortLabel{}),dotk{}())),
        VarK:SortLabel{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelDepthCell`(inj{LabelDepthCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelDepthCell{},R} (
        Lblproject'Coln'LabelDepthCell{}(kseq{}(inj{SortLabelDepthCell{}, SortKItem{}}(VarK:SortLabelDepthCell{}),dotk{}())),
        VarK:SortLabelDepthCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelDepthCellOpt`(inj{LabelDepthCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelDepthCellOpt{},R} (
        Lblproject'Coln'LabelDepthCellOpt{}(kseq{}(inj{SortLabelDepthCellOpt{}, SortKItem{}}(VarK:SortLabelDepthCellOpt{}),dotk{}())),
        VarK:SortLabelDepthCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelIdsCell`(inj{LabelIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelIdsCell{},R} (
        Lblproject'Coln'LabelIdsCell{}(kseq{}(inj{SortLabelIdsCell{}, SortKItem{}}(VarK:SortLabelIdsCell{}),dotk{}())),
        VarK:SortLabelIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelIdsCellOpt`(inj{LabelIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelIdsCellOpt{},R} (
        Lblproject'Coln'LabelIdsCellOpt{}(kseq{}(inj{SortLabelIdsCellOpt{}, SortKItem{}}(VarK:SortLabelIdsCellOpt{}),dotk{}())),
        VarK:SortLabelIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Limits`(inj{Limits,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'Limits{}(kseq{}(inj{SortLimits{}, SortKItem{}}(VarK:SortLimits{}),dotk{}())),
        VarK:SortLimits{}),
      \top{R}()))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        Lblproject'Coln'List{}(kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())),
        VarK:SortList{}),
      \top{R}()))
  [projection{}()]

// rule `project:LoadOp`(inj{LoadOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLoadOp{},R} (
        Lblproject'Coln'LoadOp{}(kseq{}(inj{SortLoadOp{}, SortKItem{}}(VarK:SortLoadOp{}),dotk{}())),
        VarK:SortLoadOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:LoadOpM`(inj{LoadOpM,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLoadOpM{},R} (
        Lblproject'Coln'LoadOpM{}(kseq{}(inj{SortLoadOpM{}, SortKItem{}}(VarK:SortLoadOpM{}),dotk{}())),
        VarK:SortLoadOpM{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalDecl`(inj{LocalDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecl{},R} (
        Lblproject'Coln'LocalDecl{}(kseq{}(inj{SortLocalDecl{}, SortKItem{}}(VarK:SortLocalDecl{}),dotk{}())),
        VarK:SortLocalDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalDecls`(inj{LocalDecls,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecls{},R} (
        Lblproject'Coln'LocalDecls{}(kseq{}(inj{SortLocalDecls{}, SortKItem{}}(VarK:SortLocalDecls{}),dotk{}())),
        VarK:SortLocalDecls{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalsCell`(inj{LocalsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalsCell{},R} (
        Lblproject'Coln'LocalsCell{}(kseq{}(inj{SortLocalsCell{}, SortKItem{}}(VarK:SortLocalsCell{}),dotk{}())),
        VarK:SortLocalsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalsCellOpt`(inj{LocalsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalsCellOpt{},R} (
        Lblproject'Coln'LocalsCellOpt{}(kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(VarK:SortLocalsCellOpt{}),dotk{}())),
        VarK:SortLocalsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MAddrCell`(inj{MAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMAddrCell{},R} (
        Lblproject'Coln'MAddrCell{}(kseq{}(inj{SortMAddrCell{}, SortKItem{}}(VarK:SortMAddrCell{}),dotk{}())),
        VarK:SortMAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MAddrCellOpt`(inj{MAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMAddrCellOpt{},R} (
        Lblproject'Coln'MAddrCellOpt{}(kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(VarK:SortMAddrCellOpt{}),dotk{}())),
        VarK:SortMAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MInt`(inj{MInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMInt{},R} (
        Lblproject'Coln'MInt{}(kseq{}(inj{SortMInt{}, SortKItem{}}(VarK:SortMInt{}),dotk{}())),
        VarK:SortMInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCell`(inj{MainStoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCell{},R} (
        Lblproject'Coln'MainStoreCell{}(kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(VarK:SortMainStoreCell{}),dotk{}())),
        VarK:SortMainStoreCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCellFragment`(inj{MainStoreCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCellFragment{},R} (
        Lblproject'Coln'MainStoreCellFragment{}(kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(VarK:SortMainStoreCellFragment{}),dotk{}())),
        VarK:SortMainStoreCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCellOpt`(inj{MainStoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCellOpt{},R} (
        Lblproject'Coln'MainStoreCellOpt{}(kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(VarK:SortMainStoreCellOpt{}),dotk{}())),
        VarK:SortMainStoreCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'Map{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())),
        VarK:SortMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:MdataCell`(inj{MdataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMdataCell{},R} (
        Lblproject'Coln'MdataCell{}(kseq{}(inj{SortMdataCell{}, SortKItem{}}(VarK:SortMdataCell{}),dotk{}())),
        VarK:SortMdataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MdataCellOpt`(inj{MdataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMdataCellOpt{},R} (
        Lblproject'Coln'MdataCellOpt{}(kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(VarK:SortMdataCellOpt{}),dotk{}())),
        VarK:SortMdataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemAddrsCell`(inj{MemAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemAddrsCell{},R} (
        Lblproject'Coln'MemAddrsCell{}(kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(VarK:SortMemAddrsCell{}),dotk{}())),
        VarK:SortMemAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemAddrsCellOpt`(inj{MemAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemAddrsCellOpt{},R} (
        Lblproject'Coln'MemAddrsCellOpt{}(kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(VarK:SortMemAddrsCellOpt{}),dotk{}())),
        VarK:SortMemAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemArg`(inj{MemArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemArg{},R} (
        Lblproject'Coln'MemArg{}(kseq{}(inj{SortMemArg{}, SortKItem{}}(VarK:SortMemArg{}),dotk{}())),
        VarK:SortMemArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemIdsCell`(inj{MemIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemIdsCell{},R} (
        Lblproject'Coln'MemIdsCell{}(kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(VarK:SortMemIdsCell{}),dotk{}())),
        VarK:SortMemIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemIdsCellOpt`(inj{MemIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemIdsCellOpt{},R} (
        Lblproject'Coln'MemIdsCellOpt{}(kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(VarK:SortMemIdsCellOpt{}),dotk{}())),
        VarK:SortMemIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCell`(inj{MemInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCell{},R} (
        Lblproject'Coln'MemInstCell{}(kseq{}(inj{SortMemInstCell{}, SortKItem{}}(VarK:SortMemInstCell{}),dotk{}())),
        VarK:SortMemInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCellFragment`(inj{MemInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCellFragment{},R} (
        Lblproject'Coln'MemInstCellFragment{}(kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(VarK:SortMemInstCellFragment{}),dotk{}())),
        VarK:SortMemInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCellMap`(inj{MemInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCellMap{},R} (
        Lblproject'Coln'MemInstCellMap{}(kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(VarK:SortMemInstCellMap{}),dotk{}())),
        VarK:SortMemInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemType`(inj{MemType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemType{},R} (
        Lblproject'Coln'MemType{}(kseq{}(inj{SortMemType{}, SortKItem{}}(VarK:SortMemType{}),dotk{}())),
        VarK:SortMemType{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemoryDefn`(inj{MemoryDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemoryDefn{},R} (
        Lblproject'Coln'MemoryDefn{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(VarK:SortMemoryDefn{}),dotk{}())),
        VarK:SortMemoryDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemorySpec`(inj{MemorySpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemorySpec{},R} (
        Lblproject'Coln'MemorySpec{}(kseq{}(inj{SortMemorySpec{}, SortKItem{}}(VarK:SortMemorySpec{}),dotk{}())),
        VarK:SortMemorySpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCell`(inj{MemsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCell{},R} (
        Lblproject'Coln'MemsCell{}(kseq{}(inj{SortMemsCell{}, SortKItem{}}(VarK:SortMemsCell{}),dotk{}())),
        VarK:SortMemsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCellFragment`(inj{MemsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCellFragment{},R} (
        Lblproject'Coln'MemsCellFragment{}(kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(VarK:SortMemsCellFragment{}),dotk{}())),
        VarK:SortMemsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCellOpt`(inj{MemsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCellOpt{},R} (
        Lblproject'Coln'MemsCellOpt{}(kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(VarK:SortMemsCellOpt{}),dotk{}())),
        VarK:SortMemsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MmaxCell`(inj{MmaxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMmaxCell{},R} (
        Lblproject'Coln'MmaxCell{}(kseq{}(inj{SortMmaxCell{}, SortKItem{}}(VarK:SortMmaxCell{}),dotk{}())),
        VarK:SortMmaxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MmaxCellOpt`(inj{MmaxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMmaxCellOpt{},R} (
        Lblproject'Coln'MmaxCellOpt{}(kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(VarK:SortMmaxCellOpt{}),dotk{}())),
        VarK:SortMmaxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModIdxCell`(inj{ModIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModIdxCell{},R} (
        Lblproject'Coln'ModIdxCell{}(kseq{}(inj{SortModIdxCell{}, SortKItem{}}(VarK:SortModIdxCell{}),dotk{}())),
        VarK:SortModIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModIdxCellOpt`(inj{ModIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModIdxCellOpt{},R} (
        Lblproject'Coln'ModIdxCellOpt{}(kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(VarK:SortModIdxCellOpt{}),dotk{}())),
        VarK:SortModIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleDecl`(inj{ModuleDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lblproject'Coln'ModuleDecl{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(VarK:SortModuleDecl{}),dotk{}())),
        VarK:SortModuleDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdsCell`(inj{ModuleIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleIdsCell{},R} (
        Lblproject'Coln'ModuleIdsCell{}(kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(VarK:SortModuleIdsCell{}),dotk{}())),
        VarK:SortModuleIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdsCellOpt`(inj{ModuleIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleIdsCellOpt{},R} (
        Lblproject'Coln'ModuleIdsCellOpt{}(kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(VarK:SortModuleIdsCellOpt{}),dotk{}())),
        VarK:SortModuleIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCell`(inj{ModuleInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCell{},R} (
        Lblproject'Coln'ModuleInstCell{}(kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(VarK:SortModuleInstCell{}),dotk{}())),
        VarK:SortModuleInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCellFragment`(inj{ModuleInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCellFragment{},R} (
        Lblproject'Coln'ModuleInstCellFragment{}(kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(VarK:SortModuleInstCellFragment{}),dotk{}())),
        VarK:SortModuleInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCellMap`(inj{ModuleInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCellMap{},R} (
        Lblproject'Coln'ModuleInstCellMap{}(kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(VarK:SortModuleInstCellMap{}),dotk{}())),
        VarK:SortModuleInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCell`(inj{ModuleInstancesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCell{},R} (
        Lblproject'Coln'ModuleInstancesCell{}(kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(VarK:SortModuleInstancesCell{}),dotk{}())),
        VarK:SortModuleInstancesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCellFragment`(inj{ModuleInstancesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCellFragment{},R} (
        Lblproject'Coln'ModuleInstancesCellFragment{}(kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(VarK:SortModuleInstancesCellFragment{}),dotk{}())),
        VarK:SortModuleInstancesCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCellOpt`(inj{ModuleInstancesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCellOpt{},R} (
        Lblproject'Coln'ModuleInstancesCellOpt{}(kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(VarK:SortModuleInstancesCellOpt{}),dotk{}())),
        VarK:SortModuleInstancesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleRegistryCell`(inj{ModuleRegistryCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleRegistryCell{},R} (
        Lblproject'Coln'ModuleRegistryCell{}(kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(VarK:SortModuleRegistryCell{}),dotk{}())),
        VarK:SortModuleRegistryCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleRegistryCellOpt`(inj{ModuleRegistryCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleRegistryCellOpt{},R} (
        Lblproject'Coln'ModuleRegistryCellOpt{}(kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(VarK:SortModuleRegistryCellOpt{}),dotk{}())),
        VarK:SortModuleRegistryCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MsizeCell`(inj{MsizeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMsizeCell{},R} (
        Lblproject'Coln'MsizeCell{}(kseq{}(inj{SortMsizeCell{}, SortKItem{}}(VarK:SortMsizeCell{}),dotk{}())),
        VarK:SortMsizeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MsizeCellOpt`(inj{MsizeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMsizeCellOpt{},R} (
        Lblproject'Coln'MsizeCellOpt{}(kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(VarK:SortMsizeCellOpt{}),dotk{}())),
        VarK:SortMsizeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Mut`(inj{Mut,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMut{},R} (
        Lblproject'Coln'Mut{}(kseq{}(inj{SortMut{}, SortKItem{}}(VarK:SortMut{}),dotk{}())),
        VarK:SortMut{}),
      \top{R}()))
  [projection{}()]

// rule `project:NValType`(inj{NValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNValType{},R} (
        Lblproject'Coln'NValType{}(kseq{}(inj{SortNValType{}, SortKItem{}}(VarK:SortNValType{}),dotk{}())),
        VarK:SortNValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFreshIdCell`(inj{NextFreshIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFreshIdCell{},R} (
        Lblproject'Coln'NextFreshIdCell{}(kseq{}(inj{SortNextFreshIdCell{}, SortKItem{}}(VarK:SortNextFreshIdCell{}),dotk{}())),
        VarK:SortNextFreshIdCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFreshIdCellOpt`(inj{NextFreshIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFreshIdCellOpt{},R} (
        Lblproject'Coln'NextFreshIdCellOpt{}(kseq{}(inj{SortNextFreshIdCellOpt{}, SortKItem{}}(VarK:SortNextFreshIdCellOpt{}),dotk{}())),
        VarK:SortNextFreshIdCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncAddrCell`(inj{NextFuncAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncAddrCell{},R} (
        Lblproject'Coln'NextFuncAddrCell{}(kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(VarK:SortNextFuncAddrCell{}),dotk{}())),
        VarK:SortNextFuncAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncAddrCellOpt`(inj{NextFuncAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncAddrCellOpt{},R} (
        Lblproject'Coln'NextFuncAddrCellOpt{}(kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(VarK:SortNextFuncAddrCellOpt{}),dotk{}())),
        VarK:SortNextFuncAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncIdxCell`(inj{NextFuncIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncIdxCell{},R} (
        Lblproject'Coln'NextFuncIdxCell{}(kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(VarK:SortNextFuncIdxCell{}),dotk{}())),
        VarK:SortNextFuncIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncIdxCellOpt`(inj{NextFuncIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncIdxCellOpt{},R} (
        Lblproject'Coln'NextFuncIdxCellOpt{}(kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(VarK:SortNextFuncIdxCellOpt{}),dotk{}())),
        VarK:SortNextFuncIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobAddrCell`(inj{NextGlobAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobAddrCell{},R} (
        Lblproject'Coln'NextGlobAddrCell{}(kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(VarK:SortNextGlobAddrCell{}),dotk{}())),
        VarK:SortNextGlobAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobAddrCellOpt`(inj{NextGlobAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobAddrCellOpt{},R} (
        Lblproject'Coln'NextGlobAddrCellOpt{}(kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(VarK:SortNextGlobAddrCellOpt{}),dotk{}())),
        VarK:SortNextGlobAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobIdxCell`(inj{NextGlobIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobIdxCell{},R} (
        Lblproject'Coln'NextGlobIdxCell{}(kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(VarK:SortNextGlobIdxCell{}),dotk{}())),
        VarK:SortNextGlobIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobIdxCellOpt`(inj{NextGlobIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobIdxCellOpt{},R} (
        Lblproject'Coln'NextGlobIdxCellOpt{}(kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(VarK:SortNextGlobIdxCellOpt{}),dotk{}())),
        VarK:SortNextGlobIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextMemAddrCell`(inj{NextMemAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextMemAddrCell{},R} (
        Lblproject'Coln'NextMemAddrCell{}(kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(VarK:SortNextMemAddrCell{}),dotk{}())),
        VarK:SortNextMemAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextMemAddrCellOpt`(inj{NextMemAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextMemAddrCellOpt{},R} (
        Lblproject'Coln'NextMemAddrCellOpt{}(kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(VarK:SortNextMemAddrCellOpt{}),dotk{}())),
        VarK:SortNextMemAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextModuleIdxCell`(inj{NextModuleIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextModuleIdxCell{},R} (
        Lblproject'Coln'NextModuleIdxCell{}(kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(VarK:SortNextModuleIdxCell{}),dotk{}())),
        VarK:SortNextModuleIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextModuleIdxCellOpt`(inj{NextModuleIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextModuleIdxCellOpt{},R} (
        Lblproject'Coln'NextModuleIdxCellOpt{}(kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(VarK:SortNextModuleIdxCellOpt{}),dotk{}())),
        VarK:SortNextModuleIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTabAddrCell`(inj{NextTabAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTabAddrCell{},R} (
        Lblproject'Coln'NextTabAddrCell{}(kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(VarK:SortNextTabAddrCell{}),dotk{}())),
        VarK:SortNextTabAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTabAddrCellOpt`(inj{NextTabAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTabAddrCellOpt{},R} (
        Lblproject'Coln'NextTabAddrCellOpt{}(kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(VarK:SortNextTabAddrCellOpt{}),dotk{}())),
        VarK:SortNextTabAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTypeIdxCell`(inj{NextTypeIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTypeIdxCell{},R} (
        Lblproject'Coln'NextTypeIdxCell{}(kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(VarK:SortNextTypeIdxCell{}),dotk{}())),
        VarK:SortNextTypeIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTypeIdxCellOpt`(inj{NextTypeIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTypeIdxCellOpt{},R} (
        Lblproject'Coln'NextTypeIdxCellOpt{}(kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(VarK:SortNextTypeIdxCellOpt{}),dotk{}())),
        VarK:SortNextTypeIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Number`(inj{Number,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNumber{},R} (
        Lblproject'Coln'Number{}(kseq{}(inj{SortNumber{}, SortKItem{}}(VarK:SortNumber{}),dotk{}())),
        VarK:SortNumber{}),
      \top{R}()))
  [projection{}()]

// rule `project:Offset`(inj{Offset,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOffset{},R} (
        Lblproject'Coln'Offset{}(kseq{}(inj{SortOffset{}, SortKItem{}}(VarK:SortOffset{}),dotk{}())),
        VarK:SortOffset{}),
      \top{R}()))
  [projection{}()]

// rule `project:OffsetArg`(inj{OffsetArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOffsetArg{},R} (
        Lblproject'Coln'OffsetArg{}(kseq{}(inj{SortOffsetArg{}, SortKItem{}}(VarK:SortOffsetArg{}),dotk{}())),
        VarK:SortOffsetArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalId`(inj{OptionalId,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'OptionalId{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarK:SortOptionalId{}),dotk{}())),
        VarK:SortOptionalId{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalInt`(inj{OptionalInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalInt{},R} (
        Lblproject'Coln'OptionalInt{}(kseq{}(inj{SortOptionalInt{}, SortKItem{}}(VarK:SortOptionalInt{}),dotk{}())),
        VarK:SortOptionalInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:PlainInstr`(inj{PlainInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPlainInstr{},R} (
        Lblproject'Coln'PlainInstr{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarK:SortPlainInstr{}),dotk{}())),
        VarK:SortPlainInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lblproject'Coln'Set{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())),
        VarK:SortSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Signedness`(inj{Signedness,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSignedness{},R} (
        Lblproject'Coln'Signedness{}(kseq{}(inj{SortSignedness{}, SortKItem{}}(VarK:SortSignedness{}),dotk{}())),
        VarK:SortSignedness{}),
      \top{R}()))
  [projection{}()]

// rule `project:StartDefn`(inj{StartDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStartDefn{},R} (
        Lblproject'Coln'StartDefn{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(VarK:SortStartDefn{}),dotk{}())),
        VarK:SortStartDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmt{},R} (
        Lblproject'Coln'Stmt{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())),
        VarK:SortStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmts`(inj{Stmts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmts{},R} (
        Lblproject'Coln'Stmts{}(kseq{}(inj{SortStmts{}, SortKItem{}}(VarK:SortStmts{}),dotk{}())),
        VarK:SortStmts{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreOp`(inj{StoreOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreOp{},R} (
        Lblproject'Coln'StoreOp{}(kseq{}(inj{SortStoreOp{}, SortKItem{}}(VarK:SortStoreOp{}),dotk{}())),
        VarK:SortStoreOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreOpM`(inj{StoreOpM,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreOpM{},R} (
        Lblproject'Coln'StoreOpM{}(kseq{}(inj{SortStoreOpM{}, SortKItem{}}(VarK:SortStoreOpM{}),dotk{}())),
        VarK:SortStoreOpM{}),
      \top{R}()))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblproject'Coln'String{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())),
        VarK:SortString{}),
      \top{R}()))
  [projection{}()]

// rule `project:TAddrCell`(inj{TAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTAddrCell{},R} (
        Lblproject'Coln'TAddrCell{}(kseq{}(inj{SortTAddrCell{}, SortKItem{}}(VarK:SortTAddrCell{}),dotk{}())),
        VarK:SortTAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TAddrCellOpt`(inj{TAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTAddrCellOpt{},R} (
        Lblproject'Coln'TAddrCellOpt{}(kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(VarK:SortTAddrCellOpt{}),dotk{}())),
        VarK:SortTAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabAddrsCell`(inj{TabAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabAddrsCell{},R} (
        Lblproject'Coln'TabAddrsCell{}(kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(VarK:SortTabAddrsCell{}),dotk{}())),
        VarK:SortTabAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabAddrsCellOpt`(inj{TabAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabAddrsCellOpt{},R} (
        Lblproject'Coln'TabAddrsCellOpt{}(kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(VarK:SortTabAddrsCellOpt{}),dotk{}())),
        VarK:SortTabAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabIdsCell`(inj{TabIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabIdsCell{},R} (
        Lblproject'Coln'TabIdsCell{}(kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(VarK:SortTabIdsCell{}),dotk{}())),
        VarK:SortTabIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabIdsCellOpt`(inj{TabIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabIdsCellOpt{},R} (
        Lblproject'Coln'TabIdsCellOpt{}(kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(VarK:SortTabIdsCellOpt{}),dotk{}())),
        VarK:SortTabIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCell`(inj{TabInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCell{},R} (
        Lblproject'Coln'TabInstCell{}(kseq{}(inj{SortTabInstCell{}, SortKItem{}}(VarK:SortTabInstCell{}),dotk{}())),
        VarK:SortTabInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCellFragment`(inj{TabInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCellFragment{},R} (
        Lblproject'Coln'TabInstCellFragment{}(kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(VarK:SortTabInstCellFragment{}),dotk{}())),
        VarK:SortTabInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCellMap`(inj{TabInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCellMap{},R} (
        Lblproject'Coln'TabInstCellMap{}(kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(VarK:SortTabInstCellMap{}),dotk{}())),
        VarK:SortTabInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableDefn`(inj{TableDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableDefn{},R} (
        Lblproject'Coln'TableDefn{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(VarK:SortTableDefn{}),dotk{}())),
        VarK:SortTableDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableElemType`(inj{TableElemType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableElemType{},R} (
        Lblproject'Coln'TableElemType{}(kseq{}(inj{SortTableElemType{}, SortKItem{}}(VarK:SortTableElemType{}),dotk{}())),
        VarK:SortTableElemType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableSpec`(inj{TableSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableSpec{},R} (
        Lblproject'Coln'TableSpec{}(kseq{}(inj{SortTableSpec{}, SortKItem{}}(VarK:SortTableSpec{}),dotk{}())),
        VarK:SortTableSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableType`(inj{TableType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableType{},R} (
        Lblproject'Coln'TableType{}(kseq{}(inj{SortTableType{}, SortKItem{}}(VarK:SortTableType{}),dotk{}())),
        VarK:SortTableType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCell`(inj{TabsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCell{},R} (
        Lblproject'Coln'TabsCell{}(kseq{}(inj{SortTabsCell{}, SortKItem{}}(VarK:SortTabsCell{}),dotk{}())),
        VarK:SortTabsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCellFragment`(inj{TabsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCellFragment{},R} (
        Lblproject'Coln'TabsCellFragment{}(kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(VarK:SortTabsCellFragment{}),dotk{}())),
        VarK:SortTabsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCellOpt`(inj{TabsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCellOpt{},R} (
        Lblproject'Coln'TabsCellOpt{}(kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(VarK:SortTabsCellOpt{}),dotk{}())),
        VarK:SortTabsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TdataCell`(inj{TdataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTdataCell{},R} (
        Lblproject'Coln'TdataCell{}(kseq{}(inj{SortTdataCell{}, SortKItem{}}(VarK:SortTdataCell{}),dotk{}())),
        VarK:SortTdataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TdataCellOpt`(inj{TdataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTdataCellOpt{},R} (
        Lblproject'Coln'TdataCellOpt{}(kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(VarK:SortTdataCellOpt{}),dotk{}())),
        VarK:SortTdataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TestOp`(inj{TestOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTestOp{},R} (
        Lblproject'Coln'TestOp{}(kseq{}(inj{SortTestOp{}, SortKItem{}}(VarK:SortTestOp{}),dotk{}())),
        VarK:SortTestOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:TextFormatGlobalType`(inj{TextFormatGlobalType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTextFormatGlobalType{},R} (
        Lblproject'Coln'TextFormatGlobalType{}(kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(VarK:SortTextFormatGlobalType{}),dotk{}())),
        VarK:SortTextFormatGlobalType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TmaxCell`(inj{TmaxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTmaxCell{},R} (
        Lblproject'Coln'TmaxCell{}(kseq{}(inj{SortTmaxCell{}, SortKItem{}}(VarK:SortTmaxCell{}),dotk{}())),
        VarK:SortTmaxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TmaxCellOpt`(inj{TmaxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTmaxCellOpt{},R} (
        Lblproject'Coln'TmaxCellOpt{}(kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(VarK:SortTmaxCellOpt{}),dotk{}())),
        VarK:SortTmaxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TsizeCell`(inj{TsizeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTsizeCell{},R} (
        Lblproject'Coln'TsizeCell{}(kseq{}(inj{SortTsizeCell{}, SortKItem{}}(VarK:SortTsizeCell{}),dotk{}())),
        VarK:SortTsizeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TsizeCellOpt`(inj{TsizeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTsizeCellOpt{},R} (
        Lblproject'Coln'TsizeCellOpt{}(kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(VarK:SortTsizeCellOpt{}),dotk{}())),
        VarK:SortTsizeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortType{},R} (
        Lblproject'Coln'Type{}(kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())),
        VarK:SortType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDecl`(inj{TypeDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeDecl{},R} (
        Lblproject'Coln'TypeDecl{}(kseq{}(inj{SortTypeDecl{}, SortKItem{}}(VarK:SortTypeDecl{}),dotk{}())),
        VarK:SortTypeDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDecls`(inj{TypeDecls,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeDecls{},R} (
        Lblproject'Coln'TypeDecls{}(kseq{}(inj{SortTypeDecls{}, SortKItem{}}(VarK:SortTypeDecls{}),dotk{}())),
        VarK:SortTypeDecls{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDefn`(inj{TypeDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeDefn{},R} (
        Lblproject'Coln'TypeDefn{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(VarK:SortTypeDefn{}),dotk{}())),
        VarK:SortTypeDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeIdsCell`(inj{TypeIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeIdsCell{},R} (
        Lblproject'Coln'TypeIdsCell{}(kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(VarK:SortTypeIdsCell{}),dotk{}())),
        VarK:SortTypeIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeIdsCellOpt`(inj{TypeIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeIdsCellOpt{},R} (
        Lblproject'Coln'TypeIdsCellOpt{}(kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(VarK:SortTypeIdsCellOpt{}),dotk{}())),
        VarK:SortTypeIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeKeyWord`(inj{TypeKeyWord,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeKeyWord{},R} (
        Lblproject'Coln'TypeKeyWord{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarK:SortTypeKeyWord{}),dotk{}())),
        VarK:SortTypeKeyWord{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeUse`(inj{TypeUse,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeUse{},R} (
        Lblproject'Coln'TypeUse{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarK:SortTypeUse{}),dotk{}())),
        VarK:SortTypeUse{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesCell`(inj{TypesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypesCell{},R} (
        Lblproject'Coln'TypesCell{}(kseq{}(inj{SortTypesCell{}, SortKItem{}}(VarK:SortTypesCell{}),dotk{}())),
        VarK:SortTypesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesCellOpt`(inj{TypesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypesCellOpt{},R} (
        Lblproject'Coln'TypesCellOpt{}(kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(VarK:SortTypesCellOpt{}),dotk{}())),
        VarK:SortTypesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lblproject'Coln'Val{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())),
        VarK:SortVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValStack`(inj{ValStack,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lblproject'Coln'ValStack{}(kseq{}(inj{SortValStack{}, SortKItem{}}(VarK:SortValStack{}),dotk{}())),
        VarK:SortValStack{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValType`(inj{ValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValType{},R} (
        Lblproject'Coln'ValType{}(kseq{}(inj{SortValType{}, SortKItem{}}(VarK:SortValType{}),dotk{}())),
        VarK:SortValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValTypes`(inj{ValTypes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lblproject'Coln'ValTypes{}(kseq{}(inj{SortValTypes{}, SortKItem{}}(VarK:SortValTypes{}),dotk{}())),
        VarK:SortValTypes{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValstackCell`(inj{ValstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValstackCell{},R} (
        Lblproject'Coln'ValstackCell{}(kseq{}(inj{SortValstackCell{}, SortKItem{}}(VarK:SortValstackCell{}),dotk{}())),
        VarK:SortValstackCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValstackCellOpt`(inj{ValstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValstackCellOpt{},R} (
        Lblproject'Coln'ValstackCellOpt{}(kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(VarK:SortValstackCellOpt{}),dotk{}())),
        VarK:SortValstackCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:VecType`(inj{VecType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lblproject'Coln'VecType{}(kseq{}(inj{SortVecType{}, SortKItem{}}(VarK:SortVecType{}),dotk{}())),
        VarK:SortVecType{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCell`(inj{WasmCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCell{},R} (
        Lblproject'Coln'WasmCell{}(kseq{}(inj{SortWasmCell{}, SortKItem{}}(VarK:SortWasmCell{}),dotk{}())),
        VarK:SortWasmCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCellFragment`(inj{WasmCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCellFragment{},R} (
        Lblproject'Coln'WasmCellFragment{}(kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(VarK:SortWasmCellFragment{}),dotk{}())),
        VarK:SortWasmCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCellOpt`(inj{WasmCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCellOpt{},R} (
        Lblproject'Coln'WasmCellOpt{}(kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(VarK:SortWasmCellOpt{}),dotk{}())),
        VarK:SortWasmCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmInt`(inj{WasmInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmInt{},R} (
        Lblproject'Coln'WasmInt{}(kseq{}(inj{SortWasmInt{}, SortKItem{}}(VarK:SortWasmInt{}),dotk{}())),
        VarK:SortWasmInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmIntToken`(inj{WasmIntToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmIntToken{},R} (
        Lblproject'Coln'WasmIntToken{}(kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(VarK:SortWasmIntToken{}),dotk{}())),
        VarK:SortWasmIntToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmString`(inj{WasmString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmString{},R} (
        Lblproject'Coln'WasmString{}(kseq{}(inj{SortWasmString{}, SortKItem{}}(VarK:SortWasmString{}),dotk{}())),
        VarK:SortWasmString{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmStringToken`(inj{WasmStringToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmStringToken{},R} (
        Lblproject'Coln'WasmStringToken{}(kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(VarK:SortWasmStringToken{}),dotk{}())),
        VarK:SortWasmStringToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:ctx(_)_WASM-TEXT_Context_Map:localIds`(`ctx(_)_WASM-TEXT_Context_Map`(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'ctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Coln'localIds{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(VarK0:SortMap{})),
        VarK0:SortMap{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:exports`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K5 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'exports{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK5:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:funcsGlobals`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K3 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'funcsGlobals{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK3:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:id`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'id{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:importDefns`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'importDefns{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK2:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:inits`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K6 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'inits{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK6:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:memsTables`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K4 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'memsTables{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK4:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:start`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K7 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'start{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK7:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:types`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'types{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK1:SortDefns{}),
      \top{R}()))
  []

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), contentStartColumn(8), contentStartLine(684), org.kframework.attributes.Location(Location(684,8,687,30)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},VarCount:SortInt{}),
        Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("684"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(684,8,687,30)"), UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_0,_1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), contentStartColumn(8), contentStartLine(688), org.kframework.attributes.Location(Location(688,8,688,49)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},Var'Unds'0:SortString{},Var'Unds'1:SortString{},\dv{SortInt{}}("0")),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("688"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(688,8,688,49)"), UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), contentStartColumn(8), contentStartLine(689), org.kframework.attributes.Location(Location(689,8,689,154)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("689"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(689,8,689,154)"), UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), contentStartColumn(8), contentStartLine(677), org.kframework.attributes.Location(Location(677,8,679,66)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("677"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(677,8,679,66)"), UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), contentStartColumn(8), contentStartLine(680), org.kframework.attributes.Location(Location(680,8,681,57)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},Var'Unds'0:SortString{}),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("680"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(680,8,681,57)"), UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), contentStartColumn(8), contentStartLine(669), org.kframework.attributes.Location(Location(669,8,669,182)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("669"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(669,8,669,182)"), UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), contentStartColumn(8), contentStartLine(670), org.kframework.attributes.Location(Location(670,8,670,33)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("670"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(670,8,670,33)"), UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), contentStartColumn(8), contentStartLine(507), org.kframework.attributes.Location(Location(507,8,507,164)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("507"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(507,8,507,164)"), UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f")]

// rule `sortModule(_,_)_WASM_ModuleDecl_Defns_OptionalId`(DEFNS,OID)=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`#reverse(_,_)_WASM_Defns_Defns_Defns`(DEFNS,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(OID,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7d6753d747d9dc920a9eefbe09ac0b4cb348847bc770de08325bfebc91fbf9), contentStartColumn(10), contentStartLine(1458), org.kframework.attributes.Location(Location(1458,10,1458,224)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        LblsortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(VarDEFNS:SortDefns{},VarOID:SortOptionalId{}),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDEFNS:SortDefns{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarOID:SortOptionalId{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("1458"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1458,10,1458,224)"), UNIQUE'Unds'ID{}("0e7d6753d747d9dc920a9eefbe09ac0b4cb348847bc770de08325bfebc91fbf9")]

// rule `sqrtFloat(_)_FLOAT_Float_Float`(F)=>`rootFloat(_,_)_FLOAT_Float_Float_Int`(F,#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc1f1e41550433293802b49fcbf04130479a51083902539ae31df11f556b88fe), contentStartColumn(8), contentStartLine(597), org.kframework.attributes.Location(Location(597,8,597,45)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFloat{},R} (
        LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{}),
        LblrootFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int{}(VarF:SortFloat{},\dv{SortInt{}}("2"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/deps/k/k-distribution/target/release/k/include/kframework/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("597"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(597,8,597,45)"), UNIQUE'Unds'ID{}("fc1f1e41550433293802b49fcbf04130479a51083902539ae31df11f556b88fe")]

// rule `text2abstract(_)_WASM_Stmts_Stmts`(SS)=>`#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(`ctx(_)_WASM-TEXT_Context_Map`(`.Map`(.KList)),SS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0fadaefc6393e2cd0355652ef66a44b47a77fc3ab5d380a96da70fa0f0bf8f34), contentStartColumn(10), contentStartLine(414), org.kframework.attributes.Location(Location(414,10,414,70)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(VarSS:SortStmts{}),
        Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(Lblctx'LParUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map{}(Lbl'Stop'Map{}()),VarSS:SortStmts{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("414"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,10,414,70)"), UNIQUE'Unds'ID{}("0fadaefc6393e2cd0355652ef66a44b47a77fc3ab5d380a96da70fa0f0bf8f34")]

// rule `truncFloat(_)_WASM-NUMERIC_Float_Float`(F)=>`ceilFloat(_)_FLOAT_Float_Float`(F) requires `signFloat(_)_FLOAT_Bool_Float`(F) ensures #token("true","Bool") [UNIQUE_ID(ba89a6fac26467de7c1d012cbee2ca94002d8aa95432bdbaed9ae1e0e8db4fda), contentStartColumn(10), contentStartLine(70), org.kframework.attributes.Location(Location(70,10,70,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortFloat{},R} (
        LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}),
        LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("70"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,10,70,74)"), UNIQUE'Unds'ID{}("ba89a6fac26467de7c1d012cbee2ca94002d8aa95432bdbaed9ae1e0e8db4fda")]

// rule `truncFloat(_)_WASM-NUMERIC_Float_Float`(F)=>`floorFloat(_)_FLOAT_Float_Float`(F) requires `notBool_`(`signFloat(_)_FLOAT_Bool_Float`(F)) ensures #token("true","Bool") [UNIQUE_ID(4d0ca1cbf5cbe74889d93e297b8a59abc65c55f59d49dea2526db29753ff89d7), contentStartColumn(10), contentStartLine(69), org.kframework.attributes.Location(Location(69,10,69,74)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortFloat{},R} (
        LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}),
        LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("69"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,10,69,74)"), UNIQUE'Unds'ID{}("4d0ca1cbf5cbe74889d93e297b8a59abc65c55f59d49dea2526db29753ff89d7")]

// rule `unescape(_)_WASM-DATA_String_String`(S)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,#token("1","Int"),#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d79b365ae692c40e102365a48c9ffc69bfbbfd1a84f79fd4cee5ac9d3750cf5), contentStartColumn(10), contentStartLine(390), org.kframework.attributes.Location(Location(390,10,390,52)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(VarS:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},\dv{SortInt{}}("1"),\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("390"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(390,10,390,52)"), UNIQUE'Unds'ID{}("7d79b365ae692c40e102365a48c9ffc69bfbbfd1a84f79fd4cee5ac9d3750cf5")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>SB requires `_==Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(d0a4b9de242512df00da9cc8b12c65dbecb08dacc06403255722cfc74ad09910), contentStartColumn(10), contentStartLine(391), org.kframework.attributes.Location(Location(391,10,391,94)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        VarSB:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("391"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,10,391,94)"), UNIQUE'Unds'ID{}("d0a4b9de242512df00da9cc8b12c65dbecb08dacc06403255722cfc74ad09910")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("1","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int"))))) requires `_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))),`_=/=K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(d2d71adac9c21981b0cf7947c5a63999291503ba7e48e509d4b6b79ea3f638aa), contentStartColumn(10), contentStartLine(398), org.kframework.attributes.Location(Location(398,10,400,58)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("398"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,10,400,58)"), UNIQUE'Unds'ID{}("d2d71adac9c21981b0cf7947c5a63999291503ba7e48e509d4b6b79ea3f638aa")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#token("\"09\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"t\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(7315bb5c9a90f933a6385a578ac02ea171f0378e4fe43ab5772d027c1ae029e4), contentStartColumn(10), contentStartLine(410), org.kframework.attributes.Location(Location(410,10,413,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("t")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("09"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("410"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,10,413,63)"), UNIQUE'Unds'ID{}("7315bb5c9a90f933a6385a578ac02ea171f0378e4fe43ab5772d027c1ae029e4")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#token("\"0A\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"n\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(5c214685d21bc6779dffcb6c50ff97644fbb6db1941dfc1439a82d0026fccc1c), contentStartColumn(10), contentStartLine(414), org.kframework.attributes.Location(Location(414,10,417,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("n")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("0A"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("414"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,10,417,63)"), UNIQUE'Unds'ID{}("5c214685d21bc6779dffcb6c50ff97644fbb6db1941dfc1439a82d0026fccc1c")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#token("\"0D\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"r\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(8bb114fee4a7fa794a5a7a4764089b9ed68256828380ecfdb71e3f4c08622056), contentStartColumn(10), contentStartLine(418), org.kframework.attributes.Location(Location(418,10,421,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("r")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("0D"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("418"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,421,63)"), UNIQUE'Unds'ID{}("8bb114fee4a7fa794a5a7a4764089b9ed68256828380ecfdb71e3f4c08622056")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#token("\"22\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"\\\"\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(d16a1aa26fc62bae35d9cb8433d9594fdc956d1e793852ec62af482297172cf1), contentStartColumn(10), contentStartLine(422), org.kframework.attributes.Location(Location(422,10,425,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\"")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("22"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("422"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(422,10,425,64)"), UNIQUE'Unds'ID{}("d16a1aa26fc62bae35d9cb8433d9594fdc956d1e793852ec62af482297172cf1")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#token("\"27\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"'\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(900dfc3051de47de1f8b7c423eed706f7f41cb6db50d544e406b99c6e6743f58), contentStartColumn(10), contentStartLine(426), org.kframework.attributes.Location(Location(426,10,429,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("'")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("27"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("426"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(426,10,429,63)"), UNIQUE'Unds'ID{}("900dfc3051de47de1f8b7c423eed706f7f41cb6db50d544e406b99c6e6743f58")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#token("\"5C\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(5f99aee1c7fc26b7bff499ada6e524664ca056b3dd5a06428f64510882d5444b), contentStartColumn(10), contentStartLine(430), org.kframework.attributes.Location(Location(430,10,433,64)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("5C"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("430"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(430,10,433,64)"), UNIQUE'Unds'ID{}("5f99aee1c7fc26b7bff499ada6e524664ca056b3dd5a06428f64510882d5444b")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("3","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("3","Int"))),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("3","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#token("\"0123456789abcdefABCDEF\"","String"),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int"))),#token("0","Int")),#token("-1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7c0eea67418a2ca1e69aaf0188d71964e01b717dba8652ec72b4f4ab76304734), contentStartColumn(10), contentStartLine(401), org.kframework.attributes.Location(Location(401,10,404,107)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("3"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(\dv{SortString{}}("0123456789abcdefABCDEF"),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2"))),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3"))),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("401"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,10,404,107)"), UNIQUE'Unds'ID{}("7c0eea67418a2ca1e69aaf0188d71964e01b717dba8652ec72b4f4ab76304734")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,IDX),#token("1","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`Bytes2String(_)_BYTES-HOOKED_String_Bytes`(`#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("3","Int")),`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,`_+Int_`(IDX,#token("3","Int")))),#token("16","Int")),bigEndianBytes(.KList))))) requires `_andBool_`(`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"u\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(0d4ed48d8d56dc348d0d510bb27b75f745aec09b58649633e1f69df3a3c9a425), contentStartColumn(10), contentStartLine(455), org.kframework.attributes.Location(Location(455,10,457,63)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}())),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("u")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{}),\dv{SortInt{}}("1")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")),Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")))),\dv{SortInt{}}("16")),LblbigEndianBytes{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires), symbol]"), contentStartLine{}("455"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(455,10,457,63)"), UNIQUE'Unds'ID{}("0d4ed48d8d56dc348d0d510bb27b75f745aec09b58649633e1f69df3a3c9a425")]

// rule `unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`_->__WASM-DATA_FuncType_VecType_VecType`(`[_]_WASM-DATA_VecType_ValTypes`(V1),`[_]_WASM-DATA_VecType_ValTypes`(V2) #as _2))=>`_->__WASM-DATA_FuncType_VecType_VecType`(`[_]_WASM-DATA_VecType_ValTypes`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(V1)),_2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2de4cd1b7d6939068bd193f9280549bebebcbc6f130966bf33c6503e5733512b), contentStartColumn(10), contentStartLine(147), org.kframework.attributes.Location(Location(147,10,147,80)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarV1:SortValTypes{}),\and{SortVecType{}}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarV2:SortValTypes{}),Var'Unds'2:SortVecType{}))),
        Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarV1:SortValTypes{})),Var'Unds'2:SortVecType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("147"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(147,10,147,80)"), UNIQUE'Unds'ID{}("2de4cd1b7d6939068bd193f9280549bebebcbc6f130966bf33c6503e5733512b")]

// rule `unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList) #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7e406ca664d1547a614cf779038a29829cfd8edee6411b6fe241b2d7887d6048), contentStartColumn(10), contentStartLine(155), org.kframework.attributes.Location(Location(155,10,155,55)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(\and{SortValTypes{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),Var'Unds'0:SortValTypes{})),
        Var'Unds'0:SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("155"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,10,155,55)"), UNIQUE'Unds'ID{}("7e406ca664d1547a614cf779038a29829cfd8edee6411b6fe241b2d7887d6048")]

// rule `unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(V) #as _1,VS))=>`___WASM-DATA_ValTypes_ValType_ValTypes`(_1,`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(VS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9dd8e27f1e3e23277e53edbebcc4bb79bccb727b3773b4747867e261f4ec5184), contentStartColumn(10), contentStartLine(157), org.kframework.attributes.Location(Location(157,10,157,69)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(\and{SortValType{}}(inj{SortAValType{}, SortValType{}}(VarV:SortAValType{}),Var'Unds'1:SortValType{}),VarVS:SortValTypes{})),
        Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(Var'Unds'1:SortValType{},LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarVS:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("157"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,10,157,69)"), UNIQUE'Unds'ID{}("9dd8e27f1e3e23277e53edbebcc4bb79bccb727b3773b4747867e261f4ec5184")]

// rule `unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,V)),VS))=>`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(V),`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(VS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd389ae10458482824b9523ff59bd3da9e995069b542b46e1dd21600ab4b1e2e), contentStartColumn(10), contentStartLine(156), org.kframework.attributes.Location(Location(156,10,156,69)), org.kframework.attributes.Source(Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarV:SortAValType{})),VarVS:SortValTypes{})),
        Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarV:SortAValType{}),LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarVS:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), contentStartLine{}("156"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(156,10,156,69)"), UNIQUE'Unds'ID{}("bd389ae10458482824b9523ff59bd3da9e995069b542b46e1dd21600ab4b1e2e")]

// rule #Ceil{FuncDefCellMap,#SortParam}(`_FuncDefCellMap_`(`FuncDefCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`FuncDefCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#True{#SortParam}(.KList),#Ceil{FuncDefCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [anywhere, simplification, sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortFuncDefCellMap{}, Q0}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(@VarK0:SortFAddrCell{},@VarK1:SortFuncDefCell{}),@VarRest:SortFuncDefCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblFuncDefCellMap'Coln'in'Unds'keys{}(@VarK0:SortFAddrCell{},@VarRest:SortFuncDefCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortFuncDefCell{}, Q0}(@VarK1:SortFuncDefCell{})))),
      \top{R}()))
  [anywhere{}(), simplification{}(), sortParams{}("[Q0]")]

// rule #Ceil{GlobalInstCellMap,#SortParam}(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`GlobalInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#True{#SortParam}(.KList),#Ceil{GlobalInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [anywhere, simplification, sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortGlobalInstCellMap{}, Q0}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(@VarK0:SortGAddrCell{},@VarK1:SortGlobalInstCell{}),@VarRest:SortGlobalInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblGlobalInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortGAddrCell{},@VarRest:SortGlobalInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortGlobalInstCell{}, Q0}(@VarK1:SortGlobalInstCell{})))),
      \top{R}()))
  [anywhere{}(), simplification{}(), sortParams{}("[Q0]")]

// rule #Ceil{MemInstCellMap,#SortParam}(`_MemInstCellMap_`(`MemInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`MemInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#True{#SortParam}(.KList),#Ceil{MemInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [anywhere, simplification, sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortMemInstCellMap{}, Q0}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(@VarK0:SortMAddrCell{},@VarK1:SortMemInstCell{}),@VarRest:SortMemInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblMemInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortMAddrCell{},@VarRest:SortMemInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortMemInstCell{}, Q0}(@VarK1:SortMemInstCell{})))),
      \top{R}()))
  [anywhere{}(), simplification{}(), sortParams{}("[Q0]")]

// rule #Ceil{ModuleInstCellMap,#SortParam}(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`ModuleInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#True{#SortParam}(.KList),#Ceil{ModuleInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [anywhere, simplification, sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortModuleInstCellMap{}, Q0}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(@VarK0:SortModIdxCell{},@VarK1:SortModuleInstCell{}),@VarRest:SortModuleInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblModuleInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortModIdxCell{},@VarRest:SortModuleInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortModuleInstCell{}, Q0}(@VarK1:SortModuleInstCell{})))),
      \top{R}()))
  [anywhere{}(), simplification{}(), sortParams{}("[Q0]")]

// rule #Ceil{TabInstCellMap,#SortParam}(`_TabInstCellMap_`(`TabInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`TabInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#True{#SortParam}(.KList),#Ceil{TabInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [anywhere, simplification, sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortTabInstCellMap{}, Q0}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(@VarK0:SortTAddrCell{},@VarK1:SortTabInstCell{}),@VarRest:SortTabInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblTabInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortTAddrCell{},@VarRest:SortTabInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortTabInstCell{}, Q0}(@VarK1:SortTabInstCell{})))),
      \top{R}()))
  [anywhere{}(), simplification{}(), sortParams{}("[Q0]")]

// rule #Ceil{Map,#SortParam}(`_Map_`(`_|->_`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`_in_keys(_)_MAP_Bool_KItem_Map`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#True{#SortParam}(.KList),#Ceil{KItem,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [anywhere, simplification, sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortMap{}, Q0}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(@VarK0:SortKItem{},@VarK1:SortKItem{}),@VarRest:SortMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(@VarK0:SortKItem{},@VarRest:SortMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortKItem{}, Q0}(@VarK1:SortKItem{})))),
      \top{R}()))
  [anywhere{}(), simplification{}(), sortParams{}("[Q0]")]


// priority groups
  alias priorityLE50{}() : SortGeneratedTopCell{}
  where priorityLE50{}() := \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVal{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule226LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVal{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortInstr{},\exists{SortGeneratedTopCell{}}(VarIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule227LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},VarIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarSS:SortStmts{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule228LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortInstr{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule229LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarL:SortLabel{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule230LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarSS:SortStmts{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule231LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarD:SortDefn{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule232LHS{}(VarD:SortDefn{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule233LHS{}(VarDS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarF:SortFrame{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule234LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarF:SortFrame{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortInstr{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule235LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule236LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarL:SortLabel{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule237LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(VarSS:SortStmts{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule238LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'12:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortInstr{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule239LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'14:SortInstr{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarTFIDF:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule240LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTFIDF:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarTFIDF:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule241LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTDECLS:SortTypeDecls{},VarTFIDF:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortTabIdsCell{},rule242LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortValstackCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{})))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortTabIdsCell{},rule243LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortValstackCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortNextTypeIdxCell{},Var'Unds'6:SortFuncIdsCell{},Var'Unds'7:SortFuncAddrsCell{},Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{})))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDATA:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortTabInstCellMap{},\exists{SortGeneratedTopCell{}}(VarE:SortIndex{},\exists{SortGeneratedTopCell{}}(VarES:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarFADDRS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarOFFSET:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortTmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortTsizeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortValstackCell{},rule244LHS{}(VarADDR:SortInt{},VarDATA:SortMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarE:SortIndex{},VarES:SortElemSegment{},VarFADDRS:SortMap{},VarIDS:SortMap{},VarOFFSET:SortInt{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortValstackCell{})))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextModuleIdxCell{},rule245LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{},Var'Unds'2:SortMap{},Var'Unds'3:SortMap{},Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarN:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule246LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarN:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule247LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarPI:SortPlainInstr{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule248LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarPI:SortPlainInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarPI:SortPlainInstr{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule249LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarPI:SortPlainInstr{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarINSTRS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule250LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINSTRS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarINSTRS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule251LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarINSTRS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarOFFSET:SortOffset{},\exists{SortGeneratedTopCell{}}(VarSTRINGS:SortDataString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule252LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarMEMID:SortIndex{},\exists{SortGeneratedTopCell{}}(VarSTRINGS:SortDataString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule253LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarMEMID:SortIndex{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarMEMID:SortIndex{},\exists{SortGeneratedTopCell{}}(VarSTRINGS:SortDataString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule254LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarMEMID:SortIndex{},VarSTRINGS:SortDataString{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarELEMSEGMENT:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarOFFSET:SortOffset{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule255LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarOFFSET:SortOffset{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarELEMSEGMENT:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTABIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule256LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarIS:SortInstrs{},VarTABIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarELEMSEGMENT:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTABIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule257LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarELEMSEGMENT:SortElemSegment{},VarIS:SortInstrs{},VarTABIDX:SortIndex{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarENAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarEXPORTS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortAllocatedKind{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFuncIdxCell{},rule258LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarENAME:SortWasmString{},VarEXPORTS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortAllocatedKind{},Var'Unds'1:SortLocalsCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{}))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarENAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortFuncSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule259LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortFuncSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarINSTRS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarLDECLS:SortLocalDecls{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTUSE:SortTypeUse{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule260LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINSTRS:SortInstrs{},VarLDECLS:SortLocalDecls{},VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEXPO:SortInlineExport{},\exists{SortGeneratedTopCell{}}(VarNEXTID:SortInt{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortFuncSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},rule261LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortFuncSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortFuncSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarENAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortGlobalSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule262LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortGlobalSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstr{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTYP:SortTextFormatGlobalType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule263LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstr{},VarOID:SortOptionalId{},VarTYP:SortTextFormatGlobalType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEXPO:SortInlineExport{},\exists{SortGeneratedTopCell{}}(VarNEXTID:SortInt{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortGlobalSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortGlobalSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},rule264LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortGlobalSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortGlobalSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarIS'Apos':SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule265LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarIS'Apos':SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule266LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule267LHS{}(VarC:SortInstrs{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar11:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar12:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortFuncDefCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar8:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarFS:SortMap{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFuncType{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS'Apos':SortMap{},\exists{SortGeneratedTopCell{}}(VarMOD:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarMODIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarNAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarNEXT:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarTUSE:SortTypeUse{},\exists{SortGeneratedTopCell{}}(VarTYPEIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFCodeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFLocalCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFModInstCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'31:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'35:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'44:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'47:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'51:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextGlobAddrCell{},rule268LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortFuncDefCellMap{},VarDotVar8:SortModuleInstCellMap{},VarFS:SortMap{},VarFTYPE:SortFuncType{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Var'Unds'0:SortFCodeCell{},Var'Unds'1:SortFLocalCell{},Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{},Var'Unds'13:SortExportsCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortFModInstCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortNextFuncIdxCell{},Var'Unds'26:SortTabIdsCell{},Var'Unds'27:SortTabAddrsCell{},Var'Unds'28:SortMemIdsCell{},Var'Unds'29:SortMemAddrsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortTabsCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'6:SortMemsCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{})))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar10:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar11:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortGlobalInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarGS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS'Apos':SortMap{},\exists{SortGeneratedTopCell{}}(VarMOD:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarMODIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarMUT:SortMut{},\exists{SortGeneratedTopCell{}}(VarNAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarNEXT:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarTGTYP:SortTextFormatGlobalType{},\exists{SortGeneratedTopCell{}}(VarTYP:SortAValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortNumber{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'31:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'35:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'44:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'47:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'51:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelDepthCell{},rule269LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortMap{},VarDotVar11:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortGlobalInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarGS:SortMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarMUT:SortMut{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTGTYP:SortTextFormatGlobalType{},VarTYP:SortAValType{},Var'Unds'0:SortNumber{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'3:SortTabsCell{},Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'44:SortCurFrameCell{},Var'Unds'47:SortModuleRegistryCell{},Var'Unds'5:SortMemsCell{},Var'Unds'51:SortMainStoreCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar11:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar12:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMdataCell{},\exists{SortGeneratedTopCell{}}(VarDotVar8:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS'Apos':SortMap{},\exists{SortGeneratedTopCell{}}(VarLIM:SortLimits{},\exists{SortGeneratedTopCell{}}(VarMAX:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(VarMOD:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarMODIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarNAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'31:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'35:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'45:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'48:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'52:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelIdsCell{},rule270LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortMemInstCellMap{},VarDotVar6:SortMdataCell{},VarDotVar8:SortModuleInstCellMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortTypeIdsCell{},Var'Unds'23:SortTypesCell{},Var'Unds'24:SortNextTypeIdxCell{},Var'Unds'25:SortFuncIdsCell{},Var'Unds'26:SortFuncAddrsCell{},Var'Unds'27:SortNextFuncIdxCell{},Var'Unds'28:SortTabIdsCell{},Var'Unds'29:SortTabAddrsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortGlobIdsCell{},Var'Unds'31:SortGlobalAddrsCell{},Var'Unds'32:SortNextGlobIdxCell{},Var'Unds'33:SortValstackCell{},Var'Unds'34:SortModuleIdsCell{},Var'Unds'35:SortNextModuleIdxCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'37:SortNextFreshIdCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'45:SortCurFrameCell{},Var'Unds'48:SortModuleRegistryCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'52:SortMainStoreCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{})))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar11:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar12:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortTabInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortTdataCell{},\exists{SortGeneratedTopCell{}}(VarDotVar8:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS'Apos':SortMap{},\exists{SortGeneratedTopCell{}}(VarLIM:SortLimits{},\exists{SortGeneratedTopCell{}}(VarMAX:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(VarMOD:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarMODIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarNAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortTableElemType{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'31:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'35:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'38:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'46:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'49:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'53:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelDepthCell{},rule271LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar11:SortMap{},VarDotVar12:SortMap{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar5:SortTabInstCellMap{},VarDotVar6:SortTdataCell{},VarDotVar8:SortModuleInstCellMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortTableElemType{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortMemIdsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{},Var'Unds'34:SortValstackCell{},Var'Unds'35:SortModuleIdsCell{},Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{},Var'Unds'4:SortMemsCell{},Var'Unds'46:SortCurFrameCell{},Var'Unds'49:SortModuleRegistryCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'53:SortMainStoreCell{},Var'Unds'6:SortGlobalsCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortFuncDefCellMap{},\exists{SortGeneratedTopCell{}}(VarFADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarINSTRS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarLOCAL:SortMap{},\exists{SortGeneratedTopCell{}}(VarMODIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarMODIDX'Apos':SortInt{},\exists{SortGeneratedTopCell{}}(VarTDOMAIN:SortValTypes{},\exists{SortGeneratedTopCell{}}(VarTLOCALS:SortValTypes{},\exists{SortGeneratedTopCell{}}(VarTRANGE:SortValTypes{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortModuleInstancesCell{},rule272LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortFuncDefCellMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarINSTRS:SortInstrs{},VarLOCAL:SortMap{},VarMODIDX:SortInt{},VarMODIDX'Apos':SortInt{},VarTDOMAIN:SortValTypes{},VarTLOCALS:SortValTypes{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'25:SortMainStoreCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{}))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule273LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule274LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDS:SortDataString{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule275LHS{}(VarDS:SortDataString{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarENAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortMemorySpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule276LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortMemorySpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarMIN:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule277LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarMAX:SortInt{},\exists{SortGeneratedTopCell{}}(VarMIN:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule278LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEXPO:SortInlineExport{},\exists{SortGeneratedTopCell{}}(VarNEXTID:SortInt{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortMemorySpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortMemorySpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},rule279LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortMemorySpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortMemorySpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEFNS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule280LHS{}(VarDEFNS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarFADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortTabAddrsCell{},rule281LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarDotVar6:SortMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{},Var'Unds'15:SortValstackCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{}))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarES:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortTableElemType{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule282LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarES:SortElemSegment{},VarID:SortIdentifier{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'16:SortTableElemType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarENAME:SortWasmString{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortTableSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule283LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarENAME:SortWasmString{},VarID:SortIdentifier{},VarSPEC:SortTableSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarMAX:SortInt{},\exists{SortGeneratedTopCell{}}(VarMIN:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule284LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarMIN:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule285LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEXPO:SortInlineExport{},\exists{SortGeneratedTopCell{}}(VarNEXTID:SortInt{},\exists{SortGeneratedTopCell{}}(VarSPEC:SortTableSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortTableSpec{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},rule286LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEXPO:SortInlineExport{},VarNEXTID:SortInt{},VarSPEC:SortTableSpec{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortTableSpec{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule287LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule288LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarATYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarC1:SortNumber{},\exists{SortGeneratedTopCell{}}(VarCVTOP:SortCvtf32Op{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortCvtOp{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule289LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvtf32Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarATYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarC1:SortNumber{},\exists{SortGeneratedTopCell{}}(VarCVTOP:SortCvtf64Op{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortCvtOp{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule290LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvtf64Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarATYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarC1:SortNumber{},\exists{SortGeneratedTopCell{}}(VarCVTOP:SortCvti32Op{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortCvtOp{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule291LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvti32Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarATYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarC1:SortNumber{},\exists{SortGeneratedTopCell{}}(VarCVTOP:SortCvti64Op{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortCvtOp{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule292LHS{}(VarATYPE:SortAValType{},VarC1:SortNumber{},VarCVTOP:SortCvti64Op{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'13:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarBOP:SortFBinOp{},\exists{SortGeneratedTopCell{}}(VarC1:SortFloat{},\exists{SortGeneratedTopCell{}}(VarC2:SortFloat{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFValType{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule293LHS{}(VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC1:SortFloat{},\exists{SortGeneratedTopCell{}}(VarC2:SortFloat{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFValType{},\exists{SortGeneratedTopCell{}}(VarROP:SortFRelOp{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule294LHS{}(VarC1:SortFloat{},VarC2:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC1:SortFloat{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFValType{},\exists{SortGeneratedTopCell{}}(VarUOP:SortFUnOp{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule295LHS{}(VarC1:SortFloat{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarBOP:SortIBinOp{},\exists{SortGeneratedTopCell{}}(VarC1:SortInt{},\exists{SortGeneratedTopCell{}}(VarC2:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule296LHS{}(VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC1:SortInt{},\exists{SortGeneratedTopCell{}}(VarC2:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarROP:SortIRelOp{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule297LHS{}(VarC1:SortInt{},VarC2:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC1:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarUOP:SortIUnOp{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule298LHS{}(VarC1:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarLOP:SortLoadOp{},\exists{SortGeneratedTopCell{}}(VarMEMARG:SortMemArg{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule299LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarMEMARG:SortMemArg{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarLOP:SortLoadOp{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule300LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarMEMARG:SortMemArg{},\exists{SortGeneratedTopCell{}}(VarSOP:SortStoreOp{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule301LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarMEMARG:SortMemArg{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarSOP:SortStoreOp{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule302LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortInt{},VarITYPE:SortIValType{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC1:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarTOP:SortTestOp{},\exists{SortGeneratedTopCell{}}(VarTYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule303LHS{}(VarC1:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTOP:SortTestOp{},VarTYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule304LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule305LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule306LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule307LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule308LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule309LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule310LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule311LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule312LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule313LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule314LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortNumber{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule315LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFTYPE:SortFValType{},VarVAL:SortNumber{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule316LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(VarSS:SortStmts{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule317LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSS:SortStmts{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule318LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDRS:SortMap{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortFuncDefCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarINSTRS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarLDECLS:SortLocalDecls{},\exists{SortGeneratedTopCell{}}(VarNEXTADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarNEXTIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTUSE:SortTypeUse{},\exists{SortGeneratedTopCell{}}(VarTYPEIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortExportsCell{},rule319LHS{}(VarADDRS:SortMap{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortFuncDefCellMap{},VarDotVar6:SortModuleInstCellMap{},VarIDS:SortMap{},VarINSTRS:SortInstrs{},VarLDECLS:SortLocalDecls{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortValstackCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortModuleIdsCell{},Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortGlobalInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarGLOBS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarMUT:SortMut{},\exists{SortGeneratedTopCell{}}(VarNEXTADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarNEXTIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarTYP:SortAValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortNumber{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortExportsCell{},rule320LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarGLOBS:SortMap{},VarIDS:SortMap{},VarMUT:SortMut{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarSTACK:SortValStack{},VarTYP:SortAValType{},VarVAL:SortNumber{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortVal{},Var'Unds'34:SortCurFrameCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{})))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarMAX:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(VarMIN:SortInt{},\exists{SortGeneratedTopCell{}}(VarNEXTADDR:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortExportsCell{},rule321LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortTabInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarMAX:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(VarMIN:SortInt{},\exists{SortGeneratedTopCell{}}(VarNEXTADDR:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortExportsCell{},rule322LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortTypeIdsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncIdsCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortMemAddrsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLabelDepthCell{},Var'Unds'8:SortLabelIdsCell{},Var'Unds'9:SortExportsCell{}))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarNEXTIDX:SortInt{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortMemIdsCell{},rule323LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarID:SortOptionalId{},VarIDS:SortMap{},VarNEXTIDX:SortInt{},VarTDECLS:SortTypeDecls{},VarTYPES:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemAddrsCell{},Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{},Var'Unds'14:SortValstackCell{},Var'Unds'15:SortModuleRegistryCell{},Var'Unds'16:SortModuleIdsCell{},Var'Unds'17:SortNextModuleIdxCell{},Var'Unds'18:SortMainStoreCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortNextFreshIdCell{},Var'Unds'26:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'4:SortFuncIdsCell{},Var'Unds'5:SortFuncAddrsCell{},Var'Unds'6:SortNextFuncIdxCell{},Var'Unds'7:SortTabIdsCell{},Var'Unds'8:SortTabAddrsCell{},Var'Unds'9:SortMemIdsCell{})))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarOID'Apos':SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule324LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule325LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVECTYP:SortVecType{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule326LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDEPTH'Apos':SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule327LHS{}(VarDEPTH:SortInt{},VarDEPTH'Apos':SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarID:SortIdentifier{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortCurFrameCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarL:SortLabel{},\exists{SortGeneratedTopCell{}}(VarN:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDeterministicMemoryGrowthCell{},rule328LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarL:SortLabel{},VarN:SortInt{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortValTypes{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALSTACK'Apos':SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule329LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarTYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule330LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarTYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule331LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIDX:SortIndex{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarES:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarTYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule332LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarES:SortElemSegment{},VarTYPE:SortAValType{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarFADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortTabAddrsCell{},rule333LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarDotVar6:SortMap{},VarFADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{},Var'Unds'15:SortValstackCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'30:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{}))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar10:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortTabInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortFuncDefCellMap{},\exists{SortGeneratedTopCell{}}(VarFADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFuncType{},\exists{SortGeneratedTopCell{}}(VarIDX:SortNumber{},\exists{SortGeneratedTopCell{}}(VarTUSE:SortTypeUse{},\exists{SortGeneratedTopCell{}}(VarTYPEIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortTmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortTsizeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFCodeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortFLocalCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortFModInstCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'40:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'43:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'45:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortGlobalsCell{},rule334LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortModuleInstCellMap{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortMap{},VarDotVar7:SortFuncDefCellMap{},VarFADDR:SortInt{},VarFTYPE:SortFuncType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}))))))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar10:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortTabInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortFuncDefCellMap{},\exists{SortGeneratedTopCell{}}(VarFADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarFTYPE:SortFuncType{},\exists{SortGeneratedTopCell{}}(VarIDX:SortNumber{},\exists{SortGeneratedTopCell{}}(VarTUSE:SortTypeUse{},\exists{SortGeneratedTopCell{}}(VarTYPEIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortMap{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortTmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortTsizeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFCodeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortFLocalCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortFModInstCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'40:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'43:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'45:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortGlobalsCell{},rule335LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar10:SortModuleInstCellMap{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar6:SortMap{},VarDotVar7:SortFuncDefCellMap{},VarFADDR:SortInt{},VarFTYPE:SortFuncType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{}))))))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortTabInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarIDX:SortNumber{},\exists{SortGeneratedTopCell{}}(VarTDATA:SortMap{},\exists{SortGeneratedTopCell{}}(VarTUSE:SortTypeUse{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortTmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortTsizeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'40:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'43:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'45:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLocalsCell{},rule336LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortTabInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarIDX:SortNumber{},VarTDATA:SortMap{},VarTUSE:SortTypeUse{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{})))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDATA:SortByteMap{},\exists{SortGeneratedTopCell{}}(VarDSBYTES:SortBytes{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarMEMIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarOFFSET:SortInt{},\exists{SortGeneratedTopCell{}}(VarSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortMmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortMsizeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'39:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'42:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLocalsCell{},rule337LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDSBYTES:SortBytes{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarIDS:SortMap{},VarMEMIDX:SortIndex{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortTabsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{})))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule338LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALSTACK:SortValStack{},Var'Unds'0:SortVal{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarELEMSEGMENT:SortElemSegment{},\exists{SortGeneratedTopCell{}}(VarFADDRS:SortMap{},\exists{SortGeneratedTopCell{}}(VarFIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarOFFSET:SortInt{},\exists{SortGeneratedTopCell{}}(VarSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarTABIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarTIDS:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortMemAddrsCell{},rule339LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortModuleInstCellMap{},VarELEMSEGMENT:SortElemSegment{},VarFADDRS:SortMap{},VarFIDS:SortMap{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},VarTABIDX:SortIndex{},VarTIDS:SortMap{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'18:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortTypeIdsCell{},Var'Unds'5:SortTypesCell{},Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{})))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarLABELDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarLABELIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarLOCAL'Apos':SortMap{},\exists{SortGeneratedTopCell{}}(VarMODIDX'Apos':SortInt{},\exists{SortGeneratedTopCell{}}(VarTRANGE:SortValTypes{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALSTACK'Apos':SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDeterministicMemoryGrowthCell{},rule340LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarLABELDEPTH:SortInt{},VarLABELIDS:SortMap{},VarLOCAL'Apos':SortMap{},VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortMap{},Var'Unds'1:SortOptionalInt{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortInt{},Var'Unds'3:SortMap{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortGlobalInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortGMutCell{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar9:SortMap{},\exists{SortGeneratedTopCell{}}(VarGADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'38:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelIdsCell{},rule341LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar5:SortGMutCell{},VarDotVar7:SortModuleInstCellMap{},VarDotVar9:SortMap{},VarGADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortMemAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortGlobalInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortGMutCell{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar9:SortMap{},\exists{SortGeneratedTopCell{}}(VarGADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarTFIDX:SortIndex{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMemAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'35:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'38:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMemsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelDepthCell{},rule342LHS{}(VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortGlobalInstCellMap{},VarDotVar5:SortGMutCell{},VarDotVar7:SortModuleInstCellMap{},VarDotVar9:SortMap{},VarGADDR:SortInt{},VarIDS:SortMap{},VarTFIDX:SortIndex{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortVal{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortLabelIdsCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{},Var'Unds'3:SortTabsCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLabelDepthCell{}))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDET:SortBool{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortMdataCell{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarMAX:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(VarN:SortInt{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'33:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'38:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'41:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelIdsCell{},rule343LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDET:SortBool{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMdataCell{},VarDotVar7:SortModuleInstCellMap{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortDeterministicMemoryGrowthCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{})))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortMdataCell{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarMAX:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(VarN:SortInt{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelIdsCell{},rule344LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMdataCell{},VarDotVar7:SortModuleInstCellMap{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{})))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarIS'Apos':SortInstrs{},\exists{SortGeneratedTopCell{}}(VarOID'Apos':SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarOID'AposApos':SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule345LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarOID'Apos':SortOptionalId{},VarOID'AposApos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarOID'AposApos':SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortOptionalId{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule346LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIS:SortInstrs{},VarOID'AposApos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortOptionalId{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule347LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarIS'Apos':SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule348LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarIS'Apos':SortInstrs{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule349LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{},VarTDECLS:SortTypeDecls{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarINDEX:SortInt{},\exists{SortGeneratedTopCell{}}(VarLOCALS:SortMap{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDeterministicMemoryGrowthCell{},rule350LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarINDEX:SortInt{},VarLOCALS:SortMap{},VarVALUE:SortVal{},Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarVALUES:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule351LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarVALUES:SortValStack{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarTYPES:SortValTypes{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALSTACK'Apos':SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortInstrs{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDeterministicMemoryGrowthCell{},rule352LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortLocalsCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortCurModIdxCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDATA:SortByteMap{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortMmaxCell{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarITYPE:SortIValType{},\exists{SortGeneratedTopCell{}}(VarSIGN:SortSignedness{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(VarWIDTH:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'34:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'39:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelIdsCell{},rule353LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMmaxCell{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarITYPE:SortIValType{},VarSIGN:SortSignedness{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'37:SortModuleInstancesCell{},Var'Unds'39:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{})))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(VarWIDTH:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortIValType{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortSignedness{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortMmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortMdataCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'31:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'32:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'38:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'41:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'43:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortGlobalsCell{},rule354LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortSignedness{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{},Var'Unds'14:SortExportsCell{},Var'Unds'15:SortTypeIdsCell{},Var'Unds'16:SortTypesCell{},Var'Unds'17:SortNextTypeIdxCell{},Var'Unds'18:SortFuncIdsCell{},Var'Unds'19:SortFuncAddrsCell{},Var'Unds'2:SortMmaxCell{},Var'Unds'20:SortNextFuncIdxCell{},Var'Unds'21:SortTabIdsCell{},Var'Unds'22:SortTabAddrsCell{},Var'Unds'23:SortMemIdsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortValstackCell{},Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortMdataCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortFuncsCell{},Var'Unds'41:SortModuleInstancesCell{},Var'Unds'43:SortMainStoreCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{})))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule355LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'17:SortCurFrameCell{},Var'Unds'2:SortLabelIdsCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDeterministicMemoryGrowthCell{},rule356LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(VarVALUE:SortVal{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDeterministicMemoryGrowthCell{},rule357LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMap{},VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'10:SortNextFreshIdCell{},Var'Unds'17:SortValstackCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{}))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDEPTH:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarID:SortIdentifier{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarIS:SortInstrs{},\exists{SortGeneratedTopCell{}}(VarOID'Apos':SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarTDECLS:SortTypeDecls{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurModIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextFreshIdCell{},rule358LHS{}(VarDEPTH:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarID:SortIdentifier{},VarIDS:SortMap{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarTDECLS:SortTypeDecls{},Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'16:SortLabelDepthCell{},Var'Unds'2:SortValstackCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{})))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarN:SortInt{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule359LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarN:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortMmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortMdataCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'36:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'39:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'41:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLocalsCell{},rule360LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarSIZE:SortInt{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMdataCell{},Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{},Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortValstackCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'30:SortNextFreshIdCell{},Var'Unds'36:SortCurFrameCell{},Var'Unds'39:SortModuleInstancesCell{},Var'Unds'4:SortTabsCell{},Var'Unds'41:SortMainStoreCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortLocalsCell{})))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule361LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarFR:SortFrame{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule362LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarFR:SortFrame{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'14:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarTYPE:SortAValType{},\exists{SortGeneratedTopCell{}}(VarV1:SortNumber{},\exists{SortGeneratedTopCell{}}(VarV2:SortNumber{},\exists{SortGeneratedTopCell{}}(VarVALSTACK:SortValStack{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextFreshIdCell{},rule363LHS{}(VarC:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarTYPE:SortAValType{},VarV1:SortNumber{},VarV2:SortNumber{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarAS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarES:SortDefns{},\exists{SortGeneratedTopCell{}}(VarFGS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarIDS:SortMap{},\exists{SortGeneratedTopCell{}}(VarINIS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarIS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarNEXT:SortInt{},\exists{SortGeneratedTopCell{}}(VarOID:SortOptionalId{},\exists{SortGeneratedTopCell{}}(VarS:SortDefns{},\exists{SortGeneratedTopCell{}}(VarTS:SortDefns{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOptionalInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule364LHS{}(VarAS:SortDefns{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortModuleInstCellMap{},VarES:SortDefns{},VarFGS:SortDefns{},VarIDS:SortMap{},VarINIS:SortDefns{},VarIS:SortDefns{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarS:SortDefns{},VarTS:SortDefns{},Var'Unds'0:SortOptionalInt{},Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{},Var'Unds'4:SortValstackCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(VarWIDTH:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortNumber{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortMmaxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortLabelIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortMdataCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'29:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'30:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'31:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'37:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'40:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'42:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortNextGlobAddrCell{},rule365LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortNumber{},Var'Unds'1:SortMmaxCell{},Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{},Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'2:SortMdataCell{},Var'Unds'20:SortTabIdsCell{},Var'Unds'21:SortTabAddrsCell{},Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{},Var'Unds'26:SortValstackCell{},Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},Var'Unds'29:SortNextModuleIdxCell{},Var'Unds'3:SortFuncsCell{},Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{},Var'Unds'37:SortCurFrameCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'40:SortModuleInstancesCell{},Var'Unds'42:SortMainStoreCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}))))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarADDR:SortInt{},\exists{SortGeneratedTopCell{}}(VarCUR:SortInt{},\exists{SortGeneratedTopCell{}}(VarDATA:SortByteMap{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMemInstCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar5:SortMmaxCell{},\exists{SortGeneratedTopCell{}}(VarDotVar7:SortModuleInstCellMap{},\exists{SortGeneratedTopCell{}}(VarEA:SortInt{},\exists{SortGeneratedTopCell{}}(VarSIZE:SortInt{},\exists{SortGeneratedTopCell{}}(VarVAL:SortInt{},\exists{SortGeneratedTopCell{}}(VarWIDTH:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFuncsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortNextFuncAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortExportsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortTypeIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortTypesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortNextTypeIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFuncIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFuncAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortNextFuncIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortTabIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'18:SortTabAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'19:SortMemIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTabsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'20:SortGlobIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'21:SortGlobalAddrsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'22:SortNextGlobIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'23:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'24:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'25:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'26:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'27:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'28:SortNextFreshIdCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortNextTabAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'35:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'38:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortNextMemAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortGlobalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortNextGlobAddrCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortLocalsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortLabelDepthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortLabelIdsCell{},rule366LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortByteMap{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar4:SortMemInstCellMap{},VarDotVar5:SortMmaxCell{},VarDotVar7:SortModuleInstCellMap{},VarEA:SortInt{},VarSIZE:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{})))))))))))))))))))))))))))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule367LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortValstackCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortCurFrameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortModuleRegistryCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortModuleIdsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortModuleInstancesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortNextModuleIdxCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortMainStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortDeterministicMemoryGrowthCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortNextFreshIdCell{},rule368LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{})))))))))))), \bottom{SortGeneratedTopCell{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) []

endmodule [symbolic{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,1,381,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ana/kore/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)")]
