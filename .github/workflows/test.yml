name: "Test"
on:
  pull_request:
  push:
jobs:
  test-nix:
    name: 'Nix'
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2.3.4
      with:
        submodules: recursive

    - name: Install Nix
      uses: cachix/install-nix-action@v12
      with:
        extra_nix_config: |
          substituters = http://cache.nixos.org https://hydra.iohk.io
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

    - name: Install Cachix
      uses: cachix/cachix-action@v8
      with:
        name: kore
        signingKey: '${{ secrets.KORE_CACHIX_SIGNING_KEY }}'

    - name: Check materialization
      run: nix-build --arg checkMaterialization true -A project.stack-nix

    - name: Build
      run: nix-build -A kore

    - name: Run unit tests
      run: nix-build -A project.kore.checks

    - name: Check shell
      run: nix-shell --run "echo OK"

  test-cabal:
    name: 'Cabal'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        submodules: recursive

    - uses: actions/setup-haskell@v1.1.4
      id: setup-haskell-cabal
      with:
        ghc-version: "8.10.1"
        cabal-version: "3.2"

    - name: Cache Cabal store
      uses: actions/cache@v2
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-ghc-8.10.1-${{ hashFiles('cabal.project.freeze') }}

    - name: Build project
      run: cabal v2-build --enable-tests --enable-benchmarks all

    - name: Configure with profiling
      run: cabal v2-configure --enable-profiling -f-threaded
