module ARRAY$SYNTAX [org.kframework.attributes.Location(Location(78,1,81,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ARRAY-SYMBOLIC$SYNTAX
endmodule


module ARRAY-CONCRETE [concrete() org.kframework.attributes.Location(Location(41,1,48,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports LIST
  imports ARRAY-SYNTAX
endmodule


module ARRAY-CONCRETE$SYNTAX [concrete() org.kframework.attributes.Location(Location(41,1,48,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports LIST$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax Array ::= "makeEmptyArray" "(" Int ")"
  syntax Array ::= "arrayCtor" "(" String "," Int ")"
endmodule


module ARRAY-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(50,1,76,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) symbolic()]
  imports MAP$SYNTAX
  imports INT$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax Array ::= "array" "(" Map "," Int "," K ")"
endmodule


module ARRAY-SYNTAX [org.kframework.attributes.Location(Location(24,1,39,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST
  imports ARRAY-SYNTAX$SYNTAX
  ModuleComment( Sets a range of indices (given by an index into the array and the number
   of indices to set) to the same value. ,[org.kframework.attributes.Location(Location(34,3,35,43)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module ARRAY-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(24,1,39,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  syntax KItem ::= Array
  syntax K ::= Array "[" Int "]"
  syntax K
  syntax Bool ::= Int "in_keys" "(" Array ")"
  syntax Bool ::= "isArray" "(" K ")"
  syntax Array [element(_[_<-_]) hook(ARRAY.Array) org.kframework.attributes.Location(Location(27,3,27,69)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" K "]"
  syntax Array ::= Array "[" Int "<-" "undef" "]"
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")"
  syntax Array ::= "makeArray" "(" Int "," K ")"
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," K ")"
endmodule


module AUTO-CASTS [org.kframework.attributes.Location(Location(155,1,163,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports AUTO-CASTS$SYNTAX
  ModuleComment( this is part of the mechanism that allows concrete user syntax in K,[org.kframework.attributes.Location(Location(162,3,162,73)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(156,3,156,58)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( generates, for all sorts, productions of the form:,[org.kframework.attributes.Location(Location(157,3,157,56)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort ":Sort",[org.kframework.attributes.Location(Location(159,3,159,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort "::Sort",[org.kframework.attributes.Location(Location(158,3,158,29)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= K    ":>Sort",[org.kframework.attributes.Location(Location(161,3,161,29)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( KBott ::= Sort "<:Sort",[org.kframework.attributes.Location(Location(160,3,160,29)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module AUTO-CASTS$SYNTAX [org.kframework.attributes.Location(Location(155,1,163,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module AUTO-FOLLOW [org.kframework.attributes.Location(Location(165,1,176,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports AUTO-FOLLOW$SYNTAX
  ModuleComment( syntax K ::= K K,[org.kframework.attributes.Location(Location(172,3,172,22)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "b",[org.kframework.attributes.Location(Location(170,3,170,22)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "ab",[org.kframework.attributes.Location(Location(171,3,171,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "a",[org.kframework.attributes.Location(Location(169,3,169,22)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( of another terminal. This is useful to prevent ambiguities such as:,[org.kframework.attributes.Location(Location(168,3,168,73)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(166,3,166,58)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( generates a follow restriction for every terminal which is a prefix,[org.kframework.attributes.Location(Location(167,3,167,73)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( because it would turn the terminal into the terminal "ab".,[org.kframework.attributes.Location(Location(175,3,175,64)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( In the above example, the terminal "a" is not allowed to be followed by a "b",[org.kframework.attributes.Location(Location(174,3,174,83)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( #parse("ab", "K"),[org.kframework.attributes.Location(Location(173,3,173,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module AUTO-FOLLOW$SYNTAX [org.kframework.attributes.Location(Location(165,1,176,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,14,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,14,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KLabel [org.kframework.attributes.Location(Location(10,3,10,15)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KItem [hook(K.KItem) org.kframework.attributes.Location(Location(11,3,11,30)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KConfigVar [org.kframework.attributes.Location(Location(13,3,13,19)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax K ::= KItem
  syntax K
  syntax Bool ::= "isKLabel" "(" K ")"
  syntax Bool ::= "isKItem" "(" K ")"
  syntax Bool ::= "isKConfigVar" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module BOOL [org.kframework.attributes.Location(Location(268,1,317,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K
  rule `<k>`(#KSequence(`notBool_`(#token("true","Bool")),DotVar0)=>#KSequence(#token("false","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(282) org.kframework.attributes.Location(Location(282,8,282,29)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`notBool_`(#token("false","Bool")),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(283) org.kframework.attributes.Location(Location(283,8,283,29)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_xorBool__BOOL`(B1,B2),DotVar0)=>#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(298) org.kframework.attributes.Location(Location(298,8,298,57)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_xorBool__BOOL`(B,B),DotVar0)=>#KSequence(#token("false","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(297) org.kframework.attributes.Location(Location(297,8,297,38)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_xorBool__BOOL`(B,#token("false","Bool")),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(296) org.kframework.attributes.Location(Location(296,8,296,38)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_xorBool__BOOL`(#token("false","Bool"),B),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(295) org.kframework.attributes.Location(Location(295,8,295,38)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orElseBool__BOOL`(_3,#token("true","Bool")),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(306) org.kframework.attributes.Location(Location(306,8,306,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orElseBool__BOOL`(K,#token("false","Bool")),DotVar0)=>#KSequence(K,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(308) org.kframework.attributes.Location(Location(308,8,308,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orElseBool__BOOL`(#token("true","Bool"),_9),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(305) org.kframework.attributes.Location(Location(305,8,305,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orElseBool__BOOL`(#token("false","Bool"),K),DotVar0)=>#KSequence(K,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(307) org.kframework.attributes.Location(Location(307,8,307,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orBool__BOOL`(_0,#token("true","Bool")),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(301) org.kframework.attributes.Location(Location(301,8,301,34)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orBool__BOOL`(B,#token("false","Bool")),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(303) org.kframework.attributes.Location(Location(303,8,303,32)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orBool__BOOL`(#token("true","Bool"),_5),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(300) org.kframework.attributes.Location(Location(300,8,300,34)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_orBool__BOOL`(#token("false","Bool"),B),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(302) org.kframework.attributes.Location(Location(302,8,302,32)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_impliesBool__BOOL`(_7,#token("true","Bool")),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(312) org.kframework.attributes.Location(Location(312,8,312,39)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_impliesBool__BOOL`(B,#token("false","Bool")),DotVar0)=>#KSequence(`notBool_`(B),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(313) org.kframework.attributes.Location(Location(313,8,313,45)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_impliesBool__BOOL`(#token("true","Bool"),B),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(310) org.kframework.attributes.Location(Location(310,8,310,36)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_impliesBool__BOOL`(#token("false","Bool"),_1),DotVar0)=>#KSequence(#token("true","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(311) org.kframework.attributes.Location(Location(311,8,311,40)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andThenBool__BOOL`(_2,#token("false","Bool")),DotVar0)=>#KSequence(#token("false","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(293) org.kframework.attributes.Location(Location(293,8,293,36)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andThenBool__BOOL`(K,#token("true","Bool")),DotVar0)=>#KSequence(K,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(291) org.kframework.attributes.Location(Location(291,8,291,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andThenBool__BOOL`(#token("true","Bool"),K),DotVar0)=>#KSequence(K,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(290) org.kframework.attributes.Location(Location(290,8,290,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andThenBool__BOOL`(#token("false","Bool"),_8),DotVar0)=>#KSequence(#token("false","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(292) org.kframework.attributes.Location(Location(292,8,292,36)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andBool_`(_4,#token("false","Bool")),DotVar0)=>#KSequence(#token("false","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(288) org.kframework.attributes.Location(Location(288,8,288,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andBool_`(B,#token("true","Bool")),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(286) org.kframework.attributes.Location(Location(286,8,286,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andBool_`(#token("true","Bool"),B),DotVar0)=>#KSequence(B,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(285) org.kframework.attributes.Location(Location(285,8,285,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_andBool_`(#token("false","Bool"),_6),DotVar0)=>#KSequence(#token("false","Bool"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(287) org.kframework.attributes.Location(Location(287,8,287,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_=/=Bool__BOOL`(B1,B2),DotVar0)=>#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(315) org.kframework.attributes.Location(Location(315,8,315,57)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KRewrite(#KSequence(#Or(#And(`_orElseBool__BOOL`(#Or(#And(_3,isRule(#token("1189278331","K"))),#And(#token("false","Bool"),isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("-57979812","K"))),#And(K,isRule(#token("1932788753","K")))),#Or(#And(_9,isRule(#token("-57979812","K"))),#And(#token("false","Bool"),isRule(#token("1932788753","K"))),#And(K,isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("1189278331","K"))))),#Or(isRule(#token("1189278331","K")),isRule(#token("-57979812","K")),isRule(#token("1932788753","K")),isRule(#token("-960342392","K")))),#And(`notBool_`(#Or(#And(#token("false","Bool"),isRule(#token("-434867953","K"))),#And(#token("true","Bool"),isRule(#token("-76345387","K"))))),#Or(isRule(#token("-434867953","K")),isRule(#token("-76345387","K")))),#And(`_orBool__BOOL`(#Or(#And(_0,isRule(#token("726783824","K"))),#And(#token("false","Bool"),isRule(#token("89755605","K"))),#And(#token("true","Bool"),isRule(#token("1955583541","K"))),#And(B,isRule(#token("745649384","K")))),#Or(#And(#token("false","Bool"),isRule(#token("745649384","K"))),#And(_5,isRule(#token("1955583541","K"))),#And(#token("true","Bool"),isRule(#token("726783824","K"))),#And(B,isRule(#token("89755605","K"))))),#Or(isRule(#token("726783824","K")),isRule(#token("1955583541","K")),isRule(#token("89755605","K")),isRule(#token("745649384","K")))),#And(`_impliesBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1241950004","K"))),#And(_7,isRule(#token("-1525320841","K"))),#And(B,isRule(#token("2001971978","K"))),#And(#token("true","Bool"),isRule(#token("1037153131","K")))),#Or(#And(#token("false","Bool"),isRule(#token("2001971978","K"))),#And(_1,isRule(#token("-1241950004","K"))),#And(B,isRule(#token("1037153131","K"))),#And(#token("true","Bool"),isRule(#token("-1525320841","K"))))),#Or(isRule(#token("-1525320841","K")),isRule(#token("2001971978","K")),isRule(#token("1037153131","K")),isRule(#token("-1241950004","K")))),#And(`_andThenBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1281861781","K"))),#And(_2,isRule(#token("-1857958196","K"))),#And(K,isRule(#token("-347923073","K"))),#And(#token("true","Bool"),isRule(#token("1152435715","K")))),#Or(#And(#token("false","Bool"),isRule(#token("-1857958196","K"))),#And(_8,isRule(#token("-1281861781","K"))),#And(K,isRule(#token("1152435715","K"))),#And(#token("true","Bool"),isRule(#token("-347923073","K"))))),#Or(isRule(#token("-347923073","K")),isRule(#token("1152435715","K")),isRule(#token("-1857958196","K")),isRule(#token("-1281861781","K")))),#And(`_andBool_`(#Or(#And(#token("false","Bool"),isRule(#token("1849541356","K"))),#And(_4,isRule(#token("1922763765","K"))),#And(B,isRule(#token("982862195","K"))),#And(#token("true","Bool"),isRule(#token("-2132293033","K")))),#Or(#And(_6,isRule(#token("1849541356","K"))),#And(#token("false","Bool"),isRule(#token("1922763765","K"))),#And(#token("true","Bool"),isRule(#token("982862195","K"))),#And(B,isRule(#token("-2132293033","K"))))),#Or(isRule(#token("982862195","K")),isRule(#token("1922763765","K")),isRule(#token("-2132293033","K")),isRule(#token("1849541356","K")))),#And(`_xorBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-672357244","K"))),#And(B1,isRule(#token("-1954210549","K"))),#And(B,#Or(isRule(#token("348377483","K")),isRule(#token("1401740812","K"))))),#Or(#And(B2,isRule(#token("-1954210549","K"))),#And(#token("false","Bool"),isRule(#token("1401740812","K"))),#And(B,#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")))))),#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")),isRule(#token("-1954210549","K")),isRule(#token("1401740812","K")))),#And(`_=/=Bool__BOOL`(B1,B2),#Or(isRule(#token("-463469799","K"))))),DotVar0),#Or(#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1955583541","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-347923073","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1857958196","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("726783824","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1241950004","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1525320841","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("348377483","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-434867953","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-672357244","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-2132293033","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1152435715","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1922763765","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1849541356","K"))),#And(#KSequence(B,DotVar0),isRule(#token("745649384","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1932788753","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1401740812","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-1954210549","K"))),#And(#KSequence(B,DotVar0),isRule(#token("982862195","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-463469799","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1189278331","K"))),#And(#KSequence(`notBool_`(B),DotVar0),isRule(#token("2001971978","K"))),#And(#KSequence(B,DotVar0),isRule(#token("89755605","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1281861781","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-57979812","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-960342392","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1037153131","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-76345387","K")))))) requires #token("true","Bool") ensures #token("true","Bool") [automaton()]
endmodule


module BOOL$SYNTAX [org.kframework.attributes.Location(Location(268,1,317,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority notBool_ > _andThenBool__BOOL _impliesBool__BOOL _andBool_ _orElseBool__BOOL _orBool__BOOL _xorBool__BOOL > _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _xorBool__BOOL
  syntax associativity left _orElseBool__BOOL
  syntax associativity left _orBool__BOOL
  syntax associativity left _impliesBool__BOOL
  syntax associativity left _andThenBool__BOOL
  syntax associativity left _andBool_
  syntax associativity left _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _==Bool__BOOL
  syntax associativity left _=/=Bool__BOOL
  syntax Bool ::= K "orElseBool" K
  syntax Bool ::= K "andThenBool" K
  syntax Bool ::= Bool "xorBool" Bool
  syntax Bool ::= Bool "orBool" Bool
  syntax Bool ::= Bool "impliesBool" Bool
  syntax Bool ::= Bool "andBool" Bool
  syntax Bool ::= Bool "==Bool" Bool
  syntax Bool ::= Bool "=/=Bool" Bool
  syntax Bool ::= "notBool" Bool
endmodule


module BOOL-SYNTAX [org.kframework.attributes.Location(Location(262,1,266,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(262,1,266,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool [hook(BOOL.Bool) org.kframework.attributes.Location(Location(263,3,263,31)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Bool ::= "true"
  syntax Bool ::= "isBool" "(" K ")"
  syntax Bool ::= "false"
endmodule


module BUILTIN-ID-TOKENS [org.kframework.attributes.Location(Location(21,1,24,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(21,1,24,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "is#UpperId" "(" K ")"
  syntax Bool ::= "is#LowerId" "(" K ")"
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*"
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*"
endmodule


module COLLECTIONS [org.kframework.attributes.Location(Location(252,1,260,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET
  imports MAP
  imports LIST
  imports COLLECTIONS$SYNTAX
endmodule


module COLLECTIONS$SYNTAX [org.kframework.attributes.Location(Location(252,1,260,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  syntax Set ::= "List2Set" "(" List ")"
  syntax List ::= "Set2List" "(" Set ")"
endmodule


module CONFIG-CELLS [org.kframework.attributes.Location(Location(112,1,126,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports KCELLS
  imports CONFIG-CELLS$SYNTAX
endmodule


module CONFIG-CELLS$SYNTAX [org.kframework.attributes.Location(Location(112,1,126,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax K
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">"
  syntax Cell ::= "<" #CellName "/>"
  syntax Bool ::= "is#CellProperty" "(" K ")"
  syntax Bool ::= "is#CellProperties" "(" K ")"
  syntax Bool ::= "is#CellName" "(" K ")"
  syntax #CellProperty ::= #CellName "=" KString
  syntax #CellProperties ::= #CellProperty #CellProperties
  syntax #CellProperties ::= ""
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*"
  syntax #CellName ::= #UpperId
  syntax #CellName ::= #LowerId
endmodule


module CONFIGURATION-PRIMITIVES [org.kframework.attributes.Location(Location(1120,1,1122,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports CONFIGURATION-PRIMITIVES$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module CONFIGURATION-PRIMITIVES$SYNTAX [org.kframework.attributes.Location(Location(1120,1,1122,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax K ::= "#RESTORE_CONFIGURATION" "(" K ")"
  syntax K
  syntax Bool ::= "isK" "(" K ")"
endmodule


module DOMAINS$SYNTAX [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  imports K-REFLECTION$SYNTAX
  imports K-IO$SYNTAX
  imports INT$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module DOMAINS-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  imports STRING-SYNTAX$SYNTAX
  imports ID$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
endmodule


module FLOAT$SYNTAX [org.kframework.attributes.Location(Location(397,1,462,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority --Float__FLOAT > _^Float__FLOAT > _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT > _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _^Float__FLOAT
  syntax associativity left _>Float__FLOAT
  syntax associativity left _>=Float__FLOAT
  syntax associativity left _==Float_
  syntax associativity left _=/=Float__FLOAT
  syntax associativity left _<Float__FLOAT
  syntax associativity left _<=Float__FLOAT
  syntax associativity left _/Float__FLOAT
  syntax associativity left _-Float__FLOAT
  syntax associativity left _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _+Float__FLOAT
  syntax associativity left _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT
  syntax associativity left _*Float__FLOAT
  syntax associativity left _%Float__FLOAT
  syntax MInt ::= "significandFloat" "(" Float ")"
  syntax KItem ::= MInt
  syntax K
  syntax Int ::= "precisionFloat" "(" Float ")"
  syntax Int ::= "exponentFloat" "(" Float ")"
  syntax Int ::= "exponentBitsFloat" "(" Float ")"
  syntax Int ::= "Float2Int" "(" Float ")"
  syntax Float ::= Float "^Float" Float
  syntax Float ::= Float "/Float" Float
  syntax Float ::= Float "-Float" Float
  syntax Float ::= Float "+Float" Float
  syntax Float ::= Float "*Float" Float
  syntax Float ::= Float "%Float" Float
  syntax Float ::= "tanFloat" "(" Float ")"
  syntax Float ::= "sqrtFloat" "(" Float ")"
  syntax Float ::= "sinFloat" "(" Float ")"
  syntax Float ::= "roundFloat" "(" Float "," Int "," Int ")"
  syntax Float ::= "rootFloat" "(" Float "," Int ")"
  syntax Float ::= "plusInfinity" "(" Int "," Int ")"
  syntax Float ::= "minusInfinity" "(" Int "," Int ")"
  syntax Float ::= "minValueFloat" "(" Int "," Int ")"
  syntax Float ::= "minFloat" "(" Float "," Float ")"
  syntax Float ::= "maxValueFloat" "(" Int "," Int ")"
  syntax Float ::= "maxFloat" "(" Float "," Float ")"
  syntax Float ::= "logFloat" "(" Float ")"
  syntax Float ::= "fpNaN" "(" Int "," Int ")"
  syntax Float ::= "floorFloat" "(" Float ")"
  syntax Float ::= "expFloat" "(" Float ")"
  syntax Float ::= "cosFloat" "(" Float ")"
  syntax Float ::= "ceilFloat" "(" Float ")"
  syntax Float ::= "atanFloat" "(" Float ")"
  syntax Float ::= "atan2Float" "(" Float "," Float ")"
  syntax Float ::= "asinFloat" "(" Float ")"
  syntax Float ::= "acosFloat" "(" Float ")"
  syntax Float ::= "absFloat" "(" Float ")"
  syntax Float ::= "Int2Float" "(" Int "," Int "," Int ")"
  syntax Float ::= "--Float" Float
  syntax Bool ::= Float ">Float" Float
  syntax Bool ::= Float ">=Float" Float
  syntax Bool ::= Float "==Float" Float
  syntax Bool ::= Float "=/=Float" Float
  syntax Bool ::= Float "<Float" Float
  syntax Bool ::= Float "<=Float" Float
  syntax Bool ::= "signFloat" "(" Float ")"
  syntax Bool ::= "isNaN" "(" Float ")"
  syntax Bool ::= "isMInt" "(" K ")"
  syntax Bool ::= "isInfinite" "(" Float ")"
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(390,1,395,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(390,1,395,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax KItem ::= Float
  syntax KItem ::= Bool
  syntax K
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(391,3,391,34)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?"
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?"
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?"
  syntax Bool ::= "isFloat" "(" K ")"
endmodule


module ID$SYNTAX [org.kframework.attributes.Location(Location(590,1,601,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  syntax String ::= "Id2String" "(" Id ")"
  syntax KItem ::= Id
  syntax K
  syntax Id [org.kframework.attributes.Location(Location(593,3,593,11)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Id ::= "freshId" "(" Int ")"
  syntax Id ::= "String2Id" "(" String ")"
  syntax Bool ::= "isId" "(" K ")"
endmodule


module ID-PROGRAM-PARSING [org.kframework.attributes.Location(Location(583,1,588,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ID-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module ID-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(583,1,588,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax KItem ::= Id
  syntax K
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*"
  syntax Id ::= #UpperId
  syntax Id ::= #LowerId
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isId" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module INT [org.kframework.attributes.Location(Location(329,1,388,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-SYNTAX
  imports INT$SYNTAX
  imports BOOL
  rule `<k>`(#KSequence(freshInt(I),DotVar0)=>#KSequence(I,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(384) org.kframework.attributes.Location(Location(384,8,384,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_modInt__INT`(I1,I2),DotVar0)=>#KSequence(`_%Int__INT`(`_+Int__INT`(`_%Int__INT`(I1,absInt(I2)),absInt(I2)),absInt(I2)),DotVar0)) requires `_=/=Int__INT`(I2,#token("0","Int")) ensures #token("true","Bool") [concrete() contentStartColumn(5) contentStartLine(366) org.kframework.attributes.Location(Location(366,5,369,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_dividesInt__INT`(I1,I2),DotVar0)=>#KSequence(`_==Int_`(`_%Int__INT`(I2,I1),#token("0","Int")),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(381) org.kframework.attributes.Location(Location(381,8,381,58)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_divInt__INT`(I1,I2),DotVar0)=>#KSequence(`_/Int__INT`(`_-Int__INT`(I1,`_modInt__INT`(I1,I2)),I2),DotVar0)) requires `_=/=Int__INT`(I2,#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(363) org.kframework.attributes.Location(Location(363,8,364,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_==Int_`(I1,I2),DotVar0)=>#KSequence(`_==K_`(I1,I2),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(379) org.kframework.attributes.Location(Location(379,8,379,40)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_=/=Int__INT`(I1,I2),DotVar0)=>#KSequence(`notBool_`(`_==Int_`(I1,I2)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(380) org.kframework.attributes.Location(Location(380,8,380,53)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KRewrite(#KSequence(#Or(#And(`_=/=Int__INT`(I1,I2),#Or(isRule(#token("1039441524","K")))),#And(`_orElseBool__BOOL`(#Or(#And(_3,isRule(#token("1189278331","K"))),#And(#token("false","Bool"),isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("-57979812","K"))),#And(K,isRule(#token("1932788753","K")))),#Or(#And(_9,isRule(#token("-57979812","K"))),#And(#token("false","Bool"),isRule(#token("1932788753","K"))),#And(K,isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("1189278331","K"))))),#Or(isRule(#token("1189278331","K")),isRule(#token("-57979812","K")),isRule(#token("1932788753","K")),isRule(#token("-960342392","K")))),#And(`notBool_`(#Or(#And(#token("false","Bool"),isRule(#token("-434867953","K"))),#And(#token("true","Bool"),isRule(#token("-76345387","K"))))),#Or(isRule(#token("-434867953","K")),isRule(#token("-76345387","K")))),#And(`_orBool__BOOL`(#Or(#And(_0,isRule(#token("726783824","K"))),#And(#token("false","Bool"),isRule(#token("89755605","K"))),#And(#token("true","Bool"),isRule(#token("1955583541","K"))),#And(B,isRule(#token("745649384","K")))),#Or(#And(#token("false","Bool"),isRule(#token("745649384","K"))),#And(_5,isRule(#token("1955583541","K"))),#And(#token("true","Bool"),isRule(#token("726783824","K"))),#And(B,isRule(#token("89755605","K"))))),#Or(isRule(#token("726783824","K")),isRule(#token("1955583541","K")),isRule(#token("89755605","K")),isRule(#token("745649384","K")))),#And(`_impliesBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1241950004","K"))),#And(_7,isRule(#token("-1525320841","K"))),#And(B,isRule(#token("2001971978","K"))),#And(#token("true","Bool"),isRule(#token("1037153131","K")))),#Or(#And(#token("false","Bool"),isRule(#token("2001971978","K"))),#And(_1,isRule(#token("-1241950004","K"))),#And(B,isRule(#token("1037153131","K"))),#And(#token("true","Bool"),isRule(#token("-1525320841","K"))))),#Or(isRule(#token("-1525320841","K")),isRule(#token("2001971978","K")),isRule(#token("1037153131","K")),isRule(#token("-1241950004","K")))),#And(`_=/=K__K-EQUAL`(K1,K2),#Or(isRule(#token("-1241915881","K")))),#And(`_andThenBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1281861781","K"))),#And(_2,isRule(#token("-1857958196","K"))),#And(K,isRule(#token("-347923073","K"))),#And(#token("true","Bool"),isRule(#token("1152435715","K")))),#Or(#And(#token("false","Bool"),isRule(#token("-1857958196","K"))),#And(_8,isRule(#token("-1281861781","K"))),#And(K,isRule(#token("1152435715","K"))),#And(#token("true","Bool"),isRule(#token("-347923073","K"))))),#Or(isRule(#token("-347923073","K")),isRule(#token("1152435715","K")),isRule(#token("-1857958196","K")),isRule(#token("-1281861781","K")))),#And(`_modInt__INT`(I1,I2),#Or(isRule(#token("-782415067","K")))),#And(`_divInt__INT`(I1,I2),#Or(isRule(#token("1581154955","K")))),#And(`_andBool_`(#Or(#And(#token("false","Bool"),isRule(#token("1849541356","K"))),#And(_4,isRule(#token("1922763765","K"))),#And(B,isRule(#token("982862195","K"))),#And(#token("true","Bool"),isRule(#token("-2132293033","K")))),#Or(#And(_6,isRule(#token("1849541356","K"))),#And(#token("false","Bool"),isRule(#token("1922763765","K"))),#And(#token("true","Bool"),isRule(#token("982862195","K"))),#And(B,isRule(#token("-2132293033","K"))))),#Or(isRule(#token("982862195","K")),isRule(#token("1922763765","K")),isRule(#token("-2132293033","K")),isRule(#token("1849541356","K")))),#And(freshInt(I),#Or(isRule(#token("-1852066690","K")))),#And(`_dividesInt__INT`(I1,I2),#Or(isRule(#token("1862900845","K")))),#And(`_xorBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-672357244","K"))),#And(B1,isRule(#token("-1954210549","K"))),#And(B,#Or(isRule(#token("348377483","K")),isRule(#token("1401740812","K"))))),#Or(#And(B2,isRule(#token("-1954210549","K"))),#And(#token("false","Bool"),isRule(#token("1401740812","K"))),#And(B,#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")))))),#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")),isRule(#token("-1954210549","K")),isRule(#token("1401740812","K")))),#And(`_==Int_`(I1,I2),#Or(isRule(#token("121465113","K")))),#And(`_==Bool__BOOL`(K1,K2),#Or(isRule(#token("-2042545919","K")))),#And(`_=/=Bool__BOOL`(B1,B2),#Or(isRule(#token("-463469799","K"))))),DotVar0),#Or(#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1955583541","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-347923073","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1857958196","K"))),#And(#KSequence(I,DotVar0),isRule(#token("-1852066690","K"))),#And(#KSequence(`_==Int_`(`_%Int__INT`(I2,I1),#token("0","Int")),DotVar0),isRule(#token("1862900845","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("726783824","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1241950004","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1525320841","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("348377483","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-434867953","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-672357244","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-2132293033","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1152435715","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1922763765","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1849541356","K"))),#And(#KSequence(`_==K_`(K1,K2),DotVar0),isRule(#token("-2042545919","K"))),#And(#KSequence(B,DotVar0),isRule(#token("745649384","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1932788753","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1401740812","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-1954210549","K"))),#And(#KSequence(`notBool_`(`_==K_`(K1,K2)),DotVar0),isRule(#token("-1241915881","K"))),#And(#KSequence(`_==K_`(I1,I2),DotVar0),isRule(#token("121465113","K"))),#And(#KSequence(`notBool_`(`_==Int_`(I1,I2)),DotVar0),isRule(#token("1039441524","K"))),#And(#KSequence(`_/Int__INT`(`_-Int__INT`(I1,`_modInt__INT`(I1,I2)),I2),DotVar0),isRule(#token("1581154955","K"))),#And(#KSequence(B,DotVar0),isRule(#token("982862195","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-463469799","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1189278331","K"))),#And(#KSequence(`notBool_`(B),DotVar0),isRule(#token("2001971978","K"))),#And(#KSequence(B,DotVar0),isRule(#token("89755605","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1281861781","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-57979812","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-960342392","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1037153131","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-76345387","K"))),#And(#KSequence(`_%Int__INT`(`_+Int__INT`(`_%Int__INT`(I1,absInt(I2)),absInt(I2)),absInt(I2)),DotVar0),isRule(#token("-782415067","K")))))) requires #token("true","Bool") ensures #token("true","Bool") [automaton()]
  ModuleComment( divInt and modInt implement e-division ,[org.kframework.attributes.Location(Location(344,16,344,59)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( FIXME: translate /Int and %Int into smtlib ,[org.kframework.attributes.Location(Location(340,16,340,63)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( /Int and %Int implement t-division ,[org.kframework.attributes.Location(Location(341,16,341,55)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module INT$SYNTAX [org.kframework.attributes.Location(Location(329,1,388,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority ~Int__INT > _^%Int___INT _^Int__INT > _*Int__INT _modInt__INT _%Int__INT _/Int__INT _divInt__INT > _-Int__INT _+Int__INT > _>>Int__INT _<<Int__INT > _&Int__INT > _xorInt__INT > _|Int__INT
  syntax associativity left _|Int__INT
  syntax associativity left _xorInt__INT
  syntax associativity left _modInt__INT
  syntax associativity left _divInt__INT
  syntax associativity left _^Int__INT
  syntax associativity left _^%Int___INT _^Int__INT
  syntax associativity left _^%Int___INT
  syntax associativity left _>Int__INT
  syntax associativity left _>>Int__INT _<<Int__INT
  syntax associativity left _>>Int__INT
  syntax associativity left _>=Int__INT
  syntax associativity left _==Int_
  syntax associativity left _=/=Int__INT
  syntax associativity left _<Int__INT
  syntax associativity left _<=Int__INT
  syntax associativity left _<<Int__INT
  syntax associativity left _/Int__INT
  syntax associativity left _-Int__INT _+Int__INT
  syntax associativity left _-Int__INT
  syntax associativity left _+Int__INT
  syntax associativity left _*Int__INT _modInt__INT _%Int__INT _/Int__INT _divInt__INT
  syntax associativity left _*Int__INT
  syntax associativity left _&Int__INT
  syntax associativity left _%Int__INT
  syntax K ::= "srandInt" "(" Int ")"
  syntax Int ::= Int "|Int" Int
  syntax Int ::= Int "xorInt" Int
  syntax Int ::= Int "modInt" Int
  syntax Int ::= Int "divInt" Int
  syntax Int ::= Int "^Int" Int
  syntax Int ::= Int "^%Int" Int Int
  syntax Int ::= Int ">>Int" Int
  syntax Int ::= Int "<<Int" Int
  syntax Int ::= Int "/Int" Int
  syntax Int ::= Int "-Int" Int
  syntax Int ::= Int "+Int" Int
  syntax Int ::= Int "*Int" Int
  syntax Int ::= Int "&Int" Int
  syntax Int ::= Int "%Int" Int
  syntax Int ::= "~Int" Int
  syntax Int ::= "randInt" "(" Int ")"
  syntax Int ::= "minInt" "(" Int "," Int ")"
  syntax Int ::= "maxInt" "(" Int "," Int ")"
  syntax Int ::= "freshInt" "(" Int ")"
  syntax Int ::= "absInt" "(" Int ")"
  syntax Bool ::= Int "dividesInt" Int
  syntax Bool ::= Int ">Int" Int
  syntax Bool ::= Int ">=Int" Int
  syntax Bool ::= Int "==Int" Int
  syntax Bool ::= Int "=/=Int" Int
  syntax Bool ::= Int "<Int" Int
  syntax Bool ::= Int "<=Int" Int
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(324,1,327,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(324,1,327,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Int ::= r"[\\+-]?[0-9]+"
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module K [org.kframework.attributes.Location(Location(213,1,229,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-SORT-LATTICE
  imports K$SYNTAX
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  ModuleComment( functions that preserve sorts and can therefore have inner rewrites,[org.kframework.attributes.Location(Location(225,3,225,73)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( functions that do not preserve sort and therefore cannot have inner rewrites,[org.kframework.attributes.Location(Location(227,3,227,82)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module K$SYNTAX [org.kframework.attributes.Location(Location(213,1,229,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
  syntax associativity non-assoc #KRewrite
  syntax K ::= K "=>" K
  syntax K ::= K "#as" K
  syntax K ::= "#fun" "(" K "=>" K ")" "(" K ")"
  syntax K ::= "#fun" "(" K ")" "(" K ")"
endmodule


module K-BOTTOM-SORT [org.kframework.attributes.Location(Location(145,1,148,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-BOTTOM-SORT$SYNTAX [org.kframework.attributes.Location(Location(145,1,148,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott
  syntax K
  syntax Bool ::= "isKItem" "(" K ")"
endmodule


module K-EQUAL [org.kframework.attributes.Location(Location(603,1,618,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports BOOL
  imports BASIC-K
  rule `<k>`(#KSequence(`_==Bool__BOOL`(K1,K2),DotVar0)=>#KSequence(`_==K_`(K1,K2),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(614) org.kframework.attributes.Location(Location(614,8,614,43)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_=/=K__K-EQUAL`(K1,K2),DotVar0)=>#KSequence(`notBool_`(`_==K_`(K1,K2)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(612) org.kframework.attributes.Location(Location(612,8,612,45)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KRewrite(#KSequence(#Or(#And(`_orElseBool__BOOL`(#Or(#And(_3,isRule(#token("1189278331","K"))),#And(#token("false","Bool"),isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("-57979812","K"))),#And(K,isRule(#token("1932788753","K")))),#Or(#And(_9,isRule(#token("-57979812","K"))),#And(#token("false","Bool"),isRule(#token("1932788753","K"))),#And(K,isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("1189278331","K"))))),#Or(isRule(#token("1189278331","K")),isRule(#token("-57979812","K")),isRule(#token("1932788753","K")),isRule(#token("-960342392","K")))),#And(`notBool_`(#Or(#And(#token("false","Bool"),isRule(#token("-434867953","K"))),#And(#token("true","Bool"),isRule(#token("-76345387","K"))))),#Or(isRule(#token("-434867953","K")),isRule(#token("-76345387","K")))),#And(`_orBool__BOOL`(#Or(#And(_0,isRule(#token("726783824","K"))),#And(#token("false","Bool"),isRule(#token("89755605","K"))),#And(#token("true","Bool"),isRule(#token("1955583541","K"))),#And(B,isRule(#token("745649384","K")))),#Or(#And(#token("false","Bool"),isRule(#token("745649384","K"))),#And(_5,isRule(#token("1955583541","K"))),#And(#token("true","Bool"),isRule(#token("726783824","K"))),#And(B,isRule(#token("89755605","K"))))),#Or(isRule(#token("726783824","K")),isRule(#token("1955583541","K")),isRule(#token("89755605","K")),isRule(#token("745649384","K")))),#And(`_impliesBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1241950004","K"))),#And(_7,isRule(#token("-1525320841","K"))),#And(B,isRule(#token("2001971978","K"))),#And(#token("true","Bool"),isRule(#token("1037153131","K")))),#Or(#And(#token("false","Bool"),isRule(#token("2001971978","K"))),#And(_1,isRule(#token("-1241950004","K"))),#And(B,isRule(#token("1037153131","K"))),#And(#token("true","Bool"),isRule(#token("-1525320841","K"))))),#Or(isRule(#token("-1525320841","K")),isRule(#token("2001971978","K")),isRule(#token("1037153131","K")),isRule(#token("-1241950004","K")))),#And(`_=/=K__K-EQUAL`(K1,K2),#Or(isRule(#token("-1241915881","K")))),#And(`_andThenBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1281861781","K"))),#And(_2,isRule(#token("-1857958196","K"))),#And(K,isRule(#token("-347923073","K"))),#And(#token("true","Bool"),isRule(#token("1152435715","K")))),#Or(#And(#token("false","Bool"),isRule(#token("-1857958196","K"))),#And(_8,isRule(#token("-1281861781","K"))),#And(K,isRule(#token("1152435715","K"))),#And(#token("true","Bool"),isRule(#token("-347923073","K"))))),#Or(isRule(#token("-347923073","K")),isRule(#token("1152435715","K")),isRule(#token("-1857958196","K")),isRule(#token("-1281861781","K")))),#And(`_andBool_`(#Or(#And(#token("false","Bool"),isRule(#token("1849541356","K"))),#And(_4,isRule(#token("1922763765","K"))),#And(B,isRule(#token("982862195","K"))),#And(#token("true","Bool"),isRule(#token("-2132293033","K")))),#Or(#And(_6,isRule(#token("1849541356","K"))),#And(#token("false","Bool"),isRule(#token("1922763765","K"))),#And(#token("true","Bool"),isRule(#token("982862195","K"))),#And(B,isRule(#token("-2132293033","K"))))),#Or(isRule(#token("982862195","K")),isRule(#token("1922763765","K")),isRule(#token("-2132293033","K")),isRule(#token("1849541356","K")))),#And(`_xorBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-672357244","K"))),#And(B1,isRule(#token("-1954210549","K"))),#And(B,#Or(isRule(#token("348377483","K")),isRule(#token("1401740812","K"))))),#Or(#And(B2,isRule(#token("-1954210549","K"))),#And(#token("false","Bool"),isRule(#token("1401740812","K"))),#And(B,#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")))))),#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")),isRule(#token("-1954210549","K")),isRule(#token("1401740812","K")))),#And(`_==Bool__BOOL`(K1,K2),#Or(isRule(#token("-2042545919","K")))),#And(`_=/=Bool__BOOL`(B1,B2),#Or(isRule(#token("-463469799","K"))))),DotVar0),#Or(#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1955583541","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-347923073","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1857958196","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("726783824","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1241950004","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1525320841","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("348377483","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-434867953","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-672357244","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-2132293033","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1152435715","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1922763765","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1849541356","K"))),#And(#KSequence(`_==K_`(K1,K2),DotVar0),isRule(#token("-2042545919","K"))),#And(#KSequence(B,DotVar0),isRule(#token("745649384","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1932788753","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1401740812","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-1954210549","K"))),#And(#KSequence(`notBool_`(`_==K_`(K1,K2)),DotVar0),isRule(#token("-1241915881","K"))),#And(#KSequence(B,DotVar0),isRule(#token("982862195","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-463469799","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1189278331","K"))),#And(#KSequence(`notBool_`(B),DotVar0),isRule(#token("2001971978","K"))),#And(#KSequence(B,DotVar0),isRule(#token("89755605","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1281861781","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-57979812","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-960342392","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1037153131","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-76345387","K")))))) requires #token("true","Bool") ensures #token("true","Bool") [automaton()]
endmodule


module K-EQUAL$SYNTAX [org.kframework.attributes.Location(Location(603,1,618,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority _=/=K__K-EQUAL _==K_ > #And _andThenBool__BOOL _impliesBool__BOOL _andBool_ _orElseBool__BOOL #Or notBool_ _orBool__BOOL _xorBool__BOOL
  syntax associativity left _=/=K__K-EQUAL _==K_
  syntax K ::= "#if" Bool "#then" K "#else" K "#fi"
  syntax Bool ::= K "==K" K
  syntax Bool ::= K "=/=K" K
endmodule


module K-IO$SYNTAX [org.kframework.attributes.Location(Location(638,1,752,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports LIST$SYNTAX
  syntax String ::= "#read" "(" Int "," Int ")"
  syntax Stream ::= "#buffer" "(" K ")"
  syntax KItem ::= Stream
  syntax KItem ::= IOError
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")"
  syntax KItem ::= "#system" "(" String ")"
  syntax KItem ::= "#stat" "(" String ")"
  syntax KItem ::= "#parseInModule" "(" String "," String "," String ")"
  syntax KItem ::= "#parse" "(" String "," String ")"
  syntax KItem ::= "#opendir" "(" String ")"
  syntax KItem ::= "#lstat" "(" String ")"
  syntax K ::= "#write" "(" Int "," String ")"
  syntax K ::= "#seekEnd" "(" Int "," Int ")"
  syntax K ::= "#seek" "(" Int "," Int ")"
  syntax K ::= "#putc" "(" Int "," Int ")"
  syntax K ::= "#close" "(" Int ")"
  syntax K
  syntax Int ::= "#tell" "(" Int ")"
  syntax Int ::= "#stdout"
  syntax Int ::= "#stdin"
  syntax Int ::= "#stderr"
  syntax Int ::= "#open" "(" String "," String ")"
  syntax Int ::= "#open" "(" String ")"
  syntax Int ::= "#getc" "(" Int ")"
  syntax IOError ::= "#unknownIOError" "(" Int ")"
  syntax IOError ::= "#noparse"
  syntax IOError ::= "#EXDEV"
  syntax IOError ::= "#EWOULDBLOCK"
  syntax IOError ::= "#ETOOMANYREFS"
  syntax IOError ::= "#ETIMEDOUT"
  syntax IOError ::= "#ESRCH"
  syntax IOError ::= "#ESPIPE"
  syntax IOError ::= "#ESOCKTNOSUPPORT"
  syntax IOError ::= "#ESHUTDOWN"
  syntax IOError ::= "#EROFS"
  syntax IOError ::= "#ERANGE"
  syntax IOError ::= "#EPROTOTYPE"
  syntax IOError ::= "#EPROTONOSUPPORT"
  syntax IOError ::= "#EPIPE"
  syntax IOError ::= "#EPFNOSUPPORT"
  syntax IOError ::= "#EPERM"
  syntax IOError ::= "#EOVERFLOW"
  syntax IOError ::= "#EOPNOTSUPP"
  syntax IOError ::= "#EOF"
  syntax IOError ::= "#ENXIO"
  syntax IOError ::= "#ENOTTY"
  syntax IOError ::= "#ENOTSOCK"
  syntax IOError ::= "#ENOTEMPTY"
  syntax IOError ::= "#ENOTDIR"
  syntax IOError ::= "#ENOTCONN"
  syntax IOError ::= "#ENOSYS"
  syntax IOError ::= "#ENOSPC"
  syntax IOError ::= "#ENOPROTOOPT"
  syntax IOError ::= "#ENOMEM"
  syntax IOError ::= "#ENOLCK"
  syntax IOError ::= "#ENOEXEC"
  syntax IOError ::= "#ENOENT"
  syntax IOError ::= "#ENODEV"
  syntax IOError ::= "#ENOBUFS"
  syntax IOError ::= "#ENFILE"
  syntax IOError ::= "#ENETUNREACH"
  syntax IOError ::= "#ENETRESET"
  syntax IOError ::= "#ENETDOWN"
  syntax IOError ::= "#ENAMETOOLONG"
  syntax IOError ::= "#EMSGSIZE"
  syntax IOError ::= "#EMLINK"
  syntax IOError ::= "#EMFILE"
  syntax IOError ::= "#ELOOP"
  syntax IOError ::= "#EISDIR"
  syntax IOError ::= "#EISCONN"
  syntax IOError ::= "#EIO"
  syntax IOError ::= "#EINVAL"
  syntax IOError ::= "#EINTR"
  syntax IOError ::= "#EINPROGRESS"
  syntax IOError ::= "#EHOSTUNREACH"
  syntax IOError ::= "#EHOSTDOWN"
  syntax IOError ::= "#EFBIG"
  syntax IOError ::= "#EFAULT"
  syntax IOError ::= "#EEXIST"
  syntax IOError ::= "#EDOM"
  syntax IOError ::= "#EDESTADDRREQ"
  syntax IOError ::= "#EDEADLK"
  syntax IOError ::= "#ECONNRESET"
  syntax IOError ::= "#ECONNREFUSED"
  syntax IOError ::= "#ECONNABORTED"
  syntax IOError ::= "#ECHILD"
  syntax IOError ::= "#EBUSY"
  syntax IOError ::= "#EBADF"
  syntax IOError ::= "#EALREADY"
  syntax IOError ::= "#EAGAIN"
  syntax IOError ::= "#EAFNOSUPPORT"
  syntax IOError ::= "#EADDRNOTAVAIL"
  syntax IOError ::= "#EADDRINUSE"
  syntax IOError ::= "#EACCES"
  syntax IOError ::= "#E2BIG"
  syntax Bool ::= "isStream" "(" K ")"
  syntax Bool ::= "isIOError" "(" K ")"
endmodule


module K-REFLECTION [org.kframework.attributes.Location(Location(620,1,636,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING
  imports K-REFLECTION$SYNTAX
  imports BASIC-K
  rule `<k>`(#KRewrite(#KSequence(#Or(#And(`_=/=Int__INT`(I1,I2),#Or(isRule(#token("1039441524","K")))),#And(`_orElseBool__BOOL`(#Or(#And(_3,isRule(#token("1189278331","K"))),#And(#token("false","Bool"),isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("-57979812","K"))),#And(K,isRule(#token("1932788753","K")))),#Or(#And(_9,isRule(#token("-57979812","K"))),#And(#token("false","Bool"),isRule(#token("1932788753","K"))),#And(K,isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("1189278331","K"))))),#Or(isRule(#token("1189278331","K")),isRule(#token("-57979812","K")),isRule(#token("1932788753","K")),isRule(#token("-960342392","K")))),#And(`notBool_`(#Or(#And(#token("false","Bool"),isRule(#token("-434867953","K"))),#And(#token("true","Bool"),isRule(#token("-76345387","K"))))),#Or(isRule(#token("-434867953","K")),isRule(#token("-76345387","K")))),#And(`_orBool__BOOL`(#Or(#And(_0,isRule(#token("726783824","K"))),#And(#token("false","Bool"),isRule(#token("89755605","K"))),#And(#token("true","Bool"),isRule(#token("1955583541","K"))),#And(B,isRule(#token("745649384","K")))),#Or(#And(#token("false","Bool"),isRule(#token("745649384","K"))),#And(_5,isRule(#token("1955583541","K"))),#And(#token("true","Bool"),isRule(#token("726783824","K"))),#And(B,isRule(#token("89755605","K"))))),#Or(isRule(#token("726783824","K")),isRule(#token("1955583541","K")),isRule(#token("89755605","K")),isRule(#token("745649384","K")))),#And(`_impliesBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1241950004","K"))),#And(_7,isRule(#token("-1525320841","K"))),#And(B,isRule(#token("2001971978","K"))),#And(#token("true","Bool"),isRule(#token("1037153131","K")))),#Or(#And(#token("false","Bool"),isRule(#token("2001971978","K"))),#And(_1,isRule(#token("-1241950004","K"))),#And(B,isRule(#token("1037153131","K"))),#And(#token("true","Bool"),isRule(#token("-1525320841","K"))))),#Or(isRule(#token("-1525320841","K")),isRule(#token("2001971978","K")),isRule(#token("1037153131","K")),isRule(#token("-1241950004","K")))),#And(`replaceFirst(_,_,_)_STRING`(Source,ToReplace,#Or(#And(_14,isRule(#token("-1020056296","K"))),#And(Replacement,isRule(#token("-768861175","K"))))),#Or(isRule(#token("-1020056296","K")),isRule(#token("-768861175","K")))),#And(`replaceAll(_,_,_)_STRING`(Source,ToReplace,Replacement),#Or(isRule(#token("-1428505111","K")))),#And(rfindChar(#Or(#And(_12,isRule(#token("-1016982628","K"))),#And(S1,isRule(#token("1273043602","K")))),#Or(#And(S2,isRule(#token("1273043602","K"))),#And(#token("\"\"","String"),isRule(#token("-1016982628","K")))),#Or(#And(I,isRule(#token("1273043602","K"))),#And(_13,isRule(#token("-1016982628","K"))))),#Or(isRule(#token("1273043602","K")),isRule(#token("-1016982628","K")))),#And(`_=/=K__K-EQUAL`(K1,K2),#Or(isRule(#token("-1241915881","K")))),#And(`_andThenBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1281861781","K"))),#And(_2,isRule(#token("-1857958196","K"))),#And(K,isRule(#token("-347923073","K"))),#And(#token("true","Bool"),isRule(#token("1152435715","K")))),#Or(#And(#token("false","Bool"),isRule(#token("-1857958196","K"))),#And(_8,isRule(#token("-1281861781","K"))),#And(K,isRule(#token("1152435715","K"))),#And(#token("true","Bool"),isRule(#token("-347923073","K"))))),#Or(isRule(#token("-347923073","K")),isRule(#token("1152435715","K")),isRule(#token("-1857958196","K")),isRule(#token("-1281861781","K")))),#And(`_modInt__INT`(I1,I2),#Or(isRule(#token("-782415067","K")))),#And(`_divInt__INT`(I1,I2),#Or(isRule(#token("1581154955","K")))),#And(`_>=String__STRING`(S1,S2),#Or(isRule(#token("100452739","K")))),#And(`_andBool_`(#Or(#And(#token("false","Bool"),isRule(#token("1849541356","K"))),#And(_4,isRule(#token("1922763765","K"))),#And(B,isRule(#token("982862195","K"))),#And(#token("true","Bool"),isRule(#token("-2132293033","K")))),#Or(#And(_6,isRule(#token("1849541356","K"))),#And(#token("false","Bool"),isRule(#token("1922763765","K"))),#And(#token("true","Bool"),isRule(#token("982862195","K"))),#And(B,isRule(#token("-2132293033","K"))))),#Or(isRule(#token("982862195","K")),isRule(#token("1922763765","K")),isRule(#token("-2132293033","K")),isRule(#token("1849541356","K")))),#And(freshInt(I),#Or(isRule(#token("-1852066690","K")))),#And(`_dividesInt__INT`(I1,I2),#Or(isRule(#token("1862900845","K")))),#And(`_<=String__STRING`(S1,S2),#Or(isRule(#token("1956429489","K")))),#And(`_xorBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-672357244","K"))),#And(B1,isRule(#token("-1954210549","K"))),#And(B,#Or(isRule(#token("348377483","K")),isRule(#token("1401740812","K"))))),#Or(#And(B2,isRule(#token("-1954210549","K"))),#And(#token("false","Bool"),isRule(#token("1401740812","K"))),#And(B,#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")))))),#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")),isRule(#token("-1954210549","K")),isRule(#token("1401740812","K")))),#And(`replace(_,_,_,_)_STRING`(Source,#Or(#And(ToReplace,isRule(#token("-1102252154","K"))),#And(_10,isRule(#token("1595175616","K")))),#Or(#And(_11,isRule(#token("1595175616","K"))),#And(Replacement,isRule(#token("-1102252154","K")))),#Or(#And(Count,isRule(#token("-1102252154","K"))),#And(#token("0","Int"),isRule(#token("1595175616","K"))))),#Or(isRule(#token("1595175616","K")),isRule(#token("-1102252154","K")))),#And(`_>String__STRING`(S1,S2),#Or(isRule(#token("597445048","K")))),#And(`_==String__STRING`(S1,S2),#Or(isRule(#token("-1230086999","K")))),#And(`countAllOccurrences(_,_)_STRING`(Source,ToCount),#Or(isRule(#token("-103714097","K")),isRule(#token("-1133576746","K")))),#And(`_==Int_`(I1,I2),#Or(isRule(#token("121465113","K")))),#And(`_=/=String__STRING`(S1,S2),#Or(isRule(#token("489111029","K")))),#And(`_==Bool__BOOL`(K1,K2),#Or(isRule(#token("-2042545919","K")))),#And(findChar(#Or(#And(S1,isRule(#token("502691075","K"))),#And(_15,isRule(#token("-449045104","K")))),#Or(#And(S2,isRule(#token("502691075","K"))),#And(#token("\"\"","String"),isRule(#token("-449045104","K")))),#Or(#And(I,isRule(#token("502691075","K"))),#And(_16,isRule(#token("-449045104","K"))))),#Or(isRule(#token("-449045104","K")),isRule(#token("502691075","K")))),#And(`_=/=Bool__BOOL`(B1,B2),#Or(isRule(#token("-463469799","K"))))),DotVar0),#Or(#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1955583541","K"))),#And(#KSequence(Source,DotVar0),isRule(#token("-1020056296","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-347923073","K"))),#And(#KSequence(`_+Int__INT`(#token("1","Int"),`countAllOccurrences(_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToCount,#token("0","Int")),lengthString(ToCount)),lengthString(Source)),ToCount)),DotVar0),isRule(#token("-103714097","K"))),#And(#KSequence(`_<String__STRING`(S2,S1),DotVar0),isRule(#token("597445048","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1857958196","K"))),#And(#KSequence(I,DotVar0),isRule(#token("-1852066690","K"))),#And(#KSequence(`_==Int_`(`_%Int__INT`(I2,I1),#token("0","Int")),DotVar0),isRule(#token("1862900845","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("726783824","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1241950004","K"))),#And(#KSequence(`notBool_`(`_<String__STRING`(S2,S1)),DotVar0),isRule(#token("1956429489","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1525320841","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("348377483","K"))),#And(#KSequence(`_==K_`(S1,S2),DotVar0),isRule(#token("-1230086999","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-434867953","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-672357244","K"))),#And(#KSequence(`replace(_,_,_,_)_STRING`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING`(Source,ToReplace)),DotVar0),isRule(#token("-1428505111","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-2132293033","K"))),#And(#KSequence(#token("0","Int"),DotVar0),isRule(#token("-1133576746","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1152435715","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1922763765","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1849541356","K"))),#And(#KSequence(`_==K_`(K1,K2),DotVar0),isRule(#token("-2042545919","K"))),#And(#KSequence(B,DotVar0),isRule(#token("745649384","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1932788753","K"))),#And(#KSequence(`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),#token("-1","Int")),findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)))),DotVar0),isRule(#token("502691075","K"))),#And(#KSequence(#token("-1","Int"),DotVar0),isRule(#token("-449045104","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1401740812","K"))),#And(#KSequence(`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source)),ToReplace,Replacement,`_-Int__INT`(Count,#token("1","Int")))),DotVar0),isRule(#token("-1102252154","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-1954210549","K"))),#And(#KSequence(`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source))),DotVar0),isRule(#token("-768861175","K"))),#And(#KSequence(`notBool_`(`_<String__STRING`(S1,S2)),DotVar0),isRule(#token("100452739","K"))),#And(#KSequence(`maxInt(_,_)_INT`(rfindString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),rfindChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)),DotVar0),isRule(#token("1273043602","K"))),#And(#KSequence(`notBool_`(`_==K_`(K1,K2)),DotVar0),isRule(#token("-1241915881","K"))),#And(#KSequence(`_==K_`(I1,I2),DotVar0),isRule(#token("121465113","K"))),#And(#KSequence(`notBool_`(`_==Int_`(I1,I2)),DotVar0),isRule(#token("1039441524","K"))),#And(#KSequence(`_/Int__INT`(`_-Int__INT`(I1,`_modInt__INT`(I1,I2)),I2),DotVar0),isRule(#token("1581154955","K"))),#And(#KSequence(#token("-1","Int"),DotVar0),isRule(#token("-1016982628","K"))),#And(#KSequence(B,DotVar0),isRule(#token("982862195","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-463469799","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1189278331","K"))),#And(#KSequence(`notBool_`(B),DotVar0),isRule(#token("2001971978","K"))),#And(#KSequence(B,DotVar0),isRule(#token("89755605","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1281861781","K"))),#And(#KSequence(Source,DotVar0),isRule(#token("1595175616","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-57979812","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-960342392","K"))),#And(#KSequence(`notBool_`(`_==String__STRING`(S1,S2)),DotVar0),isRule(#token("489111029","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1037153131","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-76345387","K"))),#And(#KSequence(`_%Int__INT`(`_+Int__INT`(`_%Int__INT`(I1,absInt(I2)),absInt(I2)),absInt(I2)),DotVar0),isRule(#token("-782415067","K")))))) requires #token("true","Bool") ensures #token("true","Bool") [automaton()]
  ModuleComment( undefined,[org.kframework.attributes.Location(Location(633,3,633,15)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( meaningful only for the purposes of compilation to a binary, otherwise,[org.kframework.attributes.Location(Location(632,3,632,76)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module K-REFLECTION$SYNTAX [org.kframework.attributes.Location(Location(620,1,636,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax String ::= "#sort" "(" K ")"
  syntax String ::= "#getenv" "(" String ")"
  syntax List ::= "#argv" "(" ")"
  syntax KItem ::= List
  syntax KItem ::= "getKLabel" "(" K ")"
  syntax KItem ::= "#fresh" "(" String ")"
  syntax K ::= "#configuration"
  syntax K
  syntax Bool ::= "isList" "(" K ")"
  syntax Bool ::= "#isConcrete" "(" K ")"
endmodule


module K-SORT-LATTICE [org.kframework.attributes.Location(Location(150,1,153,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports K-TOP-SORT
  imports K-SORT-LATTICE$SYNTAX
  imports K-BOTTOM-SORT
endmodule


module K-SORT-LATTICE$SYNTAX [org.kframework.attributes.Location(Location(150,1,153,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports K-TOP-SORT$SYNTAX
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-TERM [org.kframework.attributes.Location(Location(232,1,238,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-TERM$SYNTAX
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TERM$SYNTAX [org.kframework.attributes.Location(Location(232,1,238,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
endmodule


module K-TOP-SORT [org.kframework.attributes.Location(Location(140,1,143,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-TOP-SORT$SYNTAX
endmodule


module K-TOP-SORT$SYNTAX [org.kframework.attributes.Location(Location(140,1,143,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott
  syntax K
  syntax Bool ::= "isKItem" "(" K ")"
endmodule


module KAST [org.kframework.attributes.Location(Location(31,1,54,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports KSTRING
  imports KAST$SYNTAX
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  ModuleComment(TODO(dwightguth): there is some kind of weird issue with this production which is causing AddEmptyLists to behave incorrectly.,[org.kframework.attributes.Location(Location(51,1,51,129)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( we need to fix this issue so we can add this production back.,[org.kframework.attributes.Location(Location(52,1,52,65)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( something that doesn't collide with meta-variables,[org.kframework.attributes.Location(Location(45,24,45,77)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment(                 | KList ",," KList  [klabel(#KList), left, assoc, unit(#EmptyKList), hook(org.kframework.kore.KList), prefer],[org.kframework.attributes.Location(Location(53,1,53,129)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module KAST$SYNTAX [org.kframework.attributes.Location(Location(31,1,54,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports KSTRING$SYNTAX
  imports BUILTIN-ID-TOKENS$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left #KList
  syntax KList ::= KList "," KList
  syntax KList ::= K
  syntax KList ::= ".KList"
  syntax KList ::= ".::KList"
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`"
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*"
  syntax KLabel ::= #LowerId
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")"
  syntax KBott ::= "#token" "(" KString "," KString ")"
  syntax KBott ::= "#klabel" "(" KLabel ")"
  syntax K
  syntax Bool ::= "isKList" "(" K ")"
endmodule


module KCELLS [org.kframework.attributes.Location(Location(87,1,98,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KCELLS$SYNTAX
  imports KAST
endmodule


module KCELLS$SYNTAX [org.kframework.attributes.Location(Location(87,1,98,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  syntax associativity left #cells
  syntax KItem ::= Cell
  syntax KItem ::= Bag
  syntax K ::= Bag
  syntax K
  syntax Cell [org.kframework.attributes.Location(Location(90,3,90,13)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax Bool ::= "isCell" "(" K ")"
  syntax Bool ::= "isBag" "(" K ")"
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag
  syntax Bag ::= ".Bag"
  syntax Bag ::= ".::Bag"
  syntax Bag ::= "(" Bag ")"
endmodule


module KORE [org.kframework.attributes.Location(Location(224,1,230,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))]
  imports MAP
  imports KORE-SYNTAX
  imports KORE$SYNTAX
  syntax KItem ::= Cell
  syntax K
  syntax Cell ::= KCell
  syntax Bool ::= "isCell" "(" K ")"
  rule initKCell(Init)=>`<k>`(`Map:lookup`(Init,#token("$PGM","KConfigVar"))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  Bubble(config,<k> $PGM:Definition </k>,[contentStartColumn(17) contentStartLine(228) org.kframework.attributes.Location(Location(228,3,228,40)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
endmodule


module KORE$SYNTAX [org.kframework.attributes.Location(Location(224,1,230,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))]
  imports MAP$SYNTAX
  imports KORE-SYNTAX$SYNTAX
  syntax KItem ::= KCell
  syntax KCell ::= "initKCell" "(" Map ")"
  syntax KCell ::= "<k>" K "</k>"
  syntax K
  syntax Bool ::= "isKCell" "(" K ")"
  Bubble(config,<k> $PGM:Definition </k>,[contentStartColumn(17) contentStartLine(228) org.kframework.attributes.Location(Location(228,3,228,40)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
endmodule


module KORE-SYNTAX [org.kframework.attributes.Location(Location(2,1,222,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))]
  imports KORE-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
  ModuleComment(*
  syntax ObjectAliasDeclaration ::= "alias" ObjectHeadConstructor "{" ObjectSortVariableList "}"
        "(" ObjectSortList ")" ":" ObjectSort "where"
        ObjectHeadConstructor "{" ObjectSortVariableList "}"
        "(" ObjectVariableList ")" ":=" ObjectPattern Attribute

  syntax MetaAliasDeclaration ::= "alias" MetaHeadConstructor "{" MetaSortVariableList "}"
        "(" MetaSortList ")" ":" MetaSort "where"
        MetaHeadConstructor "{" MetaSortVariableList "}"
        "(" MetaVariableList ")" ":=" MetaPattern Attribute
  *,[org.kframework.attributes.Location(Location(165,3,175,5)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment(*
  syntax MetaIdentifier ::= r"#[A-Za-z][A-Za-z0-9_'-]*"    [prec(1), notInRules, token, autoReject]
                          | r"#\\[A-Za-z][A-Za-z0-9_'-]*"  [prec(1), notInRules, token, autoReject]
                          | r"#`[A-Za-z][A-Za-z0-9_'-]*"   [prec(1), notInRules, token, autoReject]
  *,[org.kframework.attributes.Location(Location(19,3,23,5)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( the above doesn't work. I have to use the following, which accepts more things,[org.kframework.attributes.Location(Location(24,3,24,84)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( imports STRING,[org.kframework.attributes.Location(Location(3,3,3,20)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( Update the alias syntax to the above when tests are updated.,[org.kframework.attributes.Location(Location(176,3,176,66)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( These seem to be missing from the K document.,[org.kframework.attributes.Location(Location(210,3,210,51)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( Modules,[org.kframework.attributes.Location(Location(132,3,132,13)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( Lexicals from p50,[org.kframework.attributes.Location(Location(27,3,27,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( Lexicals form p49,[org.kframework.attributes.Location(Location(7,3,7,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
  ModuleComment( Heads and Patterns,[org.kframework.attributes.Location(Location(62,3,62,24)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))])
endmodule


module KORE-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(2,1,222,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))]
  syntax Variable ::= ObjectVariable
  syntax Variable ::= MetaVariable
  syntax SymbolDeclaration ::= ObjectSymbolDeclaration
  syntax SymbolDeclaration ::= MetaSymbolDeclaration
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(102,3,102,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/kore-mattox/src/main/k/./kore.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]"
  syntax SortVariableList ::= ObjectSortVariable "," SortVariableList
  syntax SortVariableList ::= ObjectSortVariable
  syntax SortVariableList ::= MetaSortVariable "," SortVariableList
  syntax SortVariableList ::= MetaSortVariable
  syntax SortVariableList ::= ""
  syntax SortDeclaration ::= "sort" ObjectSortConstructor "{" ObjectSortVariableList "}" Attribute
  syntax Sort ::= ObjectSort
  syntax Sort ::= MetaSort
  syntax PatternList ::= Pattern "," PatternList
  syntax PatternList ::= Pattern
  syntax PatternList ::= ""
  syntax Pattern ::= ObjectPattern
  syntax Pattern ::= MetaPattern
  syntax ObjectVariableList ::= ObjectVariable "," ObjectVariableList
  syntax ObjectVariableList ::= ObjectVariable
  syntax ObjectVariableList ::= ""
  syntax ObjectVariable ::= ObjectIdentifier ":" ObjectSort
  syntax ObjectSymbolDeclaration ::= "symbol" ObjectHeadConstructor "{" ObjectSortVariableList "}" "(" ObjectSortList ")" ":" ObjectSort Attribute
  syntax ObjectSortVariableList ::= ObjectSortVariable "," ObjectSortVariableList
  syntax ObjectSortVariableList ::= ObjectSortVariable
  syntax ObjectSortVariableList ::= ""
  syntax ObjectSortVariable ::= ObjectIdentifier
  syntax ObjectSortList ::= ObjectSort "," ObjectSortList
  syntax ObjectSortList ::= ObjectSort
  syntax ObjectSortList ::= ""
  syntax ObjectSortConstructor ::= ObjectIdentifier
  syntax ObjectSort ::= ObjectSortVariable
  syntax ObjectSort ::= ObjectNonVariableSort
  syntax ObjectSlashIdentifier ::= r"\\[A-Za-z][-A-Za-z0-9_']*"
  syntax ObjectPattern ::= ObjectVariable
  syntax ObjectPattern ::= ObjectHead "(" PatternList ")"
  syntax ObjectPattern ::= "\\top" "{" ObjectSort "}" "(" ")"
  syntax ObjectPattern ::= "\\rewrites" "{" ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectPattern ::= "\\or" "{" ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectPattern ::= "\\not" "{" ObjectSort "}" "(" Pattern ")"
  syntax ObjectPattern ::= "\\next" "{" ObjectSort "}" "(" Pattern ")"
  syntax ObjectPattern ::= "\\in" "{" ObjectSort "," ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectPattern ::= "\\implies" "{" ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectPattern ::= "\\iff" "{" ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectPattern ::= "\\forall" "{" ObjectSort "}" "(" ObjectVariable "," Pattern ")"
  syntax ObjectPattern ::= "\\floor" "{" ObjectSort "," ObjectSort "}" "(" Pattern ")"
  syntax ObjectPattern ::= "\\exists" "{" ObjectSort "}" "(" ObjectVariable "," Pattern ")"
  syntax ObjectPattern ::= "\\equals" "{" ObjectSort "," ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectPattern ::= "\\dv" "{" ObjectSort "}" "(" MetaPattern ")"
  syntax ObjectPattern ::= "\\ceil" "{" ObjectSort "," ObjectSort "}" "(" Pattern ")"
  syntax ObjectPattern ::= "\\bottom" "{" ObjectSort "}" "(" ")"
  syntax ObjectPattern ::= "\\and" "{" ObjectSort "}" "(" Pattern "," Pattern ")"
  syntax ObjectNonVariableSort ::= ObjectSortConstructor "{" ObjectSortList "}"
  syntax ObjectNonSlashIdentifier ::= r"[A-Za-z][-A-Za-z0-9_']*"
  syntax ObjectIdentifier ::= ObjectSlashIdentifier
  syntax ObjectIdentifier ::= ObjectNonSlashIdentifier
  syntax ObjectHeadConstructor ::= ObjectIdentifier
  syntax ObjectHead ::= ObjectHeadConstructor "{" ObjectSortList "}"
  syntax ObjectAliasDeclaration ::= "alias" ObjectHeadConstructor "{" ObjectSortVariableList "}" "(" ObjectSortList ")" ":" ObjectSort Attribute
  syntax Modules ::= Module Modules
  syntax Modules ::= Module
  syntax ModuleName ::= ObjectIdentifier
  syntax Module ::= Attribute "module" ModuleName Declarations "endmodule" Attribute
  syntax Module ::= "module" ObjectIdentifier Declarations "endmodule" Attribute
  syntax MetaVariableList ::= MetaVariable "," MetaVariableList
  syntax MetaVariableList ::= MetaVariable
  syntax MetaVariableList ::= ""
  syntax MetaVariable ::= MetaIdentifier ":" MetaSort
  syntax MetaSymbolDeclaration ::= "symbol" MetaHeadConstructor "{" MetaSortVariableList "}" "(" MetaSortList ")" ":" MetaSort Attribute
  syntax MetaSortVariableList ::= MetaSortVariable "," MetaSortVariableList
  syntax MetaSortVariableList ::= MetaSortVariable
  syntax MetaSortVariableList ::= ""
  syntax MetaSortVariable ::= MetaIdentifier
  syntax MetaSortList ::= MetaSort "," MetaSortList
  syntax MetaSortList ::= MetaSort
  syntax MetaSortList ::= ""
  syntax MetaSortConstructor ::= "#VariableList"
  syntax MetaSortConstructor ::= "#Variable"
  syntax MetaSortConstructor ::= "#SymbolList"
  syntax MetaSortConstructor ::= "#Symbol"
  syntax MetaSortConstructor ::= "#String"
  syntax MetaSortConstructor ::= "#SortList"
  syntax MetaSortConstructor ::= "#Sort"
  syntax MetaSortConstructor ::= "#PatternList"
  syntax MetaSortConstructor ::= "#Pattern"
  syntax MetaSortConstructor ::= "#CharList"
  syntax MetaSortConstructor ::= "#Char"
  syntax MetaSort ::= MetaSortVariable
  syntax MetaSort ::= MetaNonVariableSort
  syntax MetaPattern ::= r"'.'"
  syntax MetaPattern ::= String
  syntax MetaPattern ::= MetaVariable
  syntax MetaPattern ::= MetaHead "(" PatternList ")"
  syntax MetaPattern ::= "\\top" "{" MetaSort "}" "(" ")"
  syntax MetaPattern ::= "\\or" "{" MetaSort "}" "(" Pattern "," Pattern ")"
  syntax MetaPattern ::= "\\not" "{" MetaSort "}" "(" Pattern ")"
  syntax MetaPattern ::= "\\in" "{" MetaSort "," MetaSort "}" "(" Pattern "," Pattern ")"
  syntax MetaPattern ::= "\\implies" "{" MetaSort "}" "(" Pattern "," Pattern ")"
  syntax MetaPattern ::= "\\iff" "{" MetaSort "}" "(" Pattern "," Pattern ")"
  syntax MetaPattern ::= "\\forall" "{" MetaSort "}" "(" MetaVariable "," Pattern ")"
  syntax MetaPattern ::= "\\floor" "{" MetaSort "," MetaSort "}" "(" Pattern ")"
  syntax MetaPattern ::= "\\exists" "{" MetaSort "}" "(" MetaVariable "," Pattern ")"
  syntax MetaPattern ::= "\\equals" "{" MetaSort "," MetaSort "}" "(" Pattern "," Pattern ")"
  syntax MetaPattern ::= "\\ceil" "{" MetaSort "," MetaSort "}" "(" Pattern ")"
  syntax MetaPattern ::= "\\bottom" "{" MetaSort "}" "(" ")"
  syntax MetaPattern ::= "\\and" "{" MetaSort "}" "(" Pattern "," Pattern ")"
  syntax MetaNonVariableSort ::= MetaSortConstructor "{" "}"
  syntax MetaIdentifier ::= r"#.?[A-Za-z][A-Za-z0-9_'-]*"
  syntax MetaHeadConstructor ::= MetaIdentifier
  syntax MetaHead ::= MetaHeadConstructor "{" MetaSortList "}"
  syntax MetaAliasDeclaration ::= "alias" MetaHeadConstructor "{" MetaSortVariableList "}" "(" MetaSortList ")" ":" MetaSort Attribute
  syntax KItem ::= Variable
  syntax KItem ::= SymbolDeclaration
  syntax KItem ::= String
  syntax KItem ::= SortVariableList
  syntax KItem ::= SortDeclaration
  syntax KItem ::= Sort
  syntax KItem ::= PatternList
  syntax KItem ::= Pattern
  syntax KItem ::= ObjectVariableList
  syntax KItem ::= ObjectVariable
  syntax KItem ::= ObjectSymbolDeclaration
  syntax KItem ::= ObjectSortVariableList
  syntax KItem ::= ObjectSortVariable
  syntax KItem ::= ObjectSortList
  syntax KItem ::= ObjectSortConstructor
  syntax KItem ::= ObjectSort
  syntax KItem ::= ObjectSlashIdentifier
  syntax KItem ::= ObjectPattern
  syntax KItem ::= ObjectNonVariableSort
  syntax KItem ::= ObjectNonSlashIdentifier
  syntax KItem ::= ObjectIdentifier
  syntax KItem ::= ObjectHeadConstructor
  syntax KItem ::= ObjectHead
  syntax KItem ::= ObjectAliasDeclaration
  syntax KItem ::= Modules
  syntax KItem ::= ModuleName
  syntax KItem ::= Module
  syntax KItem ::= MetaVariableList
  syntax KItem ::= MetaVariable
  syntax KItem ::= MetaSymbolDeclaration
  syntax KItem ::= MetaSortVariableList
  syntax KItem ::= MetaSortVariable
  syntax KItem ::= MetaSortList
  syntax KItem ::= MetaSortConstructor
  syntax KItem ::= MetaSort
  syntax KItem ::= MetaPattern
  syntax KItem ::= MetaNonVariableSort
  syntax KItem ::= MetaIdentifier
  syntax KItem ::= MetaHeadConstructor
  syntax KItem ::= MetaHead
  syntax KItem ::= MetaAliasDeclaration
  syntax KItem ::= ImportDeclaration
  syntax KItem ::= Identifier
  syntax KItem ::= HookDeclaration
  syntax KItem ::= Head
  syntax KItem ::= Definition
  syntax KItem ::= Declarations
  syntax KItem ::= Declaration
  syntax KItem ::= Bool
  syntax KItem ::= AxiomDeclaration
  syntax KItem ::= Attribute
  syntax KItem ::= AliasDeclaration
  syntax K
  syntax ImportDeclaration ::= "import" ModuleName Attribute
  syntax Identifier ::= ObjectIdentifier
  syntax Identifier ::= MetaIdentifier
  syntax HookDeclaration ::= "hooked-symbol" ObjectHeadConstructor "{" ObjectSortVariableList "}" "(" ObjectSortList ")" ":" ObjectSort Attribute
  syntax HookDeclaration ::= "hooked-sort" ObjectSortConstructor "{" ObjectSortVariableList "}" Attribute
  syntax Head ::= ObjectHead
  syntax Head ::= MetaHead
  syntax Definition ::= Attribute Modules
  syntax Declarations ::= Declaration Declarations
  syntax Declarations ::= ""
  syntax Declaration ::= SymbolDeclaration
  syntax Declaration ::= SortDeclaration
  syntax Declaration ::= ImportDeclaration
  syntax Declaration ::= HookDeclaration
  syntax Declaration ::= AxiomDeclaration
  syntax Declaration ::= AliasDeclaration
  syntax Bool ::= "isVariable" "(" K ")"
  syntax Bool ::= "isSymbolDeclaration" "(" K ")"
  syntax Bool ::= "isString" "(" K ")"
  syntax Bool ::= "isSortVariableList" "(" K ")"
  syntax Bool ::= "isSortDeclaration" "(" K ")"
  syntax Bool ::= "isSort" "(" K ")"
  syntax Bool ::= "isPatternList" "(" K ")"
  syntax Bool ::= "isPattern" "(" K ")"
  syntax Bool ::= "isObjectVariableList" "(" K ")"
  syntax Bool ::= "isObjectVariable" "(" K ")"
  syntax Bool ::= "isObjectSymbolDeclaration" "(" K ")"
  syntax Bool ::= "isObjectSortVariableList" "(" K ")"
  syntax Bool ::= "isObjectSortVariable" "(" K ")"
  syntax Bool ::= "isObjectSortList" "(" K ")"
  syntax Bool ::= "isObjectSortConstructor" "(" K ")"
  syntax Bool ::= "isObjectSort" "(" K ")"
  syntax Bool ::= "isObjectSlashIdentifier" "(" K ")"
  syntax Bool ::= "isObjectPattern" "(" K ")"
  syntax Bool ::= "isObjectNonVariableSort" "(" K ")"
  syntax Bool ::= "isObjectNonSlashIdentifier" "(" K ")"
  syntax Bool ::= "isObjectIdentifier" "(" K ")"
  syntax Bool ::= "isObjectHeadConstructor" "(" K ")"
  syntax Bool ::= "isObjectHead" "(" K ")"
  syntax Bool ::= "isObjectAliasDeclaration" "(" K ")"
  syntax Bool ::= "isModules" "(" K ")"
  syntax Bool ::= "isModuleName" "(" K ")"
  syntax Bool ::= "isModule" "(" K ")"
  syntax Bool ::= "isMetaVariableList" "(" K ")"
  syntax Bool ::= "isMetaVariable" "(" K ")"
  syntax Bool ::= "isMetaSymbolDeclaration" "(" K ")"
  syntax Bool ::= "isMetaSortVariableList" "(" K ")"
  syntax Bool ::= "isMetaSortVariable" "(" K ")"
  syntax Bool ::= "isMetaSortList" "(" K ")"
  syntax Bool ::= "isMetaSortConstructor" "(" K ")"
  syntax Bool ::= "isMetaSort" "(" K ")"
  syntax Bool ::= "isMetaPattern" "(" K ")"
  syntax Bool ::= "isMetaNonVariableSort" "(" K ")"
  syntax Bool ::= "isMetaIdentifier" "(" K ")"
  syntax Bool ::= "isMetaHeadConstructor" "(" K ")"
  syntax Bool ::= "isMetaHead" "(" K ")"
  syntax Bool ::= "isMetaAliasDeclaration" "(" K ")"
  syntax Bool ::= "isImportDeclaration" "(" K ")"
  syntax Bool ::= "isIdentifier" "(" K ")"
  syntax Bool ::= "isHookDeclaration" "(" K ")"
  syntax Bool ::= "isHead" "(" K ")"
  syntax Bool ::= "isDefinition" "(" K ")"
  syntax Bool ::= "isDeclarations" "(" K ")"
  syntax Bool ::= "isDeclaration" "(" K ")"
  syntax Bool ::= "isAxiomDeclaration" "(" K ")"
  syntax Bool ::= "isAttribute" "(" K ")"
  syntax Bool ::= "isAliasDeclaration" "(" K ")"
  syntax AxiomDeclaration ::= "axiom" "{" SortVariableList "}" Pattern Attribute
  syntax Attribute ::= "[" PatternList "]"
  syntax AliasDeclaration ::= ObjectAliasDeclaration
  syntax AliasDeclaration ::= MetaAliasDeclaration
endmodule


module KSEQ [org.kframework.attributes.Location(Location(58,1,67,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  imports KAST
  imports K-TOP-SORT
endmodule


module KSEQ$SYNTAX [org.kframework.attributes.Location(Location(58,1,67,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  imports K-TOP-SORT$SYNTAX
  syntax associativity left #KSequence
  syntax KBott ::= ".K"
  syntax KBott ::= ".::K"
  syntax KBott ::= "."
  syntax K ::= K "~>" K
  syntax K ::= "(" K ")"
endmodule


module KSEQ-SYMBOLIC [org.kframework.attributes.Location(Location(71,1,85,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KSEQ-SYMBOLIC$SYNTAX
  imports KSEQ
endmodule


module KSEQ-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(71,1,85,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  syntax priority #And > #Or
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\$)([A-Z][A-Za-z0-9'_]*)"
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax K
  syntax Bool ::= "is#Pattern" "(" K ")"
  syntax Bool ::= "is#KVariable" "(" K ")"
  syntax #Pattern ::= K
  syntax #Pattern ::= #Pattern "#Or" #Pattern
  syntax #Pattern ::= #Pattern "#And" #Pattern
  syntax #Pattern ::= "#True"
  syntax #Pattern ::= "#False"
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\!|\\?)?([A-Z][A-Za-z0-9'_]*|_)"
  syntax #KVariable ::= #UpperId
endmodule


module KSTRING [org.kframework.attributes.Location(Location(16,1,19,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KSTRING$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
  ModuleComment( optionally qualified strings, like in Scala "abc", i"abc", r"a*bc", etc.,[org.kframework.attributes.Location(Location(18,3,18,78)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(16,1,19,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]"
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "isKString" "(" K ")"
endmodule


module LANGUAGE-PARSING
  imports KORE
  imports K-TERM
  imports ID-PROGRAM-PARSING
endmodule


module LIST [org.kframework.attributes.Location(Location(193,1,250,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(233,17,233,24)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(TODO(AndreiS): move the paragraph below,[org.kframework.attributes.Location(Location(209,3,209,44)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( \section{User-Defined Lists} It is very common in \K to define a shorthand
   for lists of user-defined sorts. \K 's builtin way of doing this is to use
   List\{KItem,"Separator"\}, where "Separator" is any valid character or
   sequence of characters used to separate distinct elements.
   For example, after defining \\
   syntax KItem ::= Elt\\
   a user could then define
   syntax Elts ::= List\{Elt,","\} \\
   which would be a comma-separated list whose elements are all of sort Elt. A
   user could just as well define \\
   syntax Elts ::= List\{Elt,"and"\} \\
   which would be a list containing elements of sort Elt that are separated with
   the word "and". If only one argument is given, the separator is asumed to be
   commas. So, \\
   syntax Elts = List\{Elt\} \\
   would define a comma-separated list containing elements of sort Elt.
  ,[org.kframework.attributes.Location(Location(210,3,226,4)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( \section{Description} \K lists are ordered collections that may contain
   duplicate elements. These behave more like lists in functional programming
   languages than arrays in imperative programming languages; there's no
   numerical indexing, but instead specific elements are refered to using the
   Mylist,Mylist construct in combination with the MyListItem construct. It's
   worth noting that \K lists aren't exactly like lists in functional languages;
   they're associative, which means that it's easy to access elements at both
   ends of the lists and concatenate them. For example, L:Mylist,E accesses
   element E at the end of a list. ,[org.kframework.attributes.Location(Location(199,3,207,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Remove elements from the beginning and the end of the List. ,[org.kframework.attributes.Location(Location(242,3,242,68)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get the list length ,[org.kframework.attributes.Location(Location(248,3,248,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get an element form the List by index. Positive indices mean from the
   beginning (0 is the first element), and negative indices mean from the end
   (-1 is the last element). ,[org.kframework.attributes.Location(Location(237,3,239,31)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct an empty List: ,[org.kframework.attributes.Location(Location(231,3,231,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton List (a list with only  one element) ,[org.kframework.attributes.Location(Location(234,3,234,67)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct a new List as the concatenation of two Lists. This is similar to
   the append "@" operation in many functional programming languages. ,[org.kframework.attributes.Location(Location(228,3,229,72)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Check element membership in the given list ,[org.kframework.attributes.Location(Location(245,3,245,51)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module LIST$SYNTAX [org.kframework.attributes.Location(Location(193,1,250,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _List_
  syntax List [hook(LIST.List) org.kframework.attributes.Location(Location(197,3,197,31)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax List ::= List List
  syntax List ::= "range" "(" List "," Int "," Int ")"
  syntax List ::= "ListItem" "(" K ")"
  syntax List ::= ".List"
  syntax KItem ::= List
  syntax K ::= List "[" Int "]"
  syntax K
  syntax Int ::= "size" "(" List ")"
  syntax Bool ::= K "in" List
  syntax Bool ::= "isList" "(" K ")"
endmodule


module MAP [org.kframework.attributes.Location(Location(83,1,147,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET
  imports MAP$SYNTAX
  imports LIST
  ModuleComment(| "."                            [function, hook(MAP.unit)],[org.kframework.attributes.Location(Location(99,16,99,77)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(\section{Description} The Map represents a generalized associative array.
   Each key can be paired with an arbitrary value, and can be used to reference
   its associated value. Multiple bindings for the same key are not allowed. ,[org.kframework.attributes.Location(Location(89,3,91,79)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( breaks klabel uniqueness,[org.kframework.attributes.Location(Location(98,16,98,43)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Update the first map by adding all key/value pairs in the second map. If a
   key in the first map exists also in the second map, its associated value will
   be overwritten by the value from the second map. ,[org.kframework.attributes.Location(Location(122,3,124,54)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Update the Map by removing all key/value pairs with the key in the Set. ,[org.kframework.attributes.Location(Location(127,3,127,80)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Update a Map in form of  of keys and values: ,[org.kframework.attributes.Location(Location(112,3,112,53)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Retrieve the value associated with the given key ,[org.kframework.attributes.Location(Location(107,3,107,57)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Remove key/value pair associated with the key from map? ,[org.kframework.attributes.Location(Location(115,3,115,64)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get the difference of two maps interpreted as sets of entries
   ($M_1 \setminus M2$) ,[org.kframework.attributes.Location(Location(118,3,119,26)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get the Map size (number of key/value pairs) ,[org.kframework.attributes.Location(Location(139,3,139,53)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen key of the Map  ,[org.kframework.attributes.Location(Location(145,3,145,50)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get a Set consisting of all keys in the Map:,[org.kframework.attributes.Location(Location(130,3,130,52)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get a List consisting of all values in the Map: ,[org.kframework.attributes.Location(Location(136,3,136,56)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Map (a Map with only one key/value pair). The key
   is on the left and the value is on the right ,[org.kframework.attributes.Location(Location(100,3,101,50)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct a new Map consisting of key/value pairs of two Maps (the keys of
   the two Maps are assumed disjoint) ,[org.kframework.attributes.Location(Location(93,3,94,40)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Check map inclusion ,[org.kframework.attributes.Location(Location(142,3,142,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(  Construct an empty Map ,[org.kframework.attributes.Location(Location(96,3,96,32)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module MAP$SYNTAX [org.kframework.attributes.Location(Location(83,1,147,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports LIST$SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")"
  syntax Map [hook(MAP.Map) org.kframework.attributes.Location(Location(87,3,87,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Map ::= Map Map
  syntax Map ::= Map "[" K "<-" K "]"
  syntax Map ::= Map "[" K "<-" "undef" "]"
  syntax Map ::= Map "-Map" Map
  syntax Map ::= K "|->" K
  syntax Map ::= "updateMap" "(" Map "," Map ")"
  syntax Map ::= "removeAll" "(" Map "," Set ")"
  syntax Map ::= ".Map"
  syntax List ::= "values" "(" Map ")"
  syntax List ::= "keys_list" "(" Map ")"
  syntax KItem ::= Map
  syntax K ::= Map "[" K "]" "orDefault" K
  syntax K ::= Map "[" K "]"
  syntax K ::= "choice" "(" Map ")"
  syntax K
  syntax Int ::= "size" "(" Map ")"
  syntax Bool ::= Map "<=Map" Map
  syntax Bool ::= K "in_keys" "(" Map ")"
  syntax Bool ::= "isMap" "(" K ")"
endmodule


module MINT$SYNTAX [org.kframework.attributes.Location(Location(926,1,1118,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax MInt [hook(MINT.MInt) org.kframework.attributes.Location(Location(931,3,931,31)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax MInt ::= "xorMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "uremMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "udivMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "subMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "shlMInt" "(" MInt "," Int ")"
  syntax MInt ::= "sMinMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "sMaxMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "orMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "negMInt" "(" MInt ")"
  syntax MInt ::= "mulMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "miMInt" "(" List ")"
  syntax MInt ::= "mi" "(" Int "," Int ")"
  syntax MInt ::= "mIntOfDigits" "(" List ")"
  syntax MInt ::= "lshrMInt" "(" MInt "," Int ")"
  syntax MInt ::= "extractMInt" "(" MInt "," Int "," Int ")"
  syntax MInt ::= "concatenateMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "ashrMInt" "(" MInt "," Int ")"
  syntax MInt ::= "andMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "addMInt" "(" MInt "," MInt ")"
  syntax List ::= "usubMInt" "(" MInt "," MInt ")"
  syntax List ::= "umulMInt" "(" MInt "," MInt ")"
  syntax List ::= "uaddMInt" "(" MInt "," MInt ")"
  syntax List ::= "ssubMInt" "(" MInt "," MInt ")"
  syntax List ::= "sremMInt" "(" MInt "," MInt ")"
  syntax List ::= "smulMInt" "(" MInt "," MInt ")"
  syntax List ::= "sdivMInt" "(" MInt "," MInt ")"
  syntax List ::= "saddMInt" "(" MInt "," MInt ")"
  syntax List ::= "digitsOfMInt" "(" MInt "," Int "," Int ")"
  syntax KItem ::= MInt
  syntax K
  syntax Int ::= "uvalueMInt" "(" MInt ")"
  syntax Int ::= "uminMInt" "(" Int ")"
  syntax Int ::= "umaxMInt" "(" Int ")"
  syntax Int ::= "svalueMInt" "(" MInt ")"
  syntax Int ::= "sminMInt" "(" Int ")"
  syntax Int ::= "smaxMInt" "(" Int ")"
  syntax Int ::= "bitwidthMInt" "(" MInt ")"
  syntax Bool ::= "zeroMInt" "(" MInt ")"
  syntax Bool ::= "uoverflowMInt" "(" Int "," Int ")"
  syntax Bool ::= "ultMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "uleMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "ugtMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "ugeMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "soverflowMInt" "(" Int "," Int ")"
  syntax Bool ::= "sltMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "sleMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "sgtMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "sgeMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "overflowMInt" "(" List ")"
  syntax Bool ::= "neMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "isMInt" "(" K ")"
  syntax Bool ::= "eqMInt" "(" MInt "," MInt ")"
endmodule


module PROGRAM-LISTS [org.kframework.attributes.Location(Location(178,1,190,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K
  imports PROGRAM-LISTS$SYNTAX
  ModuleComment( replaces the default productions for lists:,[org.kframework.attributes.Location(Location(181,3,181,49)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( into a series of productions more suitable for programs:,[org.kframework.attributes.Location(Location(184,3,184,62)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(180,3,180,58)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Ne#Es ::= E "," Ne#Es     [klabel('_,_)],[org.kframework.attributes.Location(Location(186,3,186,46)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Es#Terminator ::= ""      [klabel('.Es)],[org.kframework.attributes.Location(Location(185,3,185,46)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Es ::= Ne#Es,[org.kframework.attributes.Location(Location(188,3,188,18)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Es ::= E "," Es [userList("*"), klabel('_,_)],[org.kframework.attributes.Location(Location(182,3,182,51)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment(      | Es#Terminator      // if the list is *,[org.kframework.attributes.Location(Location(189,3,189,51)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment(      | ".Es"    [userList("*"), klabel('.Es)],[org.kframework.attributes.Location(Location(183,3,183,51)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment(         | E Es#Terminator [klabel('_,_)],[org.kframework.attributes.Location(Location(187,3,187,46)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module PROGRAM-LISTS$SYNTAX [org.kframework.attributes.Location(Location(178,1,190,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module RECORD-PRODUCTIONS [org.kframework.attributes.Location(Location(205,1,210,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  ModuleComment( will be able to be parsed with don't-care variables according,[org.kframework.attributes.Location(Location(208,3,208,67)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( to their nonterminal's names,[org.kframework.attributes.Location(Location(209,3,209,34)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( syntax Sort ::= name(Args),[org.kframework.attributes.Location(Location(207,3,207,32)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, prefix productions of the form,[org.kframework.attributes.Location(Location(206,3,206,64)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module RECORD-PRODUCTIONS$SYNTAX [org.kframework.attributes.Location(Location(205,1,210,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module REQUIRES-ENSURES [org.kframework.attributes.Location(Location(129,1,138,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports BASIC-K
endmodule


module REQUIRES-ENSURES$SYNTAX [org.kframework.attributes.Location(Location(129,1,138,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports BASIC-K$SYNTAX
  syntax RuleContent ::= K "when" K "ensures" K
  syntax RuleContent ::= K "when" K
  syntax RuleContent ::= K "requires" K "ensures" K
  syntax RuleContent ::= K "requires" K
  syntax RuleContent ::= K "ensures" K
  syntax RuleContent ::= K
  syntax K
  syntax Bool ::= "isRuleContent" "(" K ")"
endmodule


module RULE-CELLS [org.kframework.attributes.Location(Location(100,1,110,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports RULE-CELLS$SYNTAX
  imports KCELLS
  ModuleComment(syntax Cell ::= "<top>" #OptionalDots K #OptionalDots "</top>" [klabel(<top>)],[org.kframework.attributes.Location(Location(106,3,106,83)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(103,3,103,58)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( generates, for all productions that have the attribute 'cell' or 'maincell',,[org.kframework.attributes.Location(Location(104,3,104,82)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( a production like below:,[org.kframework.attributes.Location(Location(105,3,105,30)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module RULE-CELLS$SYNTAX [org.kframework.attributes.Location(Location(100,1,110,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax K
  syntax Bool ::= "is#OptionalDots" "(" K ")"
  syntax #OptionalDots ::= "..."
  syntax #OptionalDots ::= ""
endmodule


module RULE-LISTS [org.kframework.attributes.Location(Location(192,1,197,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(193,3,193,58)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( adds the subsort production to the parsing module only:,[org.kframework.attributes.Location(Location(194,3,194,61)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
  ModuleComment( Es ::= E        [userList("*")],[org.kframework.attributes.Location(Location(195,3,195,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))])
endmodule


module RULE-LISTS$SYNTAX [org.kframework.attributes.Location(Location(192,1,197,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module SET [org.kframework.attributes.Location(Location(149,1,191,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(162,16,162,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(rule S:Set -Set .Set => S,[org.kframework.attributes.Location(Location(190,3,190,30)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(rule S1:Set -Set (SetItem(K:K) S2:Set) => S1 -Set S2,[org.kframework.attributes.Location(Location(188,3,188,57)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(requires notBool(K in S1),[org.kframework.attributes.Location(Location(189,3,189,30)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( set difference axioms ,[org.kframework.attributes.Location(Location(186,3,186,29)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( \section{Description} The Set represents a mathematical set (a collection
   of unique items). ,[org.kframework.attributes.Location(Location(155,3,156,23)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( TODO(AndreiS): remove this if not used,[org.kframework.attributes.Location(Location(187,3,187,44)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get the intersection of two sets ($A \cap B$) ,[org.kframework.attributes.Location(Location(168,3,168,54)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get the difference of two sets ($A \setminus B$),[org.kframework.attributes.Location(Location(171,3,171,56)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get the cardinality of a set ($|A|$) ,[org.kframework.attributes.Location(Location(180,3,180,45)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen element of the Set ,[org.kframework.attributes.Location(Location(183,3,183,53)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct an empty Set ,[org.kframework.attributes.Location(Location(160,3,160,31)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Set (a Set with only one element $\{ a \}$). To add
   an element $a$ to a set $A$, construct the union of the singleton set
   $\{ a \}$ and $A$ ($\{ a \} \cup A$). ,[org.kframework.attributes.Location(Location(163,3,165,43)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Construct a new Set as the union of two different sets ($A \cup B$) ,[org.kframework.attributes.Location(Location(158,3,158,76)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Check set inclusion ($A \subseteq B$) ,[org.kframework.attributes.Location(Location(177,3,177,46)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Check element membership in a set ($a \in A$) ,[org.kframework.attributes.Location(Location(174,3,174,54)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module SET$SYNTAX [org.kframework.attributes.Location(Location(149,1,191,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _Set_
  syntax Set [hook(SET.Set) org.kframework.attributes.Location(Location(153,3,153,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Set ::= Set Set
  syntax Set ::= Set "-Set" Set
  syntax Set ::= "intersectSet" "(" Set "," Set ")"
  syntax Set ::= "SetItem" "(" K ")"
  syntax Set ::= ".Set"
  syntax KItem ::= Set
  syntax K ::= "choice" "(" Set ")"
  syntax K
  syntax Int ::= "size" "(" Set ")"
  syntax Bool ::= Set "<=Set" Set
  syntax Bool ::= K "in" Set
  syntax Bool ::= "isSet" "(" K ")"
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "isK" "(" K ")"
endmodule


module SORT-KBOTT [org.kframework.attributes.Location(Location(26,1,29,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports SORT-K
endmodule


module SORT-KBOTT$SYNTAX [org.kframework.attributes.Location(Location(26,1,29,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KBott [org.kframework.attributes.Location(Location(28,3,28,14)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "isKBott" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module STDIN-STREAM [org.kframework.attributes.Location(Location(760,1,854,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
endmodule


module STDOUT-STREAM [org.kframework.attributes.Location(Location(856,1,924,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
endmodule


module STRING [org.kframework.attributes.Location(Location(477,1,554,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  rule `<k>`(#KSequence(rfindChar(_12,#token("\"\"","String"),_13),DotVar0)=>#KSequence(#token("-1","Int"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(533) org.kframework.attributes.Location(Location(533,8,533,33)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(rfindChar(S1,S2,I),DotVar0)=>#KSequence(`maxInt(_,_)_INT`(rfindString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),rfindChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)),DotVar0)) requires `_=/=String__STRING`(S2,#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(532) org.kframework.attributes.Location(Location(532,8,532,182)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(findChar(_15,#token("\"\"","String"),_16),DotVar0)=>#KSequence(#token("-1","Int"),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(531) org.kframework.attributes.Location(Location(531,8,531,32)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(findChar(S1,S2,I),DotVar0)=>#KSequence(`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),#token("-1","Int")),findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)))),DotVar0)) requires `_=/=String__STRING`(S2,#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(530) org.kframework.attributes.Location(Location(530,8,530,431)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`replaceFirst(_,_,_)_STRING`(Source,ToReplace,_14),DotVar0)=>#KSequence(Source,DotVar0)) requires `_<Int__INT`(findString(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(543) org.kframework.attributes.Location(Location(543,8,544,57)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`replaceFirst(_,_,_)_STRING`(Source,ToReplace,Replacement),DotVar0)=>#KSequence(`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source))),DotVar0)) requires `_>=Int__INT`(findString(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(540) org.kframework.attributes.Location(Location(540,8,542,66)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`replaceAll(_,_,_)_STRING`(Source,ToReplace,Replacement),DotVar0)=>#KSequence(`replace(_,_,_,_)_STRING`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING`(Source,ToReplace)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(552) org.kframework.attributes.Location(Location(552,8,552,154)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`replace(_,_,_,_)_STRING`(Source,_10,_11,#token("0","Int")),DotVar0)=>#KSequence(Source,DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(551) org.kframework.attributes.Location(Location(551,8,551,49)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`replace(_,_,_,_)_STRING`(Source,ToReplace,Replacement,Count),DotVar0)=>#KSequence(`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source)),ToReplace,Replacement,`_-Int__INT`(Count,#token("1","Int")))),DotVar0)) requires `_>Int__INT`(Count,#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(547) org.kframework.attributes.Location(Location(547,8,550,30)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`countAllOccurrences(_,_)_STRING`(Source,ToCount),DotVar0)=>#KSequence(`_+Int__INT`(#token("1","Int"),`countAllOccurrences(_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToCount,#token("0","Int")),lengthString(ToCount)),lengthString(Source)),ToCount)),DotVar0)) requires `_>=Int__INT`(findString(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(537) org.kframework.attributes.Location(Location(537,8,538,60)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`countAllOccurrences(_,_)_STRING`(Source,ToCount),DotVar0)=>#KSequence(#token("0","Int"),DotVar0)) requires `_<Int__INT`(findString(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(535) org.kframework.attributes.Location(Location(535,8,536,59)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_>String__STRING`(S1,S2),DotVar0)=>#KSequence(`_<String__STRING`(S2,S1),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(527) org.kframework.attributes.Location(Location(527,8,527,52)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_>=String__STRING`(S1,S2),DotVar0)=>#KSequence(`notBool_`(`_<String__STRING`(S1,S2)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(528) org.kframework.attributes.Location(Location(528,8,528,63)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_==String__STRING`(S1,S2),DotVar0)=>#KSequence(`_==K_`(S1,S2),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(514) org.kframework.attributes.Location(Location(514,8,514,49)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_=/=String__STRING`(S1,S2),DotVar0)=>#KSequence(`notBool_`(`_==String__STRING`(S1,S2)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(513) org.kframework.attributes.Location(Location(513,8,513,65)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KSequence(`_<=String__STRING`(S1,S2),DotVar0)=>#KSequence(`notBool_`(`_<String__STRING`(S2,S1)),DotVar0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(526) org.kframework.attributes.Location(Location(526,8,526,63)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) topRule()]
  rule `<k>`(#KRewrite(#KSequence(#Or(#And(`_=/=Int__INT`(I1,I2),#Or(isRule(#token("1039441524","K")))),#And(`_orElseBool__BOOL`(#Or(#And(_3,isRule(#token("1189278331","K"))),#And(#token("false","Bool"),isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("-57979812","K"))),#And(K,isRule(#token("1932788753","K")))),#Or(#And(_9,isRule(#token("-57979812","K"))),#And(#token("false","Bool"),isRule(#token("1932788753","K"))),#And(K,isRule(#token("-960342392","K"))),#And(#token("true","Bool"),isRule(#token("1189278331","K"))))),#Or(isRule(#token("1189278331","K")),isRule(#token("-57979812","K")),isRule(#token("1932788753","K")),isRule(#token("-960342392","K")))),#And(`notBool_`(#Or(#And(#token("false","Bool"),isRule(#token("-434867953","K"))),#And(#token("true","Bool"),isRule(#token("-76345387","K"))))),#Or(isRule(#token("-434867953","K")),isRule(#token("-76345387","K")))),#And(`_orBool__BOOL`(#Or(#And(_0,isRule(#token("726783824","K"))),#And(#token("false","Bool"),isRule(#token("89755605","K"))),#And(#token("true","Bool"),isRule(#token("1955583541","K"))),#And(B,isRule(#token("745649384","K")))),#Or(#And(#token("false","Bool"),isRule(#token("745649384","K"))),#And(_5,isRule(#token("1955583541","K"))),#And(#token("true","Bool"),isRule(#token("726783824","K"))),#And(B,isRule(#token("89755605","K"))))),#Or(isRule(#token("726783824","K")),isRule(#token("1955583541","K")),isRule(#token("89755605","K")),isRule(#token("745649384","K")))),#And(`_impliesBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1241950004","K"))),#And(_7,isRule(#token("-1525320841","K"))),#And(B,isRule(#token("2001971978","K"))),#And(#token("true","Bool"),isRule(#token("1037153131","K")))),#Or(#And(#token("false","Bool"),isRule(#token("2001971978","K"))),#And(_1,isRule(#token("-1241950004","K"))),#And(B,isRule(#token("1037153131","K"))),#And(#token("true","Bool"),isRule(#token("-1525320841","K"))))),#Or(isRule(#token("-1525320841","K")),isRule(#token("2001971978","K")),isRule(#token("1037153131","K")),isRule(#token("-1241950004","K")))),#And(`replaceFirst(_,_,_)_STRING`(Source,ToReplace,#Or(#And(_14,isRule(#token("-1020056296","K"))),#And(Replacement,isRule(#token("-768861175","K"))))),#Or(isRule(#token("-1020056296","K")),isRule(#token("-768861175","K")))),#And(`replaceAll(_,_,_)_STRING`(Source,ToReplace,Replacement),#Or(isRule(#token("-1428505111","K")))),#And(rfindChar(#Or(#And(_12,isRule(#token("-1016982628","K"))),#And(S1,isRule(#token("1273043602","K")))),#Or(#And(S2,isRule(#token("1273043602","K"))),#And(#token("\"\"","String"),isRule(#token("-1016982628","K")))),#Or(#And(I,isRule(#token("1273043602","K"))),#And(_13,isRule(#token("-1016982628","K"))))),#Or(isRule(#token("1273043602","K")),isRule(#token("-1016982628","K")))),#And(`_=/=K__K-EQUAL`(K1,K2),#Or(isRule(#token("-1241915881","K")))),#And(`_andThenBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-1281861781","K"))),#And(_2,isRule(#token("-1857958196","K"))),#And(K,isRule(#token("-347923073","K"))),#And(#token("true","Bool"),isRule(#token("1152435715","K")))),#Or(#And(#token("false","Bool"),isRule(#token("-1857958196","K"))),#And(_8,isRule(#token("-1281861781","K"))),#And(K,isRule(#token("1152435715","K"))),#And(#token("true","Bool"),isRule(#token("-347923073","K"))))),#Or(isRule(#token("-347923073","K")),isRule(#token("1152435715","K")),isRule(#token("-1857958196","K")),isRule(#token("-1281861781","K")))),#And(`_modInt__INT`(I1,I2),#Or(isRule(#token("-782415067","K")))),#And(`_divInt__INT`(I1,I2),#Or(isRule(#token("1581154955","K")))),#And(`_>=String__STRING`(S1,S2),#Or(isRule(#token("100452739","K")))),#And(`_andBool_`(#Or(#And(#token("false","Bool"),isRule(#token("1849541356","K"))),#And(_4,isRule(#token("1922763765","K"))),#And(B,isRule(#token("982862195","K"))),#And(#token("true","Bool"),isRule(#token("-2132293033","K")))),#Or(#And(_6,isRule(#token("1849541356","K"))),#And(#token("false","Bool"),isRule(#token("1922763765","K"))),#And(#token("true","Bool"),isRule(#token("982862195","K"))),#And(B,isRule(#token("-2132293033","K"))))),#Or(isRule(#token("982862195","K")),isRule(#token("1922763765","K")),isRule(#token("-2132293033","K")),isRule(#token("1849541356","K")))),#And(freshInt(I),#Or(isRule(#token("-1852066690","K")))),#And(`_dividesInt__INT`(I1,I2),#Or(isRule(#token("1862900845","K")))),#And(`_<=String__STRING`(S1,S2),#Or(isRule(#token("1956429489","K")))),#And(`_xorBool__BOOL`(#Or(#And(#token("false","Bool"),isRule(#token("-672357244","K"))),#And(B1,isRule(#token("-1954210549","K"))),#And(B,#Or(isRule(#token("348377483","K")),isRule(#token("1401740812","K"))))),#Or(#And(B2,isRule(#token("-1954210549","K"))),#And(#token("false","Bool"),isRule(#token("1401740812","K"))),#And(B,#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")))))),#Or(isRule(#token("-672357244","K")),isRule(#token("348377483","K")),isRule(#token("-1954210549","K")),isRule(#token("1401740812","K")))),#And(`replace(_,_,_,_)_STRING`(Source,#Or(#And(ToReplace,isRule(#token("-1102252154","K"))),#And(_10,isRule(#token("1595175616","K")))),#Or(#And(_11,isRule(#token("1595175616","K"))),#And(Replacement,isRule(#token("-1102252154","K")))),#Or(#And(Count,isRule(#token("-1102252154","K"))),#And(#token("0","Int"),isRule(#token("1595175616","K"))))),#Or(isRule(#token("1595175616","K")),isRule(#token("-1102252154","K")))),#And(`_>String__STRING`(S1,S2),#Or(isRule(#token("597445048","K")))),#And(`_==String__STRING`(S1,S2),#Or(isRule(#token("-1230086999","K")))),#And(`countAllOccurrences(_,_)_STRING`(Source,ToCount),#Or(isRule(#token("-103714097","K")),isRule(#token("-1133576746","K")))),#And(`_==Int_`(I1,I2),#Or(isRule(#token("121465113","K")))),#And(`_=/=String__STRING`(S1,S2),#Or(isRule(#token("489111029","K")))),#And(`_==Bool__BOOL`(K1,K2),#Or(isRule(#token("-2042545919","K")))),#And(findChar(#Or(#And(S1,isRule(#token("502691075","K"))),#And(_15,isRule(#token("-449045104","K")))),#Or(#And(S2,isRule(#token("502691075","K"))),#And(#token("\"\"","String"),isRule(#token("-449045104","K")))),#Or(#And(I,isRule(#token("502691075","K"))),#And(_16,isRule(#token("-449045104","K"))))),#Or(isRule(#token("-449045104","K")),isRule(#token("502691075","K")))),#And(`_=/=Bool__BOOL`(B1,B2),#Or(isRule(#token("-463469799","K"))))),DotVar0),#Or(#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1955583541","K"))),#And(#KSequence(Source,DotVar0),isRule(#token("-1020056296","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-347923073","K"))),#And(#KSequence(`_+Int__INT`(#token("1","Int"),`countAllOccurrences(_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToCount,#token("0","Int")),lengthString(ToCount)),lengthString(Source)),ToCount)),DotVar0),isRule(#token("-103714097","K"))),#And(#KSequence(`_<String__STRING`(S2,S1),DotVar0),isRule(#token("597445048","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1857958196","K"))),#And(#KSequence(I,DotVar0),isRule(#token("-1852066690","K"))),#And(#KSequence(`_==Int_`(`_%Int__INT`(I2,I1),#token("0","Int")),DotVar0),isRule(#token("1862900845","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("726783824","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1241950004","K"))),#And(#KSequence(`notBool_`(`_<String__STRING`(S2,S1)),DotVar0),isRule(#token("1956429489","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-1525320841","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("348377483","K"))),#And(#KSequence(`_==K_`(S1,S2),DotVar0),isRule(#token("-1230086999","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-434867953","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-672357244","K"))),#And(#KSequence(`replace(_,_,_,_)_STRING`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING`(Source,ToReplace)),DotVar0),isRule(#token("-1428505111","K"))),#And(#KSequence(B,DotVar0),isRule(#token("-2132293033","K"))),#And(#KSequence(#token("0","Int"),DotVar0),isRule(#token("-1133576746","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1152435715","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1922763765","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("1849541356","K"))),#And(#KSequence(`_==K_`(K1,K2),DotVar0),isRule(#token("-2042545919","K"))),#And(#KSequence(B,DotVar0),isRule(#token("745649384","K"))),#And(#KSequence(K,DotVar0),isRule(#token("1932788753","K"))),#And(#KSequence(`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),#token("-1","Int")),findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)))),DotVar0),isRule(#token("502691075","K"))),#And(#KSequence(#token("-1","Int"),DotVar0),isRule(#token("-449045104","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1401740812","K"))),#And(#KSequence(`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source)),ToReplace,Replacement,`_-Int__INT`(Count,#token("1","Int")))),DotVar0),isRule(#token("-1102252154","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-1954210549","K"))),#And(#KSequence(`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source))),DotVar0),isRule(#token("-768861175","K"))),#And(#KSequence(`notBool_`(`_<String__STRING`(S1,S2)),DotVar0),isRule(#token("100452739","K"))),#And(#KSequence(`maxInt(_,_)_INT`(rfindString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),rfindChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)),DotVar0),isRule(#token("1273043602","K"))),#And(#KSequence(`notBool_`(`_==K_`(K1,K2)),DotVar0),isRule(#token("-1241915881","K"))),#And(#KSequence(`_==K_`(I1,I2),DotVar0),isRule(#token("121465113","K"))),#And(#KSequence(`notBool_`(`_==Int_`(I1,I2)),DotVar0),isRule(#token("1039441524","K"))),#And(#KSequence(`_/Int__INT`(`_-Int__INT`(I1,`_modInt__INT`(I1,I2)),I2),DotVar0),isRule(#token("1581154955","K"))),#And(#KSequence(#token("-1","Int"),DotVar0),isRule(#token("-1016982628","K"))),#And(#KSequence(B,DotVar0),isRule(#token("982862195","K"))),#And(#KSequence(`notBool_`(`_==Bool__BOOL`(B1,B2)),DotVar0),isRule(#token("-463469799","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("1189278331","K"))),#And(#KSequence(`notBool_`(B),DotVar0),isRule(#token("2001971978","K"))),#And(#KSequence(B,DotVar0),isRule(#token("89755605","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-1281861781","K"))),#And(#KSequence(Source,DotVar0),isRule(#token("1595175616","K"))),#And(#KSequence(#token("true","Bool"),DotVar0),isRule(#token("-57979812","K"))),#And(#KSequence(K,DotVar0),isRule(#token("-960342392","K"))),#And(#KSequence(`notBool_`(`_==String__STRING`(S1,S2)),DotVar0),isRule(#token("489111029","K"))),#And(#KSequence(B,DotVar0),isRule(#token("1037153131","K"))),#And(#KSequence(#token("false","Bool"),DotVar0),isRule(#token("-76345387","K"))),#And(#KSequence(`_%Int__INT`(`_+Int__INT`(`_%Int__INT`(I1,absInt(I2)),absInt(I2)),absInt(I2)),DotVar0),isRule(#token("-782415067","K")))))) requires #token("true","Bool") ensures #token("true","Bool") [automaton()]
endmodule


module STRING$SYNTAX [org.kframework.attributes.Location(Location(477,1,554,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  syntax associativity left _==String__STRING
  syntax associativity left _=/=String__STRING
  syntax associativity left _+String__STRING
  syntax String ::= String "+String" String
  syntax String ::= "substrString" "(" String "," Int "," Int ")"
  syntax String ::= "replaceFirst" "(" String "," String "," String ")"
  syntax String ::= "replaceAll" "(" String "," String "," String ")"
  syntax String ::= "replace" "(" String "," String "," String "," Int ")"
  syntax String ::= "newUUID"
  syntax String ::= "directionalityChar" "(" String ")"
  syntax String ::= "chrChar" "(" Int ")"
  syntax String ::= "categoryChar" "(" String ")"
  syntax String ::= "Int2String" "(" Int ")"
  syntax String ::= "Float2String" "(" Float "," String ")"
  syntax String ::= "Float2String" "(" Float ")"
  syntax String ::= "Base2String" "(" Int "," Int ")"
  syntax KItem ::= "#parseToken" "(" String "," String ")"
  syntax Int ::= "rfindString" "(" String "," String "," Int ")"
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")"
  syntax Int ::= "ordChar" "(" String ")"
  syntax Int ::= "lengthString" "(" String ")"
  syntax Int ::= "findString" "(" String "," String "," Int ")"
  syntax Int ::= "findChar" "(" String "," String "," Int ")"
  syntax Int ::= "countAllOccurrences" "(" String "," String ")"
  syntax Int ::= "String2Int" "(" String ")"
  syntax Int ::= "String2Base" "(" String "," Int ")"
  syntax Float ::= "String2Float" "(" String ")"
  syntax Bool ::= String ">String" String
  syntax Bool ::= String ">=String" String
  syntax Bool ::= String "==String" String
  syntax Bool ::= String "=/=String" String
  syntax Bool ::= String "<String" String
  syntax Bool ::= String "<=String" String
endmodule


module STRING-BUFFER$SYNTAX [org.kframework.attributes.Location(Location(578,1,581,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-BUFFER-SYNTAX$SYNTAX
  imports STRING-BUFFER-SYMBOLIC$SYNTAX
endmodule


module STRING-BUFFER-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(566,1,576,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k)) symbolic()]
  imports STRING-SYNTAX$SYNTAX
  imports STRING-BUFFER-SYNTAX$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
  syntax StringBuffer ::= String
endmodule


module STRING-BUFFER-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(556,1,564,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _+String__STRING-BUFFER-SYNTAX
  syntax StringBuffer [hook(BUFFER.StringBuffer) org.kframework.attributes.Location(Location(560,3,560,49)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax StringBuffer ::= StringBuffer "+String" String
  syntax StringBuffer ::= ".StringBuffer"
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")"
  syntax KItem ::= StringBuffer
  syntax K
  syntax Bool ::= "isStringBuffer" "(" K ")"
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(464,1,475,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
  ModuleComment( StringChar ::= ~[\"\n\r\\] // anything except for Newline, DoubleQuote and Backslash,[org.kframework.attributes.Location(Location(467,3,467,90)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( DoubleQuote StringChar* DoubleQuote,[org.kframework.attributes.Location(Location(466,3,466,41)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment( Double Quoted Strings are of the form:,[org.kframework.attributes.Location(Location(465,3,465,44)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][x] 2*Hex // "\xFF"       Backslash 'x' followed by two   hexadecimal characters,[org.kframework.attributes.Location(Location(469,3,469,105)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][u] 4*Hex // "\uFFFF"     Backslash 'u' followed by four  hexadecimal characters,[org.kframework.attributes.Location(Location(470,3,470,105)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][nrtf\"\\] // Backslash followed by either 'nrtf', DoubleQuote or Backslash,[org.kframework.attributes.Location(Location(468,3,468,100)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][U] 8*Hex // "\UFFffFFff" Backslash 'U' followed by eight hexadecimal characters,[org.kframework.attributes.Location(Location(471,3,471,105)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
  ModuleComment(                              // the code must not be in the range [0xdfff, 0xd800] or exceed 0x10ffff,[org.kframework.attributes.Location(Location(472,3,472,107)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(464,1,475,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(473,3,473,37)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]"
  syntax KItem ::= String
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "isString" "(" K ")"
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(319,1,322,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(319,1,322,9)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax KItem ::= Int
  syntax KItem ::= Bool
  syntax K
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(320,3,320,28)) org.kframework.attributes.Source(Source(/home/hreada/Projects/k5/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+"
  syntax Bool ::= "isInt" "(" K ")"
endmodule