[]
module INVALID-SIZE

// imports
import LIST-SIZER []


// claims
// claim `<generatedTop>`(`<k>`(inj{MyList,KItem}(_0)),_DotVar0,`<size>`(#token("0","Int")))=>`<generatedTop>`(`<k>`(.K),_DotVar0,`<size>`(#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(4), org.kframework.attributes.Location(Location(4,9,5,25)), org.kframework.attributes.Source(Source(/home/stephen/work/k-experiments/list-sizer/././specs/invalid-size.spec)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  claim{} \implies{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMyList{}, SortKItem{}}(Var'Unds'0:SortMyList{}),dotk{}())),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'size'-GT-'{}(\dv{SortInt{}}("0")))), weakAlwaysFinally{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(dotk{}()),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'size'-GT-'{}(\dv{SortInt{}}("0"))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/stephen/work/k-experiments/list-sizer/././specs/invalid-size.spec)"), org'Stop'kframework'Stop'definition'Stop'Production{}(), contentStartLine{}(), contentStartColumn{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(4,9,5,25)")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1,1,6,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/stephen/work/k-experiments/list-sizer/././specs/invalid-size.spec)")]
