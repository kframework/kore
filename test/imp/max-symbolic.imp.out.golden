    <T>
      <k>
        .
      </k>
      <state>
        max |-> ?I:Int
        x |-> ?I:Int
        y |-> ?I0:Int
        z |-> ?I1:Int
      </state>
    </T>
  #And
    {
      false
    #Equals
      ?I:Int <=Int ?I0:Int
    }
  #And
    {
      false
    #Equals
      ?I:Int <=Int ?I1:Int
    }
#Or
    <T>
      <k>
        .
      </k>
      <state>
        max |-> ?I0:Int
        x |-> ?I:Int
        y |-> ?I0:Int
        z |-> ?I1:Int
      </state>
    </T>
  #And
    {
      false
    #Equals
      ?I0:Int <=Int ?I1:Int
    }
  #And
    {
      true
    #Equals
      ?I:Int <=Int ?I0:Int
    }
#Or
    <T>
      <k>
        .
      </k>
      <state>
        max |-> ?I1:Int
        x |-> ?I:Int
        y |-> ?I0:Int
        z |-> ?I1:Int
      </state>
    </T>
  #And
    {
      false
    #Equals
      ?I:Int <=Int ?I0:Int
    }
  #And
    {
      true
    #Equals
      ?I:Int <=Int ?I1:Int
    }
#Or
    <T>
      <k>
        .
      </k>
      <state>
        max |-> ?I1:Int
        x |-> ?I:Int
        y |-> ?I0:Int
        z |-> ?I1:Int
      </state>
    </T>
  #And
    {
      true
    #Equals
      ?I:Int <=Int ?I0:Int
    }
  #And
    {
      true
    #Equals
      ?I0:Int <=Int ?I1:Int
    }
