Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-ATTRIBUTE-2"
            , moduleSentences =
                [ ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = (Id "Nat" AstLocationNone) :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = (Id "#keyVal" AstLocationNone) :: Id Meta
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "hook")))))
                                    , Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "Nat")))))
                                    ]
                                }))))
                            ]
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "plus" AstLocationNone) :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            }
                        , SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = (Id "#keyVal" AstLocationNone) :: Id Meta
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "hook")))))
                                    , Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "Nat")))))
                                    ]
                                }))))
                            , Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = (Id "#key" AstLocationNone) :: Id Meta
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "associative")))))
                                    ]
                                }))))
                            , Fix (UnifiedPattern (UnifiedMeta (Rotate31 (ApplicationPattern Application
                                { applicationSymbolOrAlias =
                                    SymbolOrAlias
                                        { symbolOrAliasConstructor = (Id "#key" AstLocationNone) :: Id Meta
                                        , symbolOrAliasParams = []
                                        }
                                , applicationChildren =
                                    [ Fix (UnifiedPattern (UnifiedMeta (Rotate31 (StringLiteralPattern (StringLiteral "commutative")))))
                                    ]
                                }))))
                            ]
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }