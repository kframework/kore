Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-HOOKSORT-1"
            , moduleSentences =
                [ ObjectSentence (SentenceHookSentence (SentenceHookedSort SentenceSort
                    { sentenceSortName = (Id "S" AstLocationNone) :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    }))
                , ObjectSentence (SentenceAliasSentence SentenceAlias
                    { sentenceAliasAlias =
                        Alias
                            { aliasConstructor = (Id "f" AstLocationNone) :: Id Object
                            , aliasParams = []
                            }
                    , sentenceAliasSorts = []
                    , sentenceAliasReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "S" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            }
                    , sentenceAliasAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }